var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, Input, Output } from "@angular/core";
import { PageElement } from "../page-element";
var ElementListComponent = /** @class */ (function () {
    function ElementListComponent() {
    }
    __decorate([
        Input("elementList"),
        Output("elementList"),
        __metadata("design:type", ElementList)
    ], ElementListComponent.prototype, "elementList", void 0);
    ElementListComponent = __decorate([
        Component({
            selector: "path-element-list",
            templateUrl: "element-list.component.html"
        })
    ], ElementListComponent);
    return ElementListComponent;
}());
export { ElementListComponent };
var ElementList = /** @class */ (function (_super) {
    __extends(ElementList, _super);
    function ElementList(app, pathService, translationService) {
        return _super.call(this, app) || this;
    }
    ElementList.prototype.fromJson = function (modelElement) {
        _super.prototype.fromJson.call(this, modelElement);
        this.type = "elementList";
    };
    return ElementList;
}(PageElement));
export { ElementList };
//# sourceMappingURL=element-list.component.js.map