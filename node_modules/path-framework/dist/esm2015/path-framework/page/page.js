import { PageElement } from "./element/page-element";
export class Page {
    constructor(parentPageElement) {
        this._content = [];
        this._rows = [];
        this._parentPageElement = parentPageElement;
    }
    getShortName() {
        return PageElement.buildShortName(this.name);
    }
    get name() {
        return this._name;
    }
    set name(value) {
        this._name = value;
    }
    get content() {
        return this._content;
    }
    set content(value) {
        this._content = value;
    }
    get id() {
        return this._id;
    }
    set id(value) {
        this._id = value;
    }
    get parentPageElement() {
        return this._parentPageElement;
    }
    updateRows() {
        const rows = [];
        let currentPageRow = null;
        for (const pageElement of this.content) {
            if (pageElement.newRow === true || currentPageRow == null) {
                currentPageRow = new PageRow();
                rows.push(currentPageRow);
            }
            currentPageRow.pageElements.push(pageElement);
        }
        this._rows = rows;
    }
}
class PageRow {
    constructor() {
        this._pageElements = [];
    }
    get pageElements() {
        return this._pageElements;
    }
    isVisible() {
        for (const pageElement of this.pageElements) {
            if (pageElement.visible) {
                return true;
            }
        }
        return false;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3BhdGgtZnJhbWV3b3JrLyIsInNvdXJjZXMiOlsicGF0aC1mcmFtZXdvcmsvcGFnZS9wYWdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSx3QkFBd0IsQ0FBQztBQUVuRCxNQUFNLE9BQU8sSUFBSTtJQU9iLFlBQVksaUJBQThCO1FBSmxDLGFBQVEsR0FBa0IsRUFBRSxDQUFDO1FBQzdCLFVBQUssR0FBYyxFQUFFLENBQUM7UUFJMUIsSUFBSSxDQUFDLGtCQUFrQixHQUFHLGlCQUFpQixDQUFDO0lBQ2hELENBQUM7SUFFTSxZQUFZO1FBQ2YsT0FBTyxXQUFXLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNqRCxDQUFDO0lBRUQsSUFBSSxJQUFJO1FBQ0osT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3RCLENBQUM7SUFFRCxJQUFJLElBQUksQ0FBQyxLQUFhO1FBQ2xCLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO0lBQ3ZCLENBQUM7SUFFRCxJQUFJLE9BQU87UUFDUCxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDekIsQ0FBQztJQUVELElBQUksT0FBTyxDQUFDLEtBQW9CO1FBQzVCLElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO0lBQzFCLENBQUM7SUFFRCxJQUFJLEVBQUU7UUFDRixPQUFPLElBQUksQ0FBQyxHQUFHLENBQUM7SUFDcEIsQ0FBQztJQUVELElBQUksRUFBRSxDQUFDLEtBQWE7UUFDaEIsSUFBSSxDQUFDLEdBQUcsR0FBRyxLQUFLLENBQUM7SUFDckIsQ0FBQztJQUVELElBQUksaUJBQWlCO1FBQ2pCLE9BQU8sSUFBSSxDQUFDLGtCQUFrQixDQUFDO0lBQ25DLENBQUM7SUFFTSxVQUFVO1FBQ2IsTUFBTSxJQUFJLEdBQWMsRUFBRSxDQUFDO1FBRTNCLElBQUksY0FBYyxHQUFZLElBQUksQ0FBQztRQUNuQyxLQUFLLE1BQU0sV0FBVyxJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDcEMsSUFBSSxXQUFXLENBQUMsTUFBTSxLQUFLLElBQUksSUFBSSxjQUFjLElBQUksSUFBSSxFQUFFO2dCQUN2RCxjQUFjLEdBQUcsSUFBSSxPQUFPLEVBQUUsQ0FBQztnQkFDL0IsSUFBSSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQzthQUM3QjtZQUNELGNBQWMsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1NBQ2pEO1FBQ0QsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7SUFDdEIsQ0FBQztDQUNKO0FBRUQsTUFBTSxPQUFPO0lBQWI7UUFDWSxrQkFBYSxHQUFrQixFQUFFLENBQUM7SUFjOUMsQ0FBQztJQVpHLElBQUksWUFBWTtRQUNaLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQztJQUM5QixDQUFDO0lBRU0sU0FBUztRQUNaLEtBQUssTUFBTSxXQUFXLElBQUksSUFBSSxDQUFDLFlBQVksRUFBRTtZQUN6QyxJQUFJLFdBQVcsQ0FBQyxPQUFPLEVBQUU7Z0JBQ3JCLE9BQU8sSUFBSSxDQUFDO2FBQ2Y7U0FDSjtRQUNELE9BQU8sS0FBSyxDQUFDO0lBQ2pCLENBQUM7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7UGFnZUVsZW1lbnR9IGZyb20gXCIuL2VsZW1lbnQvcGFnZS1lbGVtZW50XCI7XHJcblxyXG5leHBvcnQgY2xhc3MgUGFnZSB7XHJcbiAgICBwcml2YXRlIF9uYW1lOiBzdHJpbmc7XHJcbiAgICBwcml2YXRlIF9pZDogc3RyaW5nO1xyXG4gICAgcHJpdmF0ZSBfY29udGVudDogUGFnZUVsZW1lbnRbXSA9IFtdO1xyXG4gICAgcHJpdmF0ZSBfcm93czogUGFnZVJvd1tdID0gW107XHJcbiAgICBwcml2YXRlIHJlYWRvbmx5IF9wYXJlbnRQYWdlRWxlbWVudDogUGFnZUVsZW1lbnQ7XHJcblxyXG4gICAgY29uc3RydWN0b3IocGFyZW50UGFnZUVsZW1lbnQ6IFBhZ2VFbGVtZW50KSB7XHJcbiAgICAgICAgdGhpcy5fcGFyZW50UGFnZUVsZW1lbnQgPSBwYXJlbnRQYWdlRWxlbWVudDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZ2V0U2hvcnROYW1lKCk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIFBhZ2VFbGVtZW50LmJ1aWxkU2hvcnROYW1lKHRoaXMubmFtZSk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IG5hbWUoKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fbmFtZTtcclxuICAgIH1cclxuXHJcbiAgICBzZXQgbmFtZSh2YWx1ZTogc3RyaW5nKSB7XHJcbiAgICAgICAgdGhpcy5fbmFtZSA9IHZhbHVlO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBjb250ZW50KCk6IFBhZ2VFbGVtZW50W10ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9jb250ZW50O1xyXG4gICAgfVxyXG5cclxuICAgIHNldCBjb250ZW50KHZhbHVlOiBQYWdlRWxlbWVudFtdKSB7XHJcbiAgICAgICAgdGhpcy5fY29udGVudCA9IHZhbHVlO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBpZCgpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9pZDtcclxuICAgIH1cclxuXHJcbiAgICBzZXQgaWQodmFsdWU6IHN0cmluZykge1xyXG4gICAgICAgIHRoaXMuX2lkID0gdmFsdWU7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IHBhcmVudFBhZ2VFbGVtZW50KCk6IFBhZ2VFbGVtZW50IHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fcGFyZW50UGFnZUVsZW1lbnQ7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHVwZGF0ZVJvd3MoKSB7XHJcbiAgICAgICAgY29uc3Qgcm93czogUGFnZVJvd1tdID0gW107XHJcblxyXG4gICAgICAgIGxldCBjdXJyZW50UGFnZVJvdzogUGFnZVJvdyA9IG51bGw7XHJcbiAgICAgICAgZm9yIChjb25zdCBwYWdlRWxlbWVudCBvZiB0aGlzLmNvbnRlbnQpIHtcclxuICAgICAgICAgICAgaWYgKHBhZ2VFbGVtZW50Lm5ld1JvdyA9PT0gdHJ1ZSB8fCBjdXJyZW50UGFnZVJvdyA9PSBudWxsKSB7XHJcbiAgICAgICAgICAgICAgICBjdXJyZW50UGFnZVJvdyA9IG5ldyBQYWdlUm93KCk7XHJcbiAgICAgICAgICAgICAgICByb3dzLnB1c2goY3VycmVudFBhZ2VSb3cpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGN1cnJlbnRQYWdlUm93LnBhZ2VFbGVtZW50cy5wdXNoKHBhZ2VFbGVtZW50KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5fcm93cyA9IHJvd3M7XHJcbiAgICB9XHJcbn1cclxuXHJcbmNsYXNzIFBhZ2VSb3cge1xyXG4gICAgcHJpdmF0ZSBfcGFnZUVsZW1lbnRzOiBQYWdlRWxlbWVudFtdID0gW107XHJcblxyXG4gICAgZ2V0IHBhZ2VFbGVtZW50cygpOiBQYWdlRWxlbWVudFtdIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fcGFnZUVsZW1lbnRzO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBpc1Zpc2libGUoKTogYm9vbGVhbiB7XHJcbiAgICAgICAgZm9yIChjb25zdCBwYWdlRWxlbWVudCBvZiB0aGlzLnBhZ2VFbGVtZW50cykge1xyXG4gICAgICAgICAgICBpZiAocGFnZUVsZW1lbnQudmlzaWJsZSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==