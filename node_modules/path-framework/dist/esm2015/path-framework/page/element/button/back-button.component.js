import * as tslib_1 from "tslib";
import { Component, Input, Output } from "@angular/core";
import { StringUtility } from "../../../utility/string-utility";
import { Button } from "./button.component";
let BackButtonComponent = class BackButtonComponent {
};
tslib_1.__decorate([
    Input("button"),
    Output("button")
], BackButtonComponent.prototype, "button", void 0);
BackButtonComponent = tslib_1.__decorate([
    Component({
        selector: "path-back-button",
        template: "<a (click)=\"button.onClick()\" class=\"fa-links\">\r\n\t<div class=\"thumbnail tile tile-button {{(button.width <= 1 ? 'tile-medium' : (button.width == 2 ? 'tile-wide' : (button.width == 3 ? 'tile-wide-3' : (button.width >= 4 ? 'tile-wide-4' : ''))))}} backbutton {{button.cssGroupBorder}} {{button.cssClass}}\" [ngStyle]=\"button.cssStyle\">\r\n\t\t<div class=\"h3\">{{button.name}}</div>\r\n\t\t<i class=\"fa fa-2x fa-backward\"></i>\r\n\t</div>\r\n</a>"
    })
], BackButtonComponent);
export { BackButtonComponent };
export class BackButton extends Button {
    constructor(app, pathService, translationService) {
        super(app, pathService, translationService);
    }
    onClick() {
        this.app.navigateBack();
    }
    fromJson(modelElement) {
        if (StringUtility.isEmpty(modelElement["color"])) {
            modelElement["color"] = "silver";
        }
        super.fromJson(modelElement);
        this.type = "backbutton";
        this.name = this.translationService.getText("Back");
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFjay1idXR0b24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vcGF0aC1mcmFtZXdvcmsvIiwic291cmNlcyI6WyJwYXRoLWZyYW1ld29yay9wYWdlL2VsZW1lbnQvYnV0dG9uL2JhY2stYnV0dG9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBSXZELE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSxpQ0FBaUMsQ0FBQztBQUM5RCxPQUFPLEVBQUMsTUFBTSxFQUFDLE1BQU0sb0JBQW9CLENBQUM7QUFNMUMsSUFBYSxtQkFBbUIsR0FBaEMsTUFBYSxtQkFBbUI7Q0FJL0IsQ0FBQTtBQURHO0lBRkMsS0FBSyxDQUFDLFFBQVEsQ0FBQztJQUNmLE1BQU0sQ0FBQyxRQUFRLENBQUM7bURBQ0U7QUFIVixtQkFBbUI7SUFKL0IsU0FBUyxDQUFDO1FBQ1AsUUFBUSxFQUFFLGtCQUFrQjtRQUM1QixvZEFBeUM7S0FDNUMsQ0FBQztHQUNXLG1CQUFtQixDQUkvQjtTQUpZLG1CQUFtQjtBQU1oQyxNQUFNLE9BQU8sVUFBVyxTQUFRLE1BQU07SUFFbEMsWUFBWSxHQUFhLEVBQUUsV0FBd0IsRUFBRSxrQkFBc0M7UUFDdkYsS0FBSyxDQUFDLEdBQUcsRUFBRSxXQUFXLEVBQUUsa0JBQWtCLENBQUMsQ0FBQztJQUNoRCxDQUFDO0lBRU0sT0FBTztRQUNWLElBQUksQ0FBQyxHQUFHLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDNUIsQ0FBQztJQUVNLFFBQVEsQ0FBQyxZQUFZO1FBQ3hCLElBQUksYUFBYSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLENBQUMsRUFBRTtZQUM5QyxZQUFZLENBQUMsT0FBTyxDQUFDLEdBQUcsUUFBUSxDQUFDO1NBQ3BDO1FBQ0QsS0FBSyxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUM3QixJQUFJLENBQUMsSUFBSSxHQUFHLFlBQVksQ0FBQztRQUN6QixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDeEQsQ0FBQztDQUVKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIElucHV0LCBPdXRwdXR9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcbmltcG9ydCB7SVBhdGhBcHB9IGZyb20gXCIuLi8uLi8uLi9wYXRoaW50ZXJmYWNlXCI7XHJcbmltcG9ydCB7UGF0aFNlcnZpY2V9IGZyb20gXCIuLi8uLi8uLi9zZXJ2aWNlL3BhdGguc2VydmljZVwiO1xyXG5pbXBvcnQge1RyYW5zbGF0aW9uU2VydmljZX0gZnJvbSBcIi4uLy4uLy4uL3NlcnZpY2UvdHJhbnNsYXRpb24uc2VydmljZVwiO1xyXG5pbXBvcnQge1N0cmluZ1V0aWxpdHl9IGZyb20gXCIuLi8uLi8uLi91dGlsaXR5L3N0cmluZy11dGlsaXR5XCI7XHJcbmltcG9ydCB7QnV0dG9ufSBmcm9tIFwiLi9idXR0b24uY29tcG9uZW50XCI7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICAgIHNlbGVjdG9yOiBcInBhdGgtYmFjay1idXR0b25cIixcclxuICAgIHRlbXBsYXRlVXJsOiBcImJhY2stYnV0dG9uLmNvbXBvbmVudC5odG1sXCJcclxufSlcclxuZXhwb3J0IGNsYXNzIEJhY2tCdXR0b25Db21wb25lbnQge1xyXG4gICAgQElucHV0KFwiYnV0dG9uXCIpXHJcbiAgICBAT3V0cHV0KFwiYnV0dG9uXCIpXHJcbiAgICBidXR0b246IEJhY2tCdXR0b247XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBCYWNrQnV0dG9uIGV4dGVuZHMgQnV0dG9uIHtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihhcHA6IElQYXRoQXBwLCBwYXRoU2VydmljZTogUGF0aFNlcnZpY2UsIHRyYW5zbGF0aW9uU2VydmljZTogVHJhbnNsYXRpb25TZXJ2aWNlKSB7XHJcbiAgICAgICAgc3VwZXIoYXBwLCBwYXRoU2VydmljZSwgdHJhbnNsYXRpb25TZXJ2aWNlKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgb25DbGljaygpIHtcclxuICAgICAgICB0aGlzLmFwcC5uYXZpZ2F0ZUJhY2soKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZnJvbUpzb24obW9kZWxFbGVtZW50KSB7XHJcbiAgICAgICAgaWYgKFN0cmluZ1V0aWxpdHkuaXNFbXB0eShtb2RlbEVsZW1lbnRbXCJjb2xvclwiXSkpIHtcclxuICAgICAgICAgICAgbW9kZWxFbGVtZW50W1wiY29sb3JcIl0gPSBcInNpbHZlclwiO1xyXG4gICAgICAgIH1cclxuICAgICAgICBzdXBlci5mcm9tSnNvbihtb2RlbEVsZW1lbnQpO1xyXG4gICAgICAgIHRoaXMudHlwZSA9IFwiYmFja2J1dHRvblwiO1xyXG4gICAgICAgIHRoaXMubmFtZSA9IHRoaXMudHJhbnNsYXRpb25TZXJ2aWNlLmdldFRleHQoXCJCYWNrXCIpO1xyXG4gICAgfVxyXG5cclxufVxyXG4iXX0=