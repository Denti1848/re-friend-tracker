import * as tslib_1 from "tslib";
import { Button } from "./button.component";
import { Output, Input, Component } from "@angular/core";
import { KeyUtility } from "../../../utility/key-utility";
let PageDeleteButtonComponent = class PageDeleteButtonComponent {
};
tslib_1.__decorate([
    Input("button"),
    Output("button")
], PageDeleteButtonComponent.prototype, "button", void 0);
PageDeleteButtonComponent = tslib_1.__decorate([
    Component({
        selector: "path-page-delete-button",
        template: "<a (click)=\"button.onClick()\" class=\"fa-links\">\r\n\t<div class=\"thumbnail tile tile-button {{(button.width <= 1 ? 'tile-medium' : (button.width == 2 ? 'tile-wide' : (button.width == 3 ? 'tile-wide-3' : (button.width >= 4 ? 'tile-wide-4' : ''))))}} tile-red col-md-3 {{button.cssGroupBorder}} {{button.cssClass}}\" [ngStyle]=\"button.cssStyle\">\r\n\t\t<div class=\"h3\">{{button.name}}</div>\r\n\t\t<i class=\"fa fa-2x fa-remove\"></i>\r\n\t</div>\r\n</a>\r\n"
    })
], PageDeleteButtonComponent);
export { PageDeleteButtonComponent };
export class PageDeleteButton extends Button {
    constructor(app, pathService, translationService) {
        super(app, pathService, translationService);
        this.name = translationService.getText("Delete");
    }
    onClick() {
        this.getApp().yesNo(this.translationService.getText("DeleteWarningQuestion"), () => {
            this.pathService.serverDelete(this.getApp().getBackendUrl(), this.url, () => {
                this.getApp().navigateBack();
                this.getApp().refreshCurrentPage();
            });
        }, () => {
        });
    }
    fromJson(modelElement) {
        super.fromJson(modelElement);
        this.type = "deleteButton";
        this.url = KeyUtility.translateUrl(modelElement["url"], null, false, this.parentPageElement);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnZS1kZWxldGUtYnV0dG9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3BhdGgtZnJhbWV3b3JrLyIsInNvdXJjZXMiOlsicGF0aC1mcmFtZXdvcmsvcGFnZS9lbGVtZW50L2J1dHRvbi9wYWdlLWRlbGV0ZS1idXR0b24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUMsTUFBTSxFQUFDLE1BQU0sb0JBQW9CLENBQUM7QUFJMUMsT0FBTyxFQUFDLE1BQU0sRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3ZELE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSw4QkFBOEIsQ0FBQztBQU14RCxJQUFhLHlCQUF5QixHQUF0QyxNQUFhLHlCQUF5QjtDQUlyQyxDQUFBO0FBREc7SUFGQyxLQUFLLENBQUMsUUFBUSxDQUFDO0lBQ2YsTUFBTSxDQUFDLFFBQVEsQ0FBQzt5REFDUTtBQUhoQix5QkFBeUI7SUFKckMsU0FBUyxDQUFDO1FBQ1AsUUFBUSxFQUFFLHlCQUF5QjtRQUNuQyw2ZEFBZ0Q7S0FDbkQsQ0FBQztHQUNXLHlCQUF5QixDQUlyQztTQUpZLHlCQUF5QjtBQU10QyxNQUFNLE9BQU8sZ0JBQWlCLFNBQVEsTUFBTTtJQUV4QyxZQUFZLEdBQWEsRUFBRSxXQUF3QixFQUFFLGtCQUFzQztRQUN2RixLQUFLLENBQUMsR0FBRyxFQUFFLFdBQVcsRUFBRSxrQkFBa0IsQ0FBQyxDQUFDO1FBQzVDLElBQUksQ0FBQyxJQUFJLEdBQUcsa0JBQWtCLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3JELENBQUM7SUFFTSxPQUFPO1FBQ1YsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsa0JBQWtCLENBQUMsT0FBTyxDQUFDLHVCQUF1QixDQUFDLEVBQUUsR0FBRyxFQUFFO1lBQy9FLElBQUksQ0FBQyxXQUFXLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxhQUFhLEVBQUUsRUFBRSxJQUFJLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRTtnQkFDeEUsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLFlBQVksRUFBRSxDQUFDO2dCQUM3QixJQUFJLENBQUMsTUFBTSxFQUFFLENBQUMsa0JBQWtCLEVBQUUsQ0FBQztZQUN2QyxDQUFDLENBQUMsQ0FBQztRQUNQLENBQUMsRUFBRSxHQUFHLEVBQUU7UUFDUixDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFTSxRQUFRLENBQUMsWUFBWTtRQUN4QixLQUFLLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQzdCLElBQUksQ0FBQyxJQUFJLEdBQUcsY0FBYyxDQUFDO1FBQzNCLElBQUksQ0FBQyxHQUFHLEdBQUcsVUFBVSxDQUFDLFlBQVksQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxJQUFJLENBQUMsaUJBQWlCLENBQUMsQ0FBQztJQUNqRyxDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0J1dHRvbn0gZnJvbSBcIi4vYnV0dG9uLmNvbXBvbmVudFwiO1xyXG5pbXBvcnQge1BhdGhTZXJ2aWNlfSBmcm9tIFwiLi4vLi4vLi4vc2VydmljZS9wYXRoLnNlcnZpY2VcIjtcclxuaW1wb3J0IHtJUGF0aEFwcH0gZnJvbSBcIi4uLy4uLy4uL3BhdGhpbnRlcmZhY2VcIjtcclxuaW1wb3J0IHtUcmFuc2xhdGlvblNlcnZpY2V9IGZyb20gXCIuLi8uLi8uLi9zZXJ2aWNlL3RyYW5zbGF0aW9uLnNlcnZpY2VcIjtcclxuaW1wb3J0IHtPdXRwdXQsIElucHV0LCBDb21wb25lbnR9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcbmltcG9ydCB7S2V5VXRpbGl0eX0gZnJvbSBcIi4uLy4uLy4uL3V0aWxpdHkva2V5LXV0aWxpdHlcIjtcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6IFwicGF0aC1wYWdlLWRlbGV0ZS1idXR0b25cIixcclxuICAgIHRlbXBsYXRlVXJsOiBcInBhZ2UtZGVsZXRlLWJ1dHRvbi5jb21wb25lbnQuaHRtbFwiXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBQYWdlRGVsZXRlQnV0dG9uQ29tcG9uZW50IHtcclxuICAgIEBJbnB1dChcImJ1dHRvblwiKVxyXG4gICAgQE91dHB1dChcImJ1dHRvblwiKVxyXG4gICAgYnV0dG9uOiBQYWdlRGVsZXRlQnV0dG9uO1xyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgUGFnZURlbGV0ZUJ1dHRvbiBleHRlbmRzIEJ1dHRvbiB7XHJcblxyXG4gICAgY29uc3RydWN0b3IoYXBwOiBJUGF0aEFwcCwgcGF0aFNlcnZpY2U6IFBhdGhTZXJ2aWNlLCB0cmFuc2xhdGlvblNlcnZpY2U6IFRyYW5zbGF0aW9uU2VydmljZSkge1xyXG4gICAgICAgIHN1cGVyKGFwcCwgcGF0aFNlcnZpY2UsIHRyYW5zbGF0aW9uU2VydmljZSk7XHJcbiAgICAgICAgdGhpcy5uYW1lID0gdHJhbnNsYXRpb25TZXJ2aWNlLmdldFRleHQoXCJEZWxldGVcIik7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIG9uQ2xpY2soKSB7XHJcbiAgICAgICAgdGhpcy5nZXRBcHAoKS55ZXNObyh0aGlzLnRyYW5zbGF0aW9uU2VydmljZS5nZXRUZXh0KFwiRGVsZXRlV2FybmluZ1F1ZXN0aW9uXCIpLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMucGF0aFNlcnZpY2Uuc2VydmVyRGVsZXRlKHRoaXMuZ2V0QXBwKCkuZ2V0QmFja2VuZFVybCgpLCB0aGlzLnVybCwgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5nZXRBcHAoKS5uYXZpZ2F0ZUJhY2soKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuZ2V0QXBwKCkucmVmcmVzaEN1cnJlbnRQYWdlKCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0sICgpID0+IHtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZnJvbUpzb24obW9kZWxFbGVtZW50KSB7XHJcbiAgICAgICAgc3VwZXIuZnJvbUpzb24obW9kZWxFbGVtZW50KTtcclxuICAgICAgICB0aGlzLnR5cGUgPSBcImRlbGV0ZUJ1dHRvblwiO1xyXG4gICAgICAgIHRoaXMudXJsID0gS2V5VXRpbGl0eS50cmFuc2xhdGVVcmwobW9kZWxFbGVtZW50W1widXJsXCJdLCBudWxsLCBmYWxzZSwgdGhpcy5wYXJlbnRQYWdlRWxlbWVudCk7XHJcbiAgICB9XHJcbn1cclxuIl19