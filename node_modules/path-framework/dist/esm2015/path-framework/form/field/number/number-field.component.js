import * as tslib_1 from "tslib";
import { Component, Input, Output } from "@angular/core";
import { ValueField } from "../value-field";
let NumberFieldComponent = class NumberFieldComponent {
};
tslib_1.__decorate([
    Input("field"),
    Output("field")
], NumberFieldComponent.prototype, "field", void 0);
NumberFieldComponent = tslib_1.__decorate([
    Component({
        selector: "path-numberfield",
        template: "<path-form-field-label [label]=\"field.name\" [required]=\"field.required\"></path-form-field-label>\r\n<div [class.col-md-4]=\"field.width == 1\" [class.col-md-10]=\"field.width == 2\">\r\n    <div class=\"input-group\">\r\n        <input min=\"{{field.min}}\" max=\"{{field.max}}\" step=\"{{field.getStep()}}\" *ngIf=\"field.height == null || field.height <= 1\" #model=\"ngModel\" [readonly]=\"field.isReadonly()\" [class.required-field]=\"(!model.valid &&!model.pristine && field.required)\" [required]=\"field.required\" [(ngModel)]=field.value type=\"number\" class=\"form-control\" placeholder=\"\">\r\n    </div>\r\n</div>\r\n"
    })
], NumberFieldComponent);
export { NumberFieldComponent };
export class NumberField extends ValueField {
    get min() {
        return this._min;
    }
    set min(value) {
        this._min = value;
    }
    get max() {
        return this._max;
    }
    set max(value) {
        this._max = value;
    }
    get digits() {
        return this._digits;
    }
    set digits(value) {
        this._digits = value;
    }
    getStep() {
        if (this._digits == null) {
            return "";
        }
        else if (this._digits === 0) {
            return "0";
        }
        // e.g. 3 => 0.001
        let step = "0.";
        for (let k = 0; k < this._digits - 1; k++) {
            step = step + "0";
        }
        return step + "1";
    }
    fromJson(modelFormField) {
        super.fromJson(modelFormField);
        if (modelFormField["min"] != null) {
            this.min = modelFormField["min"];
        }
        if (modelFormField["max"] != null) {
            this.max = modelFormField["max"];
        }
        if (modelFormField["digits"] != null) {
            this.digits = modelFormField["digits"];
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnVtYmVyLWZpZWxkLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3BhdGgtZnJhbWV3b3JrLyIsInNvdXJjZXMiOlsicGF0aC1mcmFtZXdvcmsvZm9ybS9maWVsZC9udW1iZXIvbnVtYmVyLWZpZWxkLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3ZELE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQU0xQyxJQUFhLG9CQUFvQixHQUFqQyxNQUFhLG9CQUFvQjtDQUloQyxDQUFBO0FBREc7SUFGQyxLQUFLLENBQUMsT0FBTyxDQUFDO0lBQ2QsTUFBTSxDQUFDLE9BQU8sQ0FBQzttREFDRztBQUhWLG9CQUFvQjtJQUpoQyxTQUFTLENBQUM7UUFDUCxRQUFRLEVBQUUsa0JBQWtCO1FBQzVCLHNvQkFBMEM7S0FDN0MsQ0FBQztHQUNXLG9CQUFvQixDQUloQztTQUpZLG9CQUFvQjtBQU1qQyxNQUFNLE9BQU8sV0FBWSxTQUFRLFVBQWtCO0lBSy9DLElBQUksR0FBRztRQUNILE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQztJQUNyQixDQUFDO0lBRUQsSUFBSSxHQUFHLENBQUMsS0FBYTtRQUNqQixJQUFJLENBQUMsSUFBSSxHQUFHLEtBQUssQ0FBQztJQUN0QixDQUFDO0lBRUQsSUFBSSxHQUFHO1FBQ0gsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDO0lBQ3JCLENBQUM7SUFFRCxJQUFJLEdBQUcsQ0FBQyxLQUFhO1FBQ2pCLElBQUksQ0FBQyxJQUFJLEdBQUcsS0FBSyxDQUFDO0lBQ3RCLENBQUM7SUFFRCxJQUFJLE1BQU07UUFDTixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUM7SUFDeEIsQ0FBQztJQUVELElBQUksTUFBTSxDQUFDLEtBQWE7UUFDcEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7SUFDekIsQ0FBQztJQUVNLE9BQU87UUFDVixJQUFJLElBQUksQ0FBQyxPQUFPLElBQUksSUFBSSxFQUFFO1lBQ3RCLE9BQU8sRUFBRSxDQUFDO1NBQ2I7YUFBTSxJQUFJLElBQUksQ0FBQyxPQUFPLEtBQUssQ0FBQyxFQUFFO1lBQzNCLE9BQU8sR0FBRyxDQUFDO1NBQ2Q7UUFDRCxrQkFBa0I7UUFDbEIsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2hCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsT0FBTyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUN2QyxJQUFJLEdBQUcsSUFBSSxHQUFHLEdBQUcsQ0FBQztTQUNyQjtRQUNELE9BQU8sSUFBSSxHQUFHLEdBQUcsQ0FBQztJQUN0QixDQUFDO0lBRU0sUUFBUSxDQUFDLGNBQWM7UUFDMUIsS0FBSyxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUMvQixJQUFJLGNBQWMsQ0FBQyxLQUFLLENBQUMsSUFBSSxJQUFJLEVBQUU7WUFDL0IsSUFBSSxDQUFDLEdBQUcsR0FBRyxjQUFjLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDcEM7UUFDRCxJQUFJLGNBQWMsQ0FBQyxLQUFLLENBQUMsSUFBSSxJQUFJLEVBQUU7WUFDL0IsSUFBSSxDQUFDLEdBQUcsR0FBRyxjQUFjLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDcEM7UUFDRCxJQUFJLGNBQWMsQ0FBQyxRQUFRLENBQUMsSUFBSSxJQUFJLEVBQUU7WUFDbEMsSUFBSSxDQUFDLE1BQU0sR0FBRyxjQUFjLENBQUMsUUFBUSxDQUFDLENBQUM7U0FDMUM7SUFDTCxDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgSW5wdXQsIE91dHB1dH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuaW1wb3J0IHtWYWx1ZUZpZWxkfSBmcm9tIFwiLi4vdmFsdWUtZmllbGRcIjtcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6IFwicGF0aC1udW1iZXJmaWVsZFwiLFxyXG4gICAgdGVtcGxhdGVVcmw6IFwibnVtYmVyLWZpZWxkLmNvbXBvbmVudC5odG1sXCJcclxufSlcclxuZXhwb3J0IGNsYXNzIE51bWJlckZpZWxkQ29tcG9uZW50IHtcclxuICAgIEBJbnB1dChcImZpZWxkXCIpXHJcbiAgICBAT3V0cHV0KFwiZmllbGRcIilcclxuICAgIGZpZWxkOiBOdW1iZXJGaWVsZDtcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIE51bWJlckZpZWxkIGV4dGVuZHMgVmFsdWVGaWVsZDxudW1iZXI+IHtcclxuICAgIHByaXZhdGUgX21pbjogbnVtYmVyO1xyXG4gICAgcHJpdmF0ZSBfbWF4OiBudW1iZXI7XHJcbiAgICBwcml2YXRlIF9kaWdpdHM6IG51bWJlcjtcclxuXHJcbiAgICBnZXQgbWluKCk6IG51bWJlciB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX21pbjtcclxuICAgIH1cclxuXHJcbiAgICBzZXQgbWluKHZhbHVlOiBudW1iZXIpIHtcclxuICAgICAgICB0aGlzLl9taW4gPSB2YWx1ZTtcclxuICAgIH1cclxuXHJcbiAgICBnZXQgbWF4KCk6IG51bWJlciB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX21heDtcclxuICAgIH1cclxuXHJcbiAgICBzZXQgbWF4KHZhbHVlOiBudW1iZXIpIHtcclxuICAgICAgICB0aGlzLl9tYXggPSB2YWx1ZTtcclxuICAgIH1cclxuXHJcbiAgICBnZXQgZGlnaXRzKCk6IG51bWJlciB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2RpZ2l0cztcclxuICAgIH1cclxuXHJcbiAgICBzZXQgZGlnaXRzKHZhbHVlOiBudW1iZXIpIHtcclxuICAgICAgICB0aGlzLl9kaWdpdHMgPSB2YWx1ZTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZ2V0U3RlcCgpOiBzdHJpbmcge1xyXG4gICAgICAgIGlmICh0aGlzLl9kaWdpdHMgPT0gbnVsbCkge1xyXG4gICAgICAgICAgICByZXR1cm4gXCJcIjtcclxuICAgICAgICB9IGVsc2UgaWYgKHRoaXMuX2RpZ2l0cyA9PT0gMCkge1xyXG4gICAgICAgICAgICByZXR1cm4gXCIwXCI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIGUuZy4gMyA9PiAwLjAwMVxyXG4gICAgICAgIGxldCBzdGVwID0gXCIwLlwiO1xyXG4gICAgICAgIGZvciAobGV0IGsgPSAwOyBrIDwgdGhpcy5fZGlnaXRzIC0gMTsgaysrKSB7XHJcbiAgICAgICAgICAgIHN0ZXAgPSBzdGVwICsgXCIwXCI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBzdGVwICsgXCIxXCI7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGZyb21Kc29uKG1vZGVsRm9ybUZpZWxkKSB7XHJcbiAgICAgICAgc3VwZXIuZnJvbUpzb24obW9kZWxGb3JtRmllbGQpO1xyXG4gICAgICAgIGlmIChtb2RlbEZvcm1GaWVsZFtcIm1pblwiXSAhPSBudWxsKSB7XHJcbiAgICAgICAgICAgIHRoaXMubWluID0gbW9kZWxGb3JtRmllbGRbXCJtaW5cIl07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChtb2RlbEZvcm1GaWVsZFtcIm1heFwiXSAhPSBudWxsKSB7XHJcbiAgICAgICAgICAgIHRoaXMubWF4ID0gbW9kZWxGb3JtRmllbGRbXCJtYXhcIl07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChtb2RlbEZvcm1GaWVsZFtcImRpZ2l0c1wiXSAhPSBudWxsKSB7XHJcbiAgICAgICAgICAgIHRoaXMuZGlnaXRzID0gbW9kZWxGb3JtRmllbGRbXCJkaWdpdHNcIl07XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiJdfQ==