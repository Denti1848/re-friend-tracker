import { IButton, IButtonHandler, IList, IListHandler, IPathApp } from "../../../pathinterface";
import { PathService } from "../../../service/path.service";
import { AfterViewInit } from "@angular/core";
import { ButtonGroup } from "../button-group/button-group.component";
import { PageElement } from "../page-element";
import { TranslationService } from "../../../service/translation.service";
import { Button } from "../button/button.component";
export declare class ListComponent implements AfterViewInit {
    list: List;
    ngAfterViewInit(): void;
}
export declare class List extends PageElement implements IList {
    private pathService;
    private translationService;
    private _buttonGroups;
    private _search;
    private _limit;
    private _searchRequired;
    private _searchRequest;
    private _searchLabel;
    private _searchInputLabel;
    private _searchText;
    private _searchTextChanged;
    private _searchButton;
    private _handler;
    private _buttonHandler;
    private _icon;
    private _color;
    private _form;
    private _formHandler;
    private _page;
    private _mockData;
    private _url;
    constructor(app: IPathApp, pathService: PathService, translationService: TranslationService);
    getContent(): IButton[];
    refresh(searchText: string, afterRefreshHandler: () => void): void;
    filterChanged(text: string): void;
    filter(): void;
    private filterVisibleButtonGroups;
    private setSearchResultsCountMessage;
    private visibleItemSize;
    buttonGroups: ButtonGroup[];
    search: boolean;
    handler: IListHandler;
    buttonHandler: IButtonHandler;
    icon: string;
    color: string;
    form: string;
    formHandler: string;
    page: string;
    mockData: any;
    url: string;
    limit: number;
    readonly searchRequired: boolean;
    readonly searchRequest: boolean;
    searchText: string;
    searchLabel: string;
    searchInputLabel: string;
    readonly searchButton: Button;
    fromJson(modelElement: any): void;
}
