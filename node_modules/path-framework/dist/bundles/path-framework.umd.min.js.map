{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://path-framework/path-framework/form/field/form-field.ts","ng://path-framework/path-framework/form/form.component.ts","ng://path-framework/path-framework/form/field/value-field.ts","ng://path-framework/path-framework/form/field/file-upload/file-upload.component.ts","ng://path-framework/path-framework/form/field/fieldList/field-list-field.component.ts","ng://path-framework/path-framework/form/focus-utility.ts","ng://path-framework/path-framework/utility/key-utility.ts","ng://path-framework/path-framework/page/element/page-element.ts","ng://path-framework/path-framework/page/element/button-group/button-group.component.ts","ng://path-framework/path-framework/page/element/chart/chart.component.ts","ng://path-framework/path-framework/form/field/auto-complete/auto-complete-field-entry.ts","ng://path-framework/path-framework/form/form-function.ts","ng://path-framework/path-framework/form/field/auto-complete/auto-complete-field.component.ts","ng://path-framework/path-framework/form/field/text/text-field.component.ts","ng://path-framework/path-framework/form/field/date/date-field.component.ts","ng://path-framework/path-framework/form/field/radio/radio.ts","ng://path-framework/path-framework/form/field/radio/radio-group.component.ts","ng://path-framework/path-framework/form/field/checkbox/checkbox-group.component.ts","ng://path-framework/path-framework/form/field/form-field-label.component.ts","ng://path-framework/path-framework/form/field/progress-bar/progress-bar.component.ts","ng://path-framework/path-framework/form/field/label/label-field.component.ts","ng://path-framework/path-framework/form/field/number/number-field.component.ts","ng://path-framework/path-framework/form/field/button/ok-button.ts","ng://path-framework/path-framework/form/field/button/cancel-button.ts","ng://path-framework/path-framework/form/field/translation/translation-field.component.ts","ng://path-framework/path-framework/form/draggable.directive.ts","ng://path-framework/path-framework/utility/string-utility.ts","ng://path-framework/path-framework/page/element/button/button-detail.ts","ng://path-framework/path-framework/utility/color-utility.ts","ng://path-framework/path-framework/page/element/button/button.component.ts","ng://path-framework/path-framework/page/element/button/back-button.component.ts","ng://path-framework/path-framework/page/element/button/link-button.component.ts","ng://path-framework/path-framework/page/element/button/page-delete-button.component.ts","ng://path-framework/path-framework/page/element/label/page-label.component.ts","ng://path-framework/path-framework/page/element/list/list.component.ts","ng://path-framework/path-framework/page/element/custom/custom.directive.ts","ng://path-framework/path-framework/page/element/custom/custom-container.component.ts","ng://path-framework/path-framework/page/element/element-list/element-list.component.ts","ng://path-framework/path-framework/page/element/breadcrumb/breadcrumb.component.ts","ng://path-framework/app.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__values","o","m","Symbol","iterator","call","next","value","done","__read","n","e","ar","push","error","__spread","concat","BorderStyle","FormField","form","translationService","getForm","_height","_visible","_width","_newRow","_required","_readonly","_id","_name","_type","_labelVisible","isReadonly","readonly","fromJson","modelFormField","visible","labelVisible","width","newRow","required","id","name","getText","type","height","ValueField","_super","_this","apply","_isInitialValueSet","_created","tslib_1.__extends","_value","setValue","FileUploadComponent","http","dragActive","onDropFile","event","preventDefault","uploadFile","dataTransfer","files","onDragOverFile","stopPropagation","onDragLeave","selectFile","field","checkFileLimit","checkFileSize","from","forEach","file","doUpload","getApp","getBackendUrl","url","subscribe","HttpEventType","UploadProgress","percentDone","Math","round","loaded","total","findCurrentUpload","addNewPathFile","uploadProgress","HttpResponse","PathFileKey","body","uploadFinished","uploadSuccessful","updateRequiredStatus","err","console","log","sizeString","resetFileUploadElement","PathFile","size","getReadableFileSizeString","active","sortValues","reduce","acc","cur","fileInputReference","nativeElement","formData","FormData","append","options","params","HttpParams","reportProgress","req","HttpRequest","request","HttpClient","tslib_1.__decorate","Input","Output","ViewChild","static","Component","selector","template","FileUploadField","_multiple","_acceptedFileTypes","_fileLimit","_singleFileSizeLimit","_allFilesSizeLimit","value_1","tslib_1.__values","value_1_1","item","assign","sort","a","localeCompare","_url","_fileUploadRequired","remove","index","find","splice","_b","_c","equals","uploadInProgressCount","uploadSuccessfulCount","newStatus","newFilesLength","activeFileCount","fileLimit","message","String","yesNo","sizeSum_1","fileArray","fileArray_1","fileArray_1_1","byteSize","max","toFixed","download","window","location","multiple","acceptedFileTypes","otherKey","FieldListFieldComponent","FieldListField","_subfields","FocusUtility","focusFirstField","currentForm","setTimeout","focusDone","forms","document","forms_1","forms_1_1","e_2","elements","_d","element","HTMLInputElement","input","outerHTML","indexOf","focus","FormComponent","onSubmit","close","ngAfterViewInit","Form","pathService","app","_fields","_rows","_headerVisible","_footerVisible","_borderStyle","Shadow","getKey","_key","_title","getFields","fields","_handler","_bean","_formFunction","_urlDefaults","modelForm","headerVisible","footerVisible","borderStyle","borderStyleString","updateRows","currentFormRow","rows","_e","subfields","_f","subField","calculateFieldRow","getWidth","FormRow","save","handler","doSave","data","e_4","subfield","serverDelete","formFunction","delete","serverPost","serverPut","cancel","onKey","keyCode","sum","isVisible","KeyUtility","translateUrl","formKey","crudFormUrl","parentPageElement","translatedUrl","getName","replace","pageElement","getParent","findKey","searchKeyName","replaceVariable","variable","regExp","RegExp","variableExists","regExp2","search","PageElement","_listElement","_app","buildShortName","str","substr","getShortName","_parentPageElement","modelElement","name_1","Key","ButtonGroupComponent","ChartComponent","ButtonGroup","_buttons","_mobilePageBreak","addButton","button","buttons","updateButtonBorders","cssGroupBorder","chart","load","AutoCompleteFieldEntry","ChartElement","loader","serverGet","_data","_text","_active","FormFunction","_cancel","_save","_delete","AutoCompleteComponent","myElement","_elementRef","handleClick","clickedComponent","inside","parentNode","clearFilteredList","valueSet","query","ElementRef","host","(document:click)","AutoCompleteField","_filteredList","_dataLoaded","_valueSet","isInitialValueSet","filter","entry","bind","trim","entryName","text","toLowerCase","_wordSearchEnabled","tokens","split","tokens_1","tokens_1_1","startsWith","select","focusLost","resetDisplay","oldValue","_keyType","autoCompleteField","dataLoaded","valueField","dynamicData","data_1","data_1_1","getDetailButtonName","showDetailForm","closeCurrentForm","createForm","detailForm","displaySetter","keyValue","_query","_detailForm","TextFieldComponent","TextField","_isPassword","_maxLength","isPassword","maxLength","moment","momentImported","DateFieldComponent","Radio","DateField","_initialValueSet","_dateInputFormat","getUserDateFormat","_datePickerValue","_datePickerInitialValue","toDate","toString","isNaN","getTime","Date","toDateString","updateValueFromGui","getDate","RadioGroupComponent","RadioGroupField","_radios","_horizontal","radioModel","radio","radios","CheckboxGroupComponent","CheckboxGroupEntry","CheckboxGroupField","_entries","doClick","values","entries","selected","values_1","values_1_1","_g","entryModel","_selected","FormFieldLabelComponent","ProgressBarComponent","ProgressBarField","LabelFieldComponent","LabelField","NumberFieldComponent","OkButton","NumberField","_min","_max","_digits","getStep","step","k","min","digits","onClick","CancelButton","TranslationFieldComponent","DraggableDirective","TranslationField","_defaultTranslation","userLanguage","getUserLanguage","languages","getSupportedLanguageCodes","initialList","language","_translationLabel","getDefaultTranslation","editTranslations","translationFields","title","resultList","translationFields_1","translationFields_1_1","translations","translations_1","translations_1_1","textField","cancelButton","okButton","TranslationEntry","_code","topStart","leftStart","_allowDrag","ngOnInit","innerWidth","style","position","className","onMouseDown","eventTargetTag","md","clientY","top","clientX","left","onMouseUp","onMouseMove","onTouchStart","changedTouches","onTouchEnd","onTouchMove","HostListener","Directive","StringUtility","isEmpty","ButtonDetail","ColorUtility","isPathDefaultColor","color","colors","ButtonComponent","Button","_details","refreshCurrentPage","_page","_form","setCurrentForm","_formHandler","setCurrentPage","setIcon","icon","setForm","setFormHandler","formHandler","setPage","page","setKey","_icon","_cssStyle","_cssClass","_cssButtonTarget","_cssGroupBorder","_tooltip","tooltip","details","detail","bd","BackButtonComponent","BackButton","navigateBack","LinkButtonComponent","LinkButton","sessionStorage","getItem","PageDeleteButtonComponent","PageDeleteButton","PageLabelComponent","PageLabel","ListComponent","List","_buttonGroups","_searchTextChanged","Subject","_searchLabel","_searchInputLabel","_searchButton","getContent","buttonGroups","buttonGroup","refresh","searchText","afterRefreshHandler","dataHandler","itemIsButtonGroup","pageElements","createPageElement","buttonCounter","e_5","listElement","buttonModel","_buttonHandler","doLoad","filterVisibleButtonGroups","limit","setSearchResultsCountMessage","urlParameters","searchRequest","encodeURI","_mockData","count","mockData","mock","filterChanged","_searchText","searchRequired","e_7","_h","e_8","_j","visibleItemSize","result","e_10","_search","_color","_limit","_searchRequired","_searchRequest","urlString","searchButtonModel","debounceTimeValue","pipe","debounceTime","CustomDirective","viewContainerRef","ViewContainerRef","CustomContainerComponent","componentFactoryResolver","loadComponent","ngOnDestroy","componentFactory","resolveComponentFactory","typeClass","customDirective","clear","createComponent","instance","ComponentFactoryResolver","CustomPageElement","_pageElement","ElementListComponent","ElementList","BreadcrumbComponent","Breadcrumb","AppModule","forRoot","ngModule","AppModule_1","providers","NgModule","imports","BrowserModule","HttpClientModule","FormsModule","CommonModule","BrowserAnimationsModule","BsDatepickerModule","TooltipModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {IFormField, IForm} from \"../../pathinterface\";\r\nimport {TranslationService} from \"../../service/translation.service\";\r\n\r\nexport class FormField implements IFormField {\r\n    private _id: string;\r\n    private _name: string;\r\n    private _type: string;\r\n    private _height: number;\r\n    private _width: number;\r\n    private _newRow: boolean;\r\n    private _visible: boolean;\r\n    private _labelVisible: boolean;\r\n    private _required: boolean;\r\n    private _readonly: boolean;\r\n\r\n    constructor(protected form: IForm, protected translationService: TranslationService) {\r\n    }\r\n\r\n    getForm(): IForm {\r\n        return this.form;\r\n    }\r\n\r\n    get height(): number {\r\n        return this._height;\r\n    }\r\n\r\n    set height(value: number) {\r\n        this._height = value;\r\n    }\r\n\r\n    get visible(): boolean {\r\n        return this._visible;\r\n    }\r\n\r\n    set visible(value: boolean) {\r\n        this._visible = value;\r\n    }\r\n\r\n    get width(): number {\r\n        return this._width;\r\n    }\r\n\r\n    set width(value: number) {\r\n        this._width = value;\r\n    }\r\n\r\n    get newRow(): boolean {\r\n        return this._newRow;\r\n    }\r\n\r\n    set newRow(value: boolean) {\r\n        this._newRow = value;\r\n    }\r\n\r\n    get required(): boolean {\r\n        return this._required;\r\n    }\r\n\r\n    set required(value: boolean) {\r\n        this._required = value;\r\n    }\r\n\r\n    get readonly(): boolean {\r\n        return this._readonly;\r\n    }\r\n\r\n    set readonly(value: boolean) {\r\n        this._readonly = value;\r\n    }\r\n\r\n    get id(): string {\r\n        return this._id;\r\n    }\r\n\r\n    set id(value: string) {\r\n        this._id = value;\r\n    }\r\n\r\n    get name(): string {\r\n        return this._name;\r\n    }\r\n\r\n    set name(value: string) {\r\n        this._name = value;\r\n    }\r\n\r\n    get type(): string {\r\n        return this._type;\r\n    }\r\n\r\n    set type(value: string) {\r\n        this._type = value;\r\n    }\r\n\r\n    get labelVisible(): boolean {\r\n        return this._labelVisible;\r\n    }\r\n\r\n    set labelVisible(value: boolean) {\r\n        this._labelVisible = value;\r\n    }\r\n\r\n    public isReadonly(): boolean {\r\n        return this.readonly;\r\n    }\r\n\r\n    public fromJson(modelFormField) {\r\n        this.visible = true;\r\n        if (modelFormField[\"visible\"] != null) {\r\n            this.visible = modelFormField[\"visible\"];\r\n        }\r\n        this.labelVisible = true;\r\n        if (modelFormField[\"labelVisible\"] != null) {\r\n            this.labelVisible = modelFormField[\"labelVisible\"];\r\n        }\r\n        this.width = 1;\r\n        if (modelFormField[\"width\"] != null) {\r\n            this.width = modelFormField[\"width\"];\r\n        }\r\n        this.newRow = false;\r\n        if (modelFormField[\"newRow\"] != null) {\r\n            this.newRow = modelFormField[\"newRow\"];\r\n        }\r\n        this.required = false;\r\n        if (modelFormField[\"required\"] != null) {\r\n            this.required = modelFormField[\"required\"];\r\n        }\r\n        this.readonly = false;\r\n        if (modelFormField[\"readonly\"] != null) {\r\n            this.readonly = modelFormField[\"readonly\"];\r\n        }\r\n        this.id = modelFormField[\"id\"];\r\n        this.name = this.translationService.getText(modelFormField.name);\r\n        this.type = modelFormField.type;\r\n        this.height = modelFormField[\"height\"];\r\n    }\r\n}\r\n","import {AfterViewInit, Component, Input, Output} from \"@angular/core\";\r\nimport {PathService} from \"../service/path.service\";\r\nimport {IForm, IPathApp, IFormHandler, IFormBean} from \"../pathinterface\";\r\nimport {ValueField} from \"./field/value-field\";\r\nimport {FormField} from \"./field/form-field\";\r\nimport {FieldListField} from \"./field/fieldList/field-list-field.component\";\r\nimport {Key} from \"../page/element/page-element\";\r\nimport {FormFunction} from \"./form-function\";\r\nimport {TranslationService} from \"../service/translation.service\";\r\nimport {FocusUtility} from \"./focus-utility\";\r\n\r\n@Component({\r\n    selector: \"path-form\",\r\n    templateUrl: \"form.component.html\",\r\n})\r\nexport class FormComponent implements AfterViewInit {\r\n    @Input(\"form\")\r\n    @Output(\"form\")\r\n    form: Form;\r\n\r\n    public onSubmit() {\r\n        this.form.close(true, false);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        FocusUtility.focusFirstField(this.form);\r\n    }\r\n}\r\n\r\nexport class Form implements IForm {\r\n    private _key: Key;\r\n    private _title: string;\r\n    private _fields: FormField[] = [];\r\n    private _rows: FormRow[] = [];\r\n    private _handler: IFormHandler;\r\n    private _url: string;\r\n    private _urlDefaults: boolean;\r\n    private _bean: IFormBean;\r\n    private _formFunction: FormFunction;\r\n    private _headerVisible = true;\r\n    private _footerVisible = true;\r\n    private _borderStyle: BorderStyle = BorderStyle.Shadow;\r\n\r\n    constructor(private pathService: PathService, private app: IPathApp) {\r\n    }\r\n\r\n    getApp(): IPathApp {\r\n        return this.app;\r\n    }\r\n\r\n    getKey(): Key {\r\n        return this.key;\r\n    }\r\n\r\n    get key(): Key {\r\n        return this._key;\r\n    }\r\n\r\n    set key(value: Key) {\r\n        this._key = value;\r\n    }\r\n\r\n    get rows(): FormRow[] {\r\n        return this._rows;\r\n    }\r\n\r\n    get title(): string {\r\n        return this._title;\r\n    }\r\n\r\n    set title(value: string) {\r\n        this._title = value;\r\n    }\r\n\r\n    public getFields(): FormField[] {\r\n        return this.fields;\r\n    }\r\n\r\n    get fields(): FormField[] {\r\n        return this._fields;\r\n    }\r\n\r\n    set fields(value: FormField[]) {\r\n        this._fields = value;\r\n    }\r\n\r\n    get handler(): IFormHandler {\r\n        return this._handler;\r\n    }\r\n\r\n    set handler(value: IFormHandler) {\r\n        this._handler = value;\r\n    }\r\n\r\n    get url(): string {\r\n        return this._url;\r\n    }\r\n\r\n    set url(value: string) {\r\n        this._url = value;\r\n    }\r\n\r\n    get bean(): IFormBean {\r\n        return this._bean;\r\n    }\r\n\r\n    set bean(value: IFormBean) {\r\n        this._bean = value;\r\n    }\r\n\r\n    get formFunction(): FormFunction {\r\n        return this._formFunction;\r\n    }\r\n\r\n    set formFunction(value: FormFunction) {\r\n        this._formFunction = value;\r\n    }\r\n\r\n    get headerVisible(): boolean {\r\n        return this._headerVisible;\r\n    }\r\n\r\n    set headerVisible(value: boolean) {\r\n        this._headerVisible = value;\r\n    }\r\n\r\n    get footerVisible(): boolean {\r\n        return this._footerVisible;\r\n    }\r\n\r\n    set footerVisible(value: boolean) {\r\n        this._footerVisible = value;\r\n    }\r\n\r\n    get borderStyle(): BorderStyle {\r\n        return this._borderStyle;\r\n    }\r\n\r\n    set borderStyle(value: BorderStyle) {\r\n        this._borderStyle = value;\r\n    }\r\n\r\n    get urlDefaults(): boolean {\r\n        return this._urlDefaults;\r\n    }\r\n\r\n    public fromJson(modelForm) {\r\n        this.url = modelForm[\"url\"];\r\n        if (modelForm[\"urlDefaults\"] != null) {\r\n            this._urlDefaults = modelForm[\"urlDefaults\"];\r\n        }\r\n        this.headerVisible = true;\r\n        if (modelForm[\"headerVisible\"] != null) {\r\n            this.headerVisible = modelForm[\"headerVisible\"];\r\n        }\r\n        this.footerVisible = true;\r\n        if (modelForm[\"footerVisible\"] != null) {\r\n            this.footerVisible = modelForm[\"footerVisible\"];\r\n        }\r\n        this.borderStyle = BorderStyle.Shadow;\r\n        if (modelForm[\"borderStyle\"] != null) {\r\n            const borderStyleString: string = modelForm[\"borderStyle\"];\r\n            this.borderStyle = BorderStyle[borderStyleString];\r\n        }\r\n    }\r\n\r\n    public updateRows() {\r\n        const rows: FormRow[] = [];\r\n\r\n        let currentFormRow: FormRow;\r\n        for (const field of this.fields) {\r\n            if (field instanceof FieldListField) {\r\n                for (const subField of (<FieldListField>field).subfields) {\r\n                    currentFormRow = this.calculateFieldRow(subField, currentFormRow, rows);\r\n                    currentFormRow.fields.push(subField);\r\n                }\r\n            } else {\r\n                currentFormRow = this.calculateFieldRow(field, currentFormRow, rows);\r\n                currentFormRow.fields.push(field);\r\n            }\r\n        }\r\n        this._rows = rows;\r\n    }\r\n\r\n    private calculateFieldRow(field: FormField, currentFormRow: FormRow, rows: FormRow[]): FormRow {\r\n        // auto-start new row with form width 2\r\n        if (currentFormRow == null ||\r\n            field.newRow ||\r\n            currentFormRow.fields.length >= 2 ||\r\n            field.width >= 2 ||\r\n            currentFormRow.getWidth() >= 2\r\n        ) {\r\n            field.newRow = true;\r\n            currentFormRow = new FormRow();\r\n            rows.push(currentFormRow);\r\n        }\r\n        return currentFormRow;\r\n    }\r\n\r\n    public close(save: boolean, remove: boolean) {\r\n        if (save || remove) {\r\n            // call close handler\r\n            if (this.handler != null) {\r\n                this.handler.doSave(this._bean);\r\n            }\r\n            const data = {};\r\n            for (const field of this._fields) {\r\n                if (field instanceof ValueField && field.id != null) {\r\n                    data[field.id] = (<ValueField<any>>field).value;\r\n                }\r\n                if (field instanceof FieldListField) {\r\n                    for (const subfield of (<FieldListField>field).subfields) {\r\n                        data[subfield.id] = (<ValueField<any>>subfield).value;\r\n                    }\r\n                }\r\n            }\r\n            if (remove) {\r\n                this.pathService.serverDelete(this.app.getBackendUrl(), this.url, this.formFunction.delete);\r\n            } else if (this.key == null) {\r\n                // create\r\n                this.pathService.serverPost(this.app.getBackendUrl(), this.url, data, this.formFunction.save, null);\r\n            } else {\r\n                // update (with key)\r\n                this.pathService.serverPut(this.app.getBackendUrl(), this.url, data, this.formFunction.save);\r\n            }\r\n        } else {\r\n            this.formFunction.cancel();\r\n        }\r\n    }\r\n\r\n    public onKey(event) {\r\n        if (event.keyCode === 27) { // esc\r\n            this.close(false, false);\r\n        }\r\n    }\r\n}\r\n\r\nexport class FormRow {\r\n    private _fields: FormField[] = [];\r\n\r\n    get fields(): FormField[] {\r\n        return this._fields;\r\n    }\r\n\r\n    set fields(value: FormField[]) {\r\n        this._fields = value;\r\n    }\r\n\r\n    public getWidth(): number {\r\n        let sum = 0;\r\n        for (const field of this.fields) {\r\n            sum += field.width;\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    public isVisible(): boolean {\r\n        for (const field of this.fields) {\r\n            if (field.visible) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\nexport enum BorderStyle {\r\n    // TODO use string enum after TS upgrade, then use enum in template (with member)\r\n    None = 1,\r\n    Shadow = 2\r\n}\r\n","import {FormField} from \"./form-field\";\r\n\r\nexport class ValueField<T> extends FormField {\r\n    private _value: T;\r\n    private _isInitialValueSet = false;\r\n    private _created = false;\r\n\r\n    get value(): T {\r\n        return this._value;\r\n    }\r\n\r\n    set value(value: T) {\r\n        this._value = value;\r\n    }\r\n\r\n    public setValue(value: T) {\r\n        this._value = value;\r\n    }\r\n\r\n    get created(): boolean {\r\n        return this._created;\r\n    }\r\n\r\n    set created(value: boolean) {\r\n        this._created = value;\r\n    }\r\n\r\n    public isReadonly(): boolean {\r\n        return this.readonly;\r\n    }\r\n\r\n    get isInitialValueSet(): boolean {\r\n        return this._isInitialValueSet;\r\n    }\r\n\r\n    set isInitialValueSet(value: boolean) {\r\n        this._isInitialValueSet = value;\r\n    }\r\n\r\n    public fromJson(modelFormField) {\r\n        super.fromJson(modelFormField);\r\n        if (modelFormField[\"value\"] != null) {\r\n            this.setValue(modelFormField[\"value\"]);\r\n        }\r\n    }\r\n}\r\n","import {Component, ElementRef, Input, Output, ViewChild} from \"@angular/core\";\r\nimport {ValueField} from \"../value-field\";\r\nimport {HttpClient, HttpEvent, HttpEventType, HttpParams, HttpRequest, HttpResponse} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {IForm} from \"../../../pathinterface\";\r\nimport {TranslationService} from \"../../../service/translation.service\";\r\n\r\n@Component({\r\n    selector: \"path-file-upload\",\r\n    templateUrl: \"file-upload.component.html\"\r\n})\r\nexport class FileUploadComponent {\r\n    @Input(\"field\")\r\n    @Output(\"field\")\r\n    field: FileUploadField;\r\n\r\n    @ViewChild(\"fileInput\", {static: true})\r\n    fileInputReference: ElementRef;\r\n    dragActive = false;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    onDropFile(event: DragEvent) {\r\n        this.dragActive = false;\r\n        event.preventDefault();\r\n        this.uploadFile(event.dataTransfer.files);\r\n    }\r\n\r\n    onDragOverFile(event) {\r\n        this.dragActive = true;\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n    }\r\n\r\n    onDragLeave() {\r\n        this.dragActive = false;\r\n    }\r\n\r\n    selectFile(event) {\r\n        this.uploadFile(event.target.files);\r\n    }\r\n\r\n    uploadFile(files: FileList) {\r\n        if (files.length === 0) {\r\n            console.log(\"No file selected!\");\r\n            return;\r\n\r\n        }\r\n        // check if file limit is exceeded\r\n        if (!this.field.checkFileLimit(files.length)) {\r\n            this.resetFileUploadElement();\r\n            return;\r\n        }\r\n        // check file sizes\r\n        if (!this.field.checkFileSize(files)) {\r\n            this.resetFileUploadElement();\r\n            return;\r\n        }\r\n        // upload submitted files\r\n        Array.from(files).forEach((file) => {\r\n            this.doUpload(this.field.getForm().getApp().getBackendUrl() + this.field.url, file)\r\n                .subscribe(\r\n                    event => {\r\n                        if (event.type === HttpEventType.UploadProgress) {\r\n                            const percentDone: number = Math.round(100 * event.loaded / event.total);\r\n                            let uploadFile = this.field.findCurrentUpload(file.name);\r\n                            if (uploadFile == null) {\r\n                                uploadFile = this.addNewPathFile(file);\r\n                            }\r\n                            uploadFile.uploadProgress = percentDone;\r\n\r\n                        } else if (event instanceof HttpResponse) {\r\n                            let uploadFile = this.field.findCurrentUpload(file.name);\r\n                            if (uploadFile == null) {\r\n                                uploadFile = this.addNewPathFile(file);\r\n                            }\r\n                            const key: PathFileKey = new PathFileKey(event.body[\"key\"][\"key\"], event.body[\"key\"][\"name\"]);\r\n                            uploadFile.key = key;\r\n                            uploadFile.uploadFinished = true;\r\n                            uploadFile.uploadSuccessful = true;\r\n                            this.field.updateRequiredStatus();\r\n                        }\r\n                    },\r\n                    (err) => {\r\n                        console.log(\"Upload Error:\", err);\r\n                        const uploadFile = this.field.findCurrentUpload(file.name);\r\n                        if (uploadFile) {\r\n                            uploadFile.sizeString = \"Error\";\r\n                            uploadFile.uploadFinished = true;\r\n                        } else {\r\n                            console.log(\"error: file should exist (\" + file.name + \")\");\r\n                        }\r\n                        this.resetFileUploadElement();\r\n                    }, () => {\r\n                        this.resetFileUploadElement();\r\n                    }\r\n                );\r\n        });\r\n    }\r\n\r\n    private addNewPathFile(file): PathFile {\r\n        const uploadFile = new PathFile();\r\n        uploadFile.name = file.name;\r\n        uploadFile.size = file.size;\r\n        uploadFile.sizeString = this.field.getReadableFileSizeString(file.size);\r\n        uploadFile.active = true;\r\n        this.field.value.push(uploadFile);\r\n        this.field.sortValues();\r\n        return uploadFile;\r\n    }\r\n\r\n    private resetFileUploadElement(): void {\r\n        const count = this.field.value.reduce((acc, cur) => !cur.uploadFinished ? ++acc : acc, 0);\r\n        if (count === 0) {\r\n            this.fileInputReference.nativeElement.value = \"\";\r\n        }\r\n    }\r\n\r\n    private doUpload(url: string, file: File): Observable<HttpEvent<any>> {\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"upload\", file);\r\n\r\n        const params = new HttpParams();\r\n\r\n        const options = {\r\n            params: params,\r\n            reportProgress: true,\r\n        };\r\n\r\n        const req = new HttpRequest(\"POST\", url, formData, options);\r\n        return <any>this.http.request(req); // <any> fixes TS2719\r\n    }\r\n\r\n}\r\n\r\nexport class FileUploadField extends ValueField<PathFile[]> {\r\n\r\n    private _url: string;\r\n    private _multiple = true;\r\n    private _acceptedFileTypes: string[] = [];\r\n    private _fileUploadRequired: boolean;\r\n    private _fileLimit = 0;\r\n    private _singleFileSizeLimit = 0;\r\n    private _allFilesSizeLimit = 0;\r\n\r\n    constructor(form: IForm, translationService: TranslationService) {\r\n        super(form, translationService);\r\n        this.value = [];\r\n        this._acceptedFileTypes.push(\"*.*\");\r\n        this.updateRequiredStatus();\r\n    }\r\n\r\n    setValue(value: PathFile[]): void {\r\n        const files: PathFile[] = [];\r\n        for (const item of value) {\r\n            const file = Object.assign(new PathFile(), item);\r\n            file.key = Object.assign(new PathFileKey(null, null), item.key);\r\n            files.push(file);\r\n        }\r\n        this.sortValues();\r\n        super.setValue(files);\r\n        this.updateRequiredStatus();\r\n    }\r\n\r\n    public sortValues() {\r\n        this.value.sort((a, b) => a.name.localeCompare(b.name));\r\n    }\r\n\r\n    get url(): string {\r\n        return this._url;\r\n    }\r\n\r\n    set url(value: string) {\r\n        this._url = value;\r\n    }\r\n\r\n    get multiple(): boolean {\r\n        return this._multiple;\r\n    }\r\n\r\n    set multiple(value: boolean) {\r\n        this._multiple = value;\r\n    }\r\n\r\n    get acceptedFileTypes(): string[] {\r\n        return this._acceptedFileTypes;\r\n    }\r\n\r\n    set acceptedFileTypes(value: string[]) {\r\n        this._acceptedFileTypes = value;\r\n    }\r\n\r\n    get fileUploadRequired(): boolean {\r\n        return this._fileUploadRequired;\r\n    }\r\n\r\n    get fileLimit(): number {\r\n        return this._fileLimit;\r\n    }\r\n\r\n    get singleFileSizeLimit(): number {\r\n        return this._singleFileSizeLimit;\r\n    }\r\n\r\n    get allFilesSizeLimit(): number {\r\n        return this._allFilesSizeLimit;\r\n    }\r\n\r\n    public remove(index: number, key: PathFileKey): void {\r\n        if (key) {\r\n            const file: PathFile = this.find(key);\r\n            if (file) {\r\n                file.active = false;\r\n            }\r\n            this.updateRequiredStatus();\r\n        } else {\r\n            this.value.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    public find(key: PathFileKey): PathFile {\r\n        for (const file of this.value) {\r\n            if (file.key.equals(key)) {\r\n                return file;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public findCurrentUpload(name: string): PathFile {\r\n        for (const file of this.value) {\r\n            if (file.name === name && !file.uploadFinished) {\r\n                return file;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public updateRequiredStatus() {\r\n        let uploadInProgressCount = 0;\r\n        let uploadSuccessfulCount = 0;\r\n        this.value.forEach((file) => {\r\n            if (file.active && !file.uploadFinished) {\r\n                uploadInProgressCount++;\r\n            }\r\n            if (file.active && file.uploadSuccessful) {\r\n                uploadSuccessfulCount++;\r\n            }\r\n        });\r\n        let newStatus = false;\r\n        if (uploadInProgressCount > 0) {\r\n            // always required if upload in progress\r\n            newStatus = true;\r\n        } else if (this.required && uploadSuccessfulCount <= 0) {\r\n            newStatus = true;\r\n        }\r\n        this._fileUploadRequired = newStatus;\r\n    }\r\n\r\n    public checkFileLimit(newFilesLength: number): boolean {\r\n        let activeFileCount = 0;\r\n        this.value.forEach((file) => {\r\n            if (file.active) {\r\n                activeFileCount++;\r\n            }\r\n        });\r\n        if (this.fileLimit > 0 && ((activeFileCount + newFilesLength) > this.fileLimit)) {\r\n            const message = this.translationService.getText(\"FileLimitMessage\", String(this.fileLimit));\r\n            this.getForm().getApp().yesNo(message, () => {}, () => {});\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public checkFileSize(files: FileList): boolean {\r\n        if (this._singleFileSizeLimit || this._allFilesSizeLimit) {\r\n            // check single file limit\r\n            let sizeSum = 0;\r\n            const fileArray = Array.from(files);\r\n            for (const file of fileArray) {\r\n                sizeSum += file.size;\r\n                if (this._singleFileSizeLimit > 0 && file.size > this._singleFileSizeLimit) {\r\n                    const message = this.translationService.getText(\"FileSingleSizeMessage\",\r\n                        this.getReadableFileSizeString(this._singleFileSizeLimit));\r\n                    this.getForm().getApp().yesNo(message, () => {}, () => {});\r\n                    return false;\r\n                }\r\n            }\r\n            // check sum limit\r\n            if (this._allFilesSizeLimit > 0) {\r\n                this.value.forEach((file) => {\r\n                    if (file.active) {\r\n                        sizeSum += file.size;\r\n                    }\r\n                });\r\n                if (this._allFilesSizeLimit > 0 && sizeSum > this._allFilesSizeLimit) {\r\n                    const message = this.translationService.getText(\"FileAllSizeMessage\",\r\n                        this.getReadableFileSizeString(this._allFilesSizeLimit));\r\n                    this.getForm().getApp().yesNo(message, () => {}, () => {});\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public getReadableFileSizeString(byteSize: number): string {\r\n        let i = -1;\r\n        const byteUnits = [\" kB\", \" MB\", \" GB\", \" TB\", \" PB\", \" EB\", \" ZB\", \" YB\"];\r\n        do {\r\n            byteSize = byteSize / 1024;\r\n            i++;\r\n        } while (byteSize > 1024);\r\n\r\n        return Math.max(byteSize, 0.1).toFixed(1) + byteUnits[i];\r\n    }\r\n\r\n    public download(key: PathFileKey) {\r\n        window.location.assign(this.getForm().getApp().getBackendUrl() + this.url + \"/\" + key.key);\r\n    }\r\n\r\n    public fromJson(modelFormField) {\r\n        super.fromJson(modelFormField);\r\n        this.type = \"fileUpload\";\r\n        if (modelFormField[\"url\"]) {\r\n            this.url = modelFormField[\"url\"];\r\n        }\r\n        if (modelFormField[\"multiple\"] != null) {\r\n            this.multiple = modelFormField[\"multiple\"];\r\n        }\r\n        if (modelFormField[\"acceptedFileTypes\"]) {\r\n            this.acceptedFileTypes = modelFormField[\"acceptedFileTypes\"];\r\n        }\r\n        if (modelFormField[\"fileLimit\"]) {\r\n            this._fileLimit = modelFormField[\"fileLimit\"];\r\n        }\r\n        if (modelFormField[\"singleFileSizeLimit\"]) {\r\n            this._singleFileSizeLimit = modelFormField[\"singleFileSizeLimit\"];\r\n        }\r\n        if (modelFormField[\"allFilesSizeLimit\"]) {\r\n            this._allFilesSizeLimit = modelFormField[\"allFilesSizeLimit\"];\r\n        }\r\n        this.updateRequiredStatus();\r\n    }\r\n\r\n}\r\n\r\nexport class PathFile {\r\n    active: boolean; // file deleted: active === false\r\n    uploadFinished = false;\r\n    uploadSuccessful = false;\r\n    uploadProgress = 0;\r\n    name: string;\r\n    sizeString: string;\r\n    size = 0;\r\n    key: PathFileKey;\r\n}\r\n\r\n// TODO unify with list key\r\n// tslint:disable:max-classes-per-file\r\nexport class PathFileKey {\r\n    key: string;\r\n    name: any;\r\n\r\n    constructor(key: string, name: any) {\r\n        this.key = key;\r\n        this.name = name;\r\n    }\r\n\r\n    public equals(otherKey: PathFileKey): boolean {\r\n        if (otherKey != null &&\r\n            otherKey.name &&\r\n            otherKey.key &&\r\n            this.name &&\r\n            this.key &&\r\n            otherKey.name === this.name &&\r\n            otherKey.key === this.key) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n","import {Component, Input, Output, ElementRef} from \"@angular/core\";\r\nimport {ValueField} from \"../value-field\";\r\n\r\n@Component({\r\n    selector: \"path-field-list\",\r\n    templateUrl: \"field-list-field.component.html\"\r\n})\r\nexport class FieldListFieldComponent {\r\n    @Input(\"field\")\r\n    @Output(\"field\")\r\n    field: FieldListField;\r\n}\r\n\r\nexport class FieldListField extends ValueField<string[]> {\r\n    private _subfields: ValueField<any>[] = [];\r\n\r\n    get subfields(): ValueField<any>[] {\r\n        return this._subfields;\r\n    }\r\n\r\n    set subfields(value: ValueField<any>[]) {\r\n        this._subfields = value;\r\n    }\r\n}\r\n","import {IForm} from \"../pathinterface\";\r\n\r\nexport class FocusUtility {\r\n\r\n    public static focusFirstField(currentForm: IForm) {\r\n        window.setTimeout(() => {\r\n            let focusDone = false;\r\n\r\n            let forms = <any>document.forms;\r\n            if (currentForm != null) {\r\n                forms = [forms[forms.length - 1]]; // only last form on form stack\r\n            }\r\n            for (const form of forms) {\r\n                for (const element of <any>form.elements) {\r\n                    if (element instanceof HTMLInputElement &&\r\n                        (<HTMLInputElement>element).type === \"text\" || (<HTMLInputElement>element).type === \"textarea\") {\r\n                        const input = <HTMLInputElement>element;\r\n                        if (input.outerHTML.indexOf(\"readonly-with-required\") < 0) { // no focus on readonly fields\r\n                            input.focus();\r\n                            focusDone = true;\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n                if (focusDone) {\r\n                    break;\r\n                }\r\n            }\r\n        }, 1);\r\n    }\r\n\r\n}\r\n","import {IPageElement, IKey} from \"../pathinterface\";\r\nimport {Key} from \"../page/element/page-element\";\r\n\r\nexport class KeyUtility {\r\n\r\n    public static translateUrl(url: string, formKey: IKey, crudFormUrl: boolean, parentPageElement: IPageElement): string {\r\n        let translatedUrl: any = url;\r\n\r\n        if (translatedUrl != null) {\r\n            if (formKey != null && !(translatedUrl.indexOf(formKey.getName()) > 0) && crudFormUrl) {\r\n                translatedUrl = translatedUrl + \"/\" + formKey.getKey();\r\n            }\r\n            if (formKey != null) {\r\n                translatedUrl = translatedUrl.replace(\":\" + formKey.getName(), formKey.getKey());\r\n            }\r\n            let pageElement = parentPageElement;\r\n            while (pageElement != null) {\r\n                if (pageElement.getKey() != null) {\r\n                    translatedUrl = translatedUrl.replace(\":\" + pageElement.getKey().getName(), pageElement.getKey().getKey());\r\n                }\r\n                pageElement = pageElement.getParent();\r\n            }\r\n        }\r\n\r\n        return translatedUrl;\r\n    }\r\n\r\n    public static findKey(pageElement: IPageElement, name: string): Key {\r\n        let searchKeyName = name;\r\n        if (searchKeyName) {\r\n            searchKeyName = searchKeyName.replace(\":\", \"\");\r\n            while (pageElement != null) {\r\n                if (pageElement.getKey() != null && pageElement.getKey().getName() === searchKeyName) {\r\n                    return <Key>pageElement.getKey();\r\n                }\r\n                pageElement = pageElement.getParent();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static replaceVariable(url: string, variable: string, value: string): string {\r\n        // replace variables at line end\r\n        let regExp = new RegExp(\":\" + variable + \"$\", \"g\");\r\n        url = url.replace(regExp, value);\r\n        // replace variables in middle of line\r\n        regExp = new RegExp(\":\" + variable + \"\\/\", \"g\");\r\n        url = url.replace(regExp, value + \"/\");\r\n        return url;\r\n    }\r\n\r\n    public static variableExists(url: string, variable: string): boolean {\r\n        const regExp = new RegExp(\":\" + variable + \"$\", \"g\");\r\n        const regExp2 = new RegExp(\":\" + variable + \"\\/\", \"g\");\r\n        return url.search(regExp) !== -1 || url.search(regExp2) !== -1;\r\n    }\r\n\r\n}\r\n","import {IPageElement, IKey, IPathApp} from \"../../pathinterface\";\r\nimport {KeyUtility} from \"../../utility/key-utility\";\r\n\r\nexport class PageElement implements IPageElement {\r\n    private readonly _app: IPathApp;\r\n    private _id: string;\r\n    private _key: Key;\r\n    private _name: string;\r\n    private _type: string;\r\n    private _width: number;\r\n    private _visible = true;\r\n    private _newRow = false;\r\n    private _listElement = false;\r\n    private _parentPageElement: PageElement;\r\n\r\n    public static buildShortName(str: string) {\r\n        if (str == null || str.length === 0) {\r\n            return \"\";\r\n        }\r\n        if (str.length > 63) {\r\n            return str.substr(0, 60) + \"...\";\r\n        }\r\n        return str;\r\n    }\r\n\r\n    constructor(app: IPathApp) {\r\n        this._app = app;\r\n    }\r\n\r\n    public getShortName(): string {\r\n        return PageElement.buildShortName(this.name);\r\n    }\r\n\r\n    get app(): IPathApp {\r\n        return this._app;\r\n    }\r\n\r\n    get name(): string {\r\n        return this._name;\r\n    }\r\n\r\n    set name(value: string) {\r\n        this._name = value;\r\n    }\r\n\r\n    get type(): string {\r\n        return this._type;\r\n    }\r\n\r\n    set type(value: string) {\r\n        this._type = value;\r\n    }\r\n\r\n    get id(): string {\r\n        return this._id;\r\n    }\r\n\r\n    set id(value: string) {\r\n        this._id = value;\r\n    }\r\n\r\n    get width(): number {\r\n        return this._width;\r\n    }\r\n\r\n    set width(value: number) {\r\n        this._width = value;\r\n    }\r\n\r\n    public getKey(): IKey {\r\n        return this._key;\r\n    }\r\n\r\n    get key(): Key {\r\n        return this._key;\r\n    }\r\n\r\n    set key(value: Key) {\r\n        this._key = value;\r\n    }\r\n\r\n    public getParent(): IPageElement {\r\n        return this.parentPageElement;\r\n    }\r\n\r\n    get visible(): boolean {\r\n        return this._visible;\r\n    }\r\n\r\n    set visible(value: boolean) {\r\n        this._visible = value;\r\n    }\r\n\r\n    get newRow(): boolean {\r\n        return this._newRow;\r\n    }\r\n\r\n    set newRow(value: boolean) {\r\n        this._newRow = value;\r\n    }\r\n\r\n    get parentPageElement(): PageElement {\r\n        return this._parentPageElement;\r\n    }\r\n\r\n    set parentPageElement(value: PageElement) {\r\n        this._parentPageElement = value;\r\n    }\r\n\r\n    get listElement(): boolean {\r\n        return this._listElement;\r\n    }\r\n\r\n    set listElement(value: boolean) {\r\n        this._listElement = value;\r\n    }\r\n\r\n    public fromJson(modelElement) {\r\n        this.visible = true;\r\n        if (modelElement[\"id\"] != null) {\r\n            this.id = modelElement[\"id\"];\r\n        }\r\n        if (modelElement[\"key\"] != null) {\r\n            const name: string = modelElement[\"key\"][\"name\"];\r\n            if (name && !modelElement[\"key\"][\"key\"]) {\r\n                this.key = KeyUtility.findKey(this.parentPageElement, name);\r\n            } else {\r\n                this.key = new Key(modelElement[\"key\"][\"key\"], name);\r\n            }\r\n        }\r\n        if (modelElement[\"visible\"] != null) {\r\n            this.visible = modelElement[\"visible\"];\r\n        }\r\n        if (modelElement[\"newRow\"] != null) {\r\n            this.newRow = modelElement[\"newRow\"];\r\n        }\r\n        if (modelElement[\"width\"] != null) {\r\n            this.width = modelElement[\"width\"];\r\n        } else {\r\n            this.width = 1;\r\n        }\r\n    }\r\n}\r\n\r\nexport class Key implements IKey {\r\n    private _key: any;\r\n    private _name: string;\r\n\r\n    constructor(key: any, name: string) {\r\n        this._key = key;\r\n        this._name = name;\r\n    }\r\n\r\n    public getName(): string {\r\n        return this._name;\r\n    }\r\n\r\n    set key(value: any) {\r\n        this._key = value;\r\n    }\r\n\r\n    public getKey(): any {\r\n        return this._key;\r\n    }\r\n\r\n    set name(value: string) {\r\n        this._name = value;\r\n    }\r\n\r\n    public equals(otherKey: Key): boolean {\r\n        if (otherKey != null &&\r\n            otherKey.getName() &&\r\n            otherKey.getKey() &&\r\n            this.getName() &&\r\n            this.getKey() &&\r\n            otherKey.getName() === this.getName() &&\r\n            otherKey.getKey() === this.getKey()) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","import {Component, Input, Output} from \"@angular/core\";\r\nimport {IPathApp} from \"../../../pathinterface\";\r\nimport {Button} from \"../button/button.component\";\r\nimport {PageElement} from \"../page-element\";\r\n\r\n@Component({\r\n    selector: \"path-button-group\",\r\n    templateUrl: \"button-group.component.html\"\r\n})\r\nexport class ButtonGroupComponent {\r\n    @Input(\"buttonGroup\")\r\n    @Output(\"buttonGroup\")\r\n    buttonGroup: ButtonGroup;\r\n}\r\n\r\nexport class ButtonGroup extends PageElement {\r\n\r\n    private _buttons: Button[] = [];\r\n    private _mobilePageBreak = false;\r\n\r\n    constructor(app: IPathApp) {\r\n        super(app);\r\n    }\r\n\r\n    get buttons(): Button[] {\r\n        return this._buttons;\r\n    }\r\n\r\n    get mobilePageBreak(): boolean {\r\n        return this._mobilePageBreak;\r\n    }\r\n\r\n    public addButton(button: Button): void {\r\n        this._buttons.push(button);\r\n        let length = 0;\r\n        for (const currentButton of this.buttons) {\r\n            length += (currentButton.width >= 2 ? 2 : 1);\r\n        }\r\n        this._mobilePageBreak = length > 1 && this.buttons.length >= 2;\r\n    }\r\n\r\n    public updateButtonBorders(): void {\r\n        if (this._buttons.length === 1) {\r\n            // single button has no special border\r\n            this._buttons[0].cssGroupBorder = \"\";\r\n        } else {\r\n            for (const button of this._buttons) {\r\n                button.cssGroupBorder = \"tile-grouped-middle\";\r\n            }\r\n            if (this._buttons.length >= 1) {\r\n                // set first and last button border\r\n                this._buttons[0].cssGroupBorder = \"tile-grouped-left\";\r\n                this._buttons[this._buttons.length - 1].cssGroupBorder = \"tile-grouped-right\";\r\n            }\r\n        }\r\n    }\r\n\r\n    public fromJson(modelElement) {\r\n        super.fromJson(modelElement);\r\n        this.type = \"buttonGroup\";\r\n    }\r\n\r\n}\r\n","import {Component, AfterViewInit, Input, Output} from \"@angular/core\";\r\nimport {PageElement} from \"../page-element\";\r\nimport {PathService} from \"../../../service/path.service\";\r\nimport {IPathApp} from \"../../../pathinterface\";\r\nimport {TranslationService} from \"../../../service/translation.service\";\r\n\r\ndeclare var Chart: any;\r\n\r\n// Note: Chart would be an example for a custom path element contributed by a path user\r\n\r\n@Component({\r\n    selector: \"path-radar-chart\",\r\n    templateUrl: \"chart.component.html\"\r\n})\r\nexport class ChartComponent implements AfterViewInit {\r\n    @Input(\"chart\")\r\n    @Output(\"chart\")\r\n    chart: ChartElement;\r\n\r\n    ngAfterViewInit() {\r\n        this.chart.load((data: any) => {\r\n            this.chart.data = data;\r\n        });\r\n    }\r\n}\r\n\r\nexport class ChartElement extends PageElement {\r\n    private _url: string;\r\n    private _data: any;\r\n\r\n    constructor(app: IPathApp, private pathService: PathService, public translationService: TranslationService) {\r\n        super(app);\r\n    }\r\n\r\n    public load(loader: (data: any) => any) {\r\n        this.pathService.serverGet(this.app.getBackendUrl(), this.url, loader, (err: any) => {\r\n            console.log(\"error\" + err);\r\n        });\r\n    }\r\n\r\n    get url(): string {\r\n        return this._url;\r\n    }\r\n\r\n    set url(value: string) {\r\n        this._url = value;\r\n    }\r\n\r\n    get data(): any {\r\n        return this._data;\r\n    }\r\n\r\n    set data(value: any) {\r\n        this._data = value;\r\n    }\r\n}\r\n","export class AutoCompleteFieldEntry {\r\n\r\n    private _key: any;\r\n    private _text: string;\r\n    private _active: boolean;\r\n\r\n    get key(): any {\r\n        return this._key;\r\n    }\r\n\r\n    set key(value: any) {\r\n        this._key = value;\r\n    }\r\n\r\n    get text(): string {\r\n        return this._text;\r\n    }\r\n\r\n    set text(value: string) {\r\n        this._text = value;\r\n    }\r\n\r\n    get active(): boolean {\r\n        return this._active;\r\n    }\r\n\r\n    set active(value: boolean) {\r\n        this._active = value;\r\n    }\r\n}\r\n","import {IFormFunction} from \"../pathinterface\";\r\n\r\nexport class FormFunction implements IFormFunction {\r\n\r\n    private _cancel: () => void;\r\n    private _save: (data: any) => void;\r\n    private _delete: (data: any) => void;\r\n\r\n    get cancel(): () => void {\r\n        return this._cancel;\r\n    }\r\n\r\n    set cancel(value: () => void) {\r\n        this._cancel = value;\r\n    }\r\n\r\n    get save(): (data: any) => void {\r\n        return this._save;\r\n    }\r\n\r\n    set save(value: (data: any) => void) {\r\n        this._save = value;\r\n    }\r\n\r\n    get delete(): (data: any) => void {\r\n        return this._delete;\r\n    }\r\n\r\n    set delete(value: (data: any) => void) {\r\n        this._delete = value;\r\n    }\r\n}\r\n","import {Component, Input, Output, ElementRef} from \"@angular/core\";\r\nimport {ValueField} from \"../value-field\";\r\nimport {AutoCompleteFieldEntry} from \"./auto-complete-field-entry\";\r\nimport {Key} from \"../../../page/element/page-element\";\r\nimport {IForm, IFormField} from \"../../../pathinterface\";\r\nimport {TranslationService} from \"../../../service/translation.service\";\r\nimport {PathService} from \"../../../service/path.service\";\r\nimport {Form} from \"../../form.component\";\r\nimport {FormFunction} from \"../../form-function\";\r\nimport {KeyUtility} from \"../../../utility/key-utility\";\r\n\r\n@Component({\r\n    selector: \"path-autocomplete\",\r\n    // tslint:disable-next-line\r\n    host: {\r\n        \"(document:click)\": \"handleClick($event)\",\r\n    },\r\n    templateUrl: \"auto-complete-field.component.html\"\r\n})\r\nexport class AutoCompleteComponent {\r\n    @Input(\"field\")\r\n    @Output(\"field\")\r\n    field: AutoCompleteField;\r\n    private _elementRef;\r\n\r\n    constructor(myElement: ElementRef) {\r\n        this._elementRef = myElement;\r\n    }\r\n\r\n    handleClick(event) {\r\n        if (this.field.isReadonly()) {\r\n            return;\r\n        }\r\n        let clickedComponent = event.target;\r\n        let inside = false;\r\n        do {\r\n            if (clickedComponent === this._elementRef.nativeElement) {\r\n                inside = true;\r\n            }\r\n            clickedComponent = clickedComponent.parentNode;\r\n        } while (clickedComponent);\r\n        if (!inside) {\r\n            this.field.clearFilteredList();\r\n        }\r\n        if (!this.field.valueSet) {\r\n            this.field.query = null;\r\n            this.field.setValue(null);\r\n        }\r\n    }\r\n}\r\n\r\nexport class AutoCompleteField extends ValueField<string> {\r\n    private _query: AutoCompleteFieldEntry;\r\n    private _filteredList: AutoCompleteFieldEntry[] = [];\r\n    private _data: AutoCompleteFieldEntry[] = [];\r\n    private _dataLoaded = false;\r\n    private _wordSearchEnabled: boolean;\r\n    private _valueSet = false;\r\n    private _detailForm: string;\r\n    private _keyType: string;\r\n    private _url: string;\r\n\r\n    constructor(protected form: IForm, protected translationService: TranslationService, protected pathService: PathService) {\r\n        super(form, translationService);\r\n    }\r\n\r\n    public isReadonly() {\r\n        return super.isReadonly() && this.isInitialValueSet;\r\n    }\r\n\r\n    filter(query: string, event) {\r\n        // do not filter readonly fields\r\n        if (this.isReadonly()) {\r\n            return;\r\n        }\r\n        // do not filter on simple tab focus change\r\n        if (event.keyCode === 9) {\r\n            return;\r\n        }\r\n\r\n        this._valueSet = false;\r\n        if (query !== null && query.length > 0 && query.replace(/\\s/g, \"\").length === 0) {\r\n            /* space: all */\r\n            this._filteredList = this._data.filter(function (entry) {\r\n                return entry.active;\r\n            }.bind(this));\r\n        } else if (query !== null && query !== \"\") {\r\n            /* search term: filter */\r\n            query = query.trim();\r\n            this._filteredList = this._data.filter(function (entry) {\r\n                if (!entry.active) {\r\n                    return false;\r\n                }\r\n                const entryName: string = entry.text;\r\n                if (entryName.toLowerCase().indexOf(query.toLowerCase()) > -1) {\r\n                    return true;\r\n                } else if (this._wordSearchEnabled) {\r\n                    const tokens: string[] = entryName.toLowerCase().split(\" \");\r\n                    for (const token of tokens) {\r\n                        if (token.startsWith(query.toLowerCase())) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n                return false;\r\n            }.bind(this));\r\n        } else {\r\n            /* empty: nothing */\r\n            this.clearFilteredList();\r\n        }\r\n        this._filteredList.sort();\r\n    }\r\n\r\n    select(item: AutoCompleteFieldEntry) {\r\n        this.setValue(item.key);\r\n    }\r\n\r\n    focusLost() {\r\n        window.setTimeout(() => {\r\n            if (!this.valueSet) {\r\n                // force angular to update query.text value\r\n                if (this.value == null) {\r\n                    this.resetDisplay(null);\r\n                } else {\r\n                    this.resetDisplay(this.value[\"key\"]);\r\n                }\r\n            }\r\n        }, 1);\r\n    }\r\n\r\n    public setValue(value: string) {\r\n        const oldValue: string = this.value;\r\n\r\n        // accept key values and complex objects\r\n        if (value != null && value[\"key\"] != null) {\r\n            value = value[\"key\"];\r\n            this._keyType = value[\"name\"];\r\n        }\r\n        this._valueSet = value != null;\r\n        this.clearFilteredList();\r\n        super.setValue(value);\r\n        this.query = null;\r\n        this.resetDisplay(value);\r\n        // reload dependent autocomplete fields\r\n        if (oldValue !== this.value) {\r\n            for (const field of this.getForm().getFields()) {\r\n                if (field instanceof AutoCompleteField) {\r\n                    if ((<AutoCompleteField>field).id !== this.id) {\r\n                        const autoCompleteField = <AutoCompleteField>field;\r\n                        if (KeyUtility.variableExists(autoCompleteField.url, this.id)) {\r\n                            autoCompleteField.load();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public load() {\r\n        this.dataLoaded = false;\r\n        let url: string = this.url;\r\n        for (const field of this.getForm().getFields()) {\r\n            if (field instanceof ValueField) {\r\n                const valueField = <ValueField<any>>field;\r\n                url = KeyUtility.replaceVariable(url, valueField.id, valueField.value);\r\n                console.log(url);\r\n            }\r\n        }\r\n        this.pathService.serverGet(this.getForm().getApp().getBackendUrl(), url, (data: any) => {\r\n            const dynamicData = [];\r\n            for (const item of data) {\r\n                const entry = new AutoCompleteFieldEntry();\r\n                entry.key = item[\"key\"][\"key\"];\r\n                entry.text = item[\"name\"];\r\n                if (item[\"active\"] != null) {\r\n                    entry.active = item[\"active\"];\r\n                } else {\r\n                    entry.active = true;\r\n                }\r\n                dynamicData.push(entry);\r\n            }\r\n            this.data = dynamicData;\r\n            this.dataLoaded = true;\r\n            this.setValue(this.value); // force display refresh\r\n        }, null);\r\n    }\r\n\r\n    public getDetailButtonName() {\r\n        if (this.value == null) {\r\n            return this.translationService.getText(\"New\") + \"...\";\r\n        } else {\r\n            return this.translationService.getText(\"Detail\") + \"...\";\r\n        }\r\n    }\r\n\r\n    public showDetailForm() {\r\n        let form: Form = null;\r\n\r\n        const formFunction = new FormFunction();\r\n        formFunction.save = (data: any) => {\r\n            this.getForm().getApp().closeCurrentForm();\r\n            if (data[\"key\"] != null) {\r\n                this.setValue(data[\"key\"]);\r\n            }\r\n            this.load();\r\n        };\r\n        formFunction.cancel = () => {\r\n            this.getForm().getApp().closeCurrentForm();\r\n        };\r\n        formFunction.delete = (data: any) => {\r\n            this.getForm().getApp().closeCurrentForm();\r\n            this.setValue(null);\r\n            this.load();\r\n        };\r\n\r\n        if (this.value == null) {\r\n            form = this.getForm().getApp().createForm(this.detailForm, null, null, formFunction, null);\r\n        } else {\r\n            form = this.getForm().getApp().createForm(this.detailForm, new Key(this.value, this._keyType), null, formFunction, null);\r\n        }\r\n        this.form.getApp()[\"_formStack\"].push(form); // TODO\r\n    }\r\n\r\n    public clearFilteredList() {\r\n        this._filteredList = [];\r\n    }\r\n\r\n    private resetDisplay(value: string) {\r\n        // must wait with display update until data is loaded\r\n        const displaySetter = () => {\r\n            const keyValue = value;\r\n            if (!this.dataLoaded) {\r\n                console.log(\"waiting...\");\r\n                window.setTimeout(function () {\r\n                    displaySetter();\r\n                }, 250);\r\n            } else {\r\n                if (keyValue == null) {\r\n                    window.setTimeout(() => {\r\n                        // check value again, may have changed since reset was triggered\r\n                        if (this.value == null) {\r\n                            this.query = new AutoCompleteFieldEntry();\r\n                        }\r\n                    }, 1);\r\n                } else {\r\n                    for (const item of this._data) {\r\n                        // tslint:disable:triple-equals\r\n                        if (item.key == keyValue) {\r\n                            window.setTimeout(() => {\r\n                                this.query = item;\r\n                            }, 1);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        displaySetter();\r\n    }\r\n\r\n    get query(): AutoCompleteFieldEntry {\r\n        return this._query;\r\n    }\r\n\r\n    set query(value: AutoCompleteFieldEntry) {\r\n        this._query = value;\r\n    }\r\n\r\n    set data(value: AutoCompleteFieldEntry[]) {\r\n        this._data = value;\r\n    }\r\n\r\n    get filteredList(): AutoCompleteFieldEntry[] {\r\n        return this._filteredList;\r\n    }\r\n\r\n    set wordSearchEnabled(value: boolean) {\r\n        this._wordSearchEnabled = value;\r\n    }\r\n\r\n    get valueSet(): boolean {\r\n        return this._valueSet;\r\n    }\r\n\r\n    get dataLoaded(): boolean {\r\n        return this._dataLoaded;\r\n    }\r\n\r\n    set dataLoaded(value: boolean) {\r\n        this._dataLoaded = value;\r\n    }\r\n\r\n    get detailForm(): string {\r\n        return this._detailForm;\r\n    }\r\n\r\n    set detailForm(value: string) {\r\n        this._detailForm = value;\r\n    }\r\n\r\n    get url(): string {\r\n        return this._url;\r\n    }\r\n\r\n    set url(value: string) {\r\n        this._url = value;\r\n    }\r\n}\r\n","import {Component, Input, Output} from \"@angular/core\";\r\nimport {ValueField} from \"../value-field\";\r\n\r\n@Component({\r\n    selector: \"path-textfield\",\r\n    templateUrl: \"text-field.component.html\"\r\n})\r\nexport class TextFieldComponent {\r\n    @Input(\"field\")\r\n    @Output(\"field\")\r\n    field: TextField;\r\n}\r\n\r\nexport class TextField extends ValueField<string> {\r\n\r\n    private _isPassword = false;\r\n    private _maxLength = 250;\r\n\r\n    get isPassword(): boolean {\r\n        return this._isPassword;\r\n    }\r\n\r\n    set isPassword(value: boolean) {\r\n        this._isPassword = value;\r\n    }\r\n\r\n    get maxLength(): number {\r\n        return this._maxLength;\r\n    }\r\n\r\n    set maxLength(value: number) {\r\n        this._maxLength = value;\r\n    }\r\n\r\n    public fromJson(modelFormField) {\r\n        super.fromJson(modelFormField);\r\n        if (modelFormField[\"isPassword\"] != null) {\r\n            this.isPassword = (modelFormField[\"isPassword\"]);\r\n        }\r\n        if (modelFormField[\"maxLength\"] != null) {\r\n            this.maxLength = (modelFormField[\"maxLength\"]);\r\n        }\r\n    }\r\n\r\n}\r\n","import {Component, Input, Output} from \"@angular/core\";\r\nimport {ValueField} from \"../value-field\";\r\nimport {IForm} from \"../../../pathinterface\";\r\nimport {TranslationService} from \"../../../service/translation.service\";\r\nimport * as momentImported from \"moment\";\r\n\r\nconst moment = momentImported;\r\n\r\n@Component({\r\n    selector: \"path-datefield\",\r\n    templateUrl: \"date-field.component.html\"\r\n})\r\nexport class DateFieldComponent {\r\n    @Input(\"field\")\r\n    @Output(\"field\")\r\n    field: DateField;\r\n}\r\n\r\nexport class DateField extends ValueField<Date> {\r\n\r\n    private _datePickerValue: Date;\r\n    private _initialValueSet = false;\r\n    private _datePickerInitialValue: Date;\r\n    private _dateInputFormat: string;\r\n\r\n    constructor(protected form: IForm, protected translationService: TranslationService) {\r\n        super(form, translationService);\r\n        this._dateInputFormat = translationService.getUserDateFormat();\r\n    }\r\n\r\n    get datePickerValue(): Date {\r\n        return this._datePickerValue;\r\n    }\r\n\r\n    set datePickerValue(value: Date) {\r\n        this._datePickerValue = value;\r\n    }\r\n\r\n    get initialValueSet(): boolean {\r\n        return this._initialValueSet;\r\n    }\r\n\r\n    get datePickerInitialValue(): Date {\r\n        return this._datePickerInitialValue;\r\n    }\r\n\r\n    get dateInputFormat(): string {\r\n        return this._dateInputFormat;\r\n    }\r\n\r\n    public setValue(value: Date) {\r\n        if (typeof value === \"string\") {\r\n            value = moment(value).toDate();\r\n        }\r\n        if (value != null && Object.prototype.toString.call(value) === \"[object Date]\") {\r\n            // it is a date\r\n            if (isNaN(value.getTime())) {\r\n                value = null;\r\n            } else {\r\n                // cut off local timezone\r\n                value = new Date(value.toDateString() + \" 00:00:00 GMT\");\r\n            }\r\n        } else {\r\n            value = null;\r\n        }\r\n        // update ui\r\n        this._datePickerValue = value;\r\n        super.setValue(value);\r\n        if (!this._initialValueSet) {\r\n            this._datePickerInitialValue = value;\r\n            this._initialValueSet = true;\r\n        }\r\n    }\r\n\r\n    public updateValueFromGui(value: Date) {\r\n        if (value != null && isNaN(value.getDate())) {\r\n            value = null;\r\n        }\r\n        if (value != null) {\r\n            this.setValue(value);\r\n            this._datePickerValue = this.value;\r\n        }\r\n    }\r\n}\r\n","import {FormField} from \"../form-field\";\r\n\r\nexport class Radio extends FormField {\r\n    private _key: string;\r\n\r\n    get key(): string {\r\n        return this._key;\r\n    }\r\n\r\n    set key(value: string) {\r\n        this._key = value;\r\n    }\r\n}\r\n","import {Component, Input, Output} from \"@angular/core\";\r\nimport {Radio} from \"./radio\";\r\nimport {ValueField} from \"../value-field\";\r\n\r\n@Component({\r\n    selector: \"path-radio-group\",\r\n    templateUrl: \"radio-group.component.html\"\r\n})\r\nexport class RadioGroupComponent {\r\n    @Input(\"field\")\r\n    @Output(\"field\")\r\n    field: RadioGroupField;\r\n}\r\n\r\nexport class RadioGroupField extends ValueField<string> {\r\n    private _radios: Radio[] = [];\r\n    private _horizontal: boolean;\r\n\r\n    get radios(): Radio[] {\r\n        return this._radios;\r\n    }\r\n\r\n    set radios(value: Radio[]) {\r\n        this._radios = value;\r\n    }\r\n\r\n    get horizontal(): boolean {\r\n        return this._horizontal;\r\n    }\r\n\r\n    set horizontal(value: boolean) {\r\n        this._horizontal = value;\r\n    }\r\n\r\n    public setValue(value: string) {\r\n        if (value != null) {\r\n            value = value.toString();\r\n        }\r\n        super.setValue(value);\r\n    }\r\n\r\n    public updateValueFromGui(value: string) {\r\n        this.setValue(value.toString());\r\n    }\r\n\r\n    public isReadonly() {\r\n        return super.isReadonly() && this.isInitialValueSet;\r\n    }\r\n\r\n    public fromJson(modelFormField) {\r\n        super.fromJson(modelFormField);\r\n        this._horizontal = true;\r\n        if (modelFormField[\"alignment\"] != null) {\r\n            if (modelFormField[\"alignment\"] === \"vertical\") {\r\n                this._horizontal = false;\r\n            }\r\n        }\r\n        if (modelFormField[\"radios\"] != null) {\r\n            for (const radioModel of modelFormField[\"radios\"]) {\r\n                const radio = new Radio(this.getForm(), this.translationService);\r\n                radio.name = radioModel.name;\r\n                radio.key = radioModel.key;\r\n                if (radio.key === modelFormField[\"defaultKey\"]) {\r\n                    this.setValue(radio.key);\r\n                }\r\n                this.radios.push(radio);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import {Component, Input, Output} from \"@angular/core\";\r\nimport {ValueField} from \"../value-field\";\r\n\r\n@Component({\r\n    selector: \"path-checkbox-group\",\r\n    templateUrl: \"checkbox-group.component.html\"\r\n})\r\nexport class CheckboxGroupComponent {\r\n    @Input(\"field\")\r\n    @Output(\"field\")\r\n    field: CheckboxGroupField;\r\n}\r\n\r\nexport class CheckboxGroupField extends ValueField<any[]> {\r\n    private _entries: CheckboxGroupEntry[] = [];\r\n\r\n    get entries(): CheckboxGroupEntry[] {\r\n        return this._entries;\r\n    }\r\n\r\n    set entries(value: CheckboxGroupEntry[]) {\r\n        this._entries = value;\r\n    }\r\n\r\n    public doClick() {\r\n        const values: any[] = [];\r\n        for (const entry of this.entries) {\r\n            if (entry.selected) {\r\n                values.push(entry.key);\r\n            }\r\n        }\r\n        this.setValue(values);\r\n    }\r\n\r\n    public setValue(values: any[]) {\r\n        super.setValue(values);\r\n        for (const entry of this.entries) {\r\n            entry.selected = false;\r\n        }\r\n        for (const value of values) {\r\n            for (const entry of this.entries) {\r\n                if (entry.key === value) {\r\n                    entry.selected = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public fromJson(modelFormField) {\r\n        super.fromJson(modelFormField);\r\n        for (const entryModel of modelFormField[\"data\"]) {\r\n            const entry = new CheckboxGroupEntry();\r\n            entry.name = entryModel.name;\r\n            entry.key = entryModel.key;\r\n            entry.selected = false;\r\n            this.entries.push(entry);\r\n        }\r\n    }\r\n}\r\n\r\nexport class CheckboxGroupEntry {\r\n    private _key: any;\r\n    private _name: string;\r\n    private _selected: boolean;\r\n\r\n    get key(): any {\r\n        return this._key;\r\n    }\r\n\r\n    set key(value: any) {\r\n        this._key = value;\r\n    }\r\n\r\n    get name(): string {\r\n        return this._name;\r\n    }\r\n\r\n    set name(value: string) {\r\n        this._name = value;\r\n    }\r\n\r\n    get selected(): boolean {\r\n        return this._selected;\r\n    }\r\n\r\n    set selected(value: boolean) {\r\n        this._selected = value;\r\n    }\r\n}\r\n","import {Component, Input} from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"path-form-field-label\",\r\n    templateUrl: \"form-field-label.component.html\"\r\n})\r\nexport class FormFieldLabelComponent {\r\n    @Input(\"label\")\r\n    label: string;\r\n\r\n    @Input(\"required\")\r\n    required: boolean;\r\n}\r\n\r\n","import {Component, Input, Output} from \"@angular/core\";\r\nimport {ValueField} from \"../value-field\";\r\n\r\n@Component({\r\n    selector: \"path-progress-bar\",\r\n    templateUrl: \"progress-bar.component.html\"\r\n})\r\nexport class ProgressBarComponent {\r\n    @Input(\"field\")\r\n    @Output(\"field\")\r\n    field: ProgressBarField;\r\n}\r\n\r\nexport class ProgressBarField extends ValueField<number> {\r\n\r\n    public fromJson(modelFormField) {\r\n        super.fromJson(modelFormField);\r\n        this.setValue(modelFormField[\"value\"]);\r\n    }\r\n\r\n}\r\n","import {Component, Input, Output} from \"@angular/core\";\r\nimport {ValueField} from \"../value-field\";\r\n\r\n@Component({\r\n    selector: \"path-label-field\",\r\n    templateUrl: \"label-field.component.html\"\r\n})\r\nexport class LabelFieldComponent {\r\n    @Input(\"field\")\r\n    @Output(\"field\")\r\n    field: LabelField;\r\n}\r\n\r\nexport class LabelField extends ValueField<string> {\r\n}\r\n","import {Component, Input, Output} from \"@angular/core\";\r\nimport {ValueField} from \"../value-field\";\r\n\r\n@Component({\r\n    selector: \"path-numberfield\",\r\n    templateUrl: \"number-field.component.html\"\r\n})\r\nexport class NumberFieldComponent {\r\n    @Input(\"field\")\r\n    @Output(\"field\")\r\n    field: NumberField;\r\n}\r\n\r\nexport class NumberField extends ValueField<number> {\r\n    private _min: number;\r\n    private _max: number;\r\n    private _digits: number;\r\n\r\n    get min(): number {\r\n        return this._min;\r\n    }\r\n\r\n    set min(value: number) {\r\n        this._min = value;\r\n    }\r\n\r\n    get max(): number {\r\n        return this._max;\r\n    }\r\n\r\n    set max(value: number) {\r\n        this._max = value;\r\n    }\r\n\r\n    get digits(): number {\r\n        return this._digits;\r\n    }\r\n\r\n    set digits(value: number) {\r\n        this._digits = value;\r\n    }\r\n\r\n    public getStep(): string {\r\n        if (this._digits == null) {\r\n            return \"\";\r\n        } else if (this._digits === 0) {\r\n            return \"0\";\r\n        }\r\n        // e.g. 3 => 0.001\r\n        let step = \"0.\";\r\n        for (let k = 0; k < this._digits - 1; k++) {\r\n            step = step + \"0\";\r\n        }\r\n        return step + \"1\";\r\n    }\r\n\r\n    public fromJson(modelFormField) {\r\n        super.fromJson(modelFormField);\r\n        if (modelFormField[\"min\"] != null) {\r\n            this.min = modelFormField[\"min\"];\r\n        }\r\n        if (modelFormField[\"max\"] != null) {\r\n            this.max = modelFormField[\"max\"];\r\n        }\r\n        if (modelFormField[\"digits\"] != null) {\r\n            this.digits = modelFormField[\"digits\"];\r\n        }\r\n    }\r\n}\r\n","import {FormField} from \"../form-field\";\r\nimport {IButtonHandler} from \"../../../pathinterface\";\r\n\r\nexport class OkButton extends FormField {\r\n    private _handler: IButtonHandler;\r\n\r\n    get handler(): IButtonHandler {\r\n        return this._handler;\r\n    }\r\n\r\n    set handler(value: IButtonHandler) {\r\n        this._handler = value;\r\n    }\r\n\r\n    public onClick() {\r\n        if (this._handler != null) {\r\n            this._handler.doClick(null); // TODO\r\n        }\r\n        // closing/saving is done in submit function on form component\r\n    }\r\n}\r\n","import {FormField} from \"../form-field\";\r\nimport {IButtonHandler} from \"../../../pathinterface\";\r\n\r\nexport class CancelButton extends FormField {\r\n    private _handler: IButtonHandler;\r\n\r\n    get handler(): IButtonHandler {\r\n        return this._handler;\r\n    }\r\n\r\n    set handler(value: IButtonHandler) {\r\n        this._handler = value;\r\n    }\r\n\r\n    public onClick() {\r\n        if (this._handler != null) {\r\n            this._handler.doClick(null); // TODO\r\n        }\r\n        this.form.close(false, false);\r\n    }\r\n\r\n}\r\n","import {Component, Input, Output} from \"@angular/core\";\r\nimport {ValueField} from \"../value-field\";\r\nimport {FormFunction} from \"../../form-function\";\r\nimport {Form} from \"../../form.component\";\r\nimport {OkButton} from \"../button/ok-button\";\r\nimport {CancelButton} from \"../button/cancel-button\";\r\nimport {PathService} from \"../../../service/path.service\";\r\nimport {TextField} from \"../text/text-field.component\";\r\nimport {TranslationService} from \"../../../service/translation.service\";\r\nimport {FocusUtility} from \"../../focus-utility\";\r\n\r\n@Component({\r\n    selector: \"path-translationfield\",\r\n    templateUrl: \"translation-field.component.html\"\r\n})\r\nexport class TranslationFieldComponent {\r\n    @Input(\"field\")\r\n    @Output(\"field\")\r\n    field: TranslationField;\r\n}\r\n\r\nexport class TranslationField extends ValueField<any[][]> {\r\n\r\n    private languages: string[];\r\n    private userLanguage: string;\r\n    private _defaultTranslation: string = null;\r\n    private _translationLabel: string;\r\n\r\n    constructor(form: Form, private pathService: PathService, public translationService: TranslationService) {\r\n        super(form, translationService);\r\n        this.userLanguage = translationService.getUserLanguage();\r\n        this.languages = translationService.getSupportedLanguageCodes();\r\n        const initialList: any[][] = [];\r\n        for (const language of this.languages) {\r\n            initialList.push([{\"key\": language}, \"\"]);\r\n        }\r\n        this.setValue(initialList);\r\n        this._translationLabel = translationService.getText(\"Translation\");\r\n    }\r\n\r\n    get defaultTranslation(): string {\r\n        return this._defaultTranslation;\r\n    }\r\n\r\n    set defaultTranslation(value: string) {\r\n        this._defaultTranslation = value;\r\n    }\r\n\r\n    get translationLabel(): string {\r\n        return this._translationLabel;\r\n    }\r\n\r\n    public setValue(value: any[][]) {\r\n        super.setValue(value);\r\n        this._defaultTranslation = this.getDefaultTranslation();\r\n    }\r\n\r\n    private getDefaultTranslation(): string {\r\n        if (this.value != null) {\r\n            for (const item of this.value) {\r\n                if (item[0] != null && item[0][\"key\"] === this.userLanguage) {\r\n                    return item[1];\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public editTranslations() {\r\n        const form: Form = new Form(this.pathService, this.form.getApp());\r\n        const translationFields: TextField[] = [];\r\n        form.title = this.name + \" \" + this.translationService.getText(\"Translations\");\r\n        form.formFunction = new FormFunction();\r\n        form.formFunction.save = (data: any) => {\r\n            const resultList: any[][] = [];\r\n            for (const field of translationFields) {\r\n                resultList.push([{\"key\": field.id}, field.value]);\r\n            }\r\n            this.setValue(resultList);\r\n            this.getForm().getApp().closeCurrentForm();\r\n        };\r\n        form.formFunction.cancel = () => {\r\n            this.getForm().getApp().closeCurrentForm();\r\n        };\r\n        const translations = this.value;\r\n        for (const key of translations) {\r\n            const textField: TextField = new TextField(form, this.translationService);\r\n            textField.type = \"text\";\r\n            textField.id = key[0][\"key\"];\r\n            textField.name = this.translationService.getText(key[0][\"key\"]);\r\n            textField.visible = true;\r\n            textField.newRow = true;\r\n            textField.width = 2;\r\n            textField.height = this.height;\r\n            textField.labelVisible = true;\r\n            textField.required = true;\r\n            textField.setValue(key[1]);\r\n            form.fields.push(textField);\r\n            translationFields.push(textField);\r\n        }\r\n\r\n        const cancelButton: CancelButton = new CancelButton(form, this.translationService);\r\n        cancelButton.type = \"cancelButton\";\r\n        cancelButton.name = this.translationService.getText(\"Cancel\");\r\n        cancelButton.visible = true;\r\n        form.fields.push(cancelButton);\r\n\r\n        const okButton: OkButton = new OkButton(form, this.translationService);\r\n        okButton.type = \"okButton\";\r\n        okButton.name = this.translationService.getText(\"Ok\");\r\n        okButton.visible = true;\r\n        form.fields.push(okButton);\r\n\r\n        form.updateRows();\r\n\r\n        this.form.getApp()[\"_formStack\"].push(form); // TODO\r\n        FocusUtility.focusFirstField(form);\r\n    }\r\n\r\n}\r\n\r\nexport class TranslationEntry {\r\n    private _text: string;\r\n    private _code: string;\r\n\r\n    get text(): string {\r\n        return this._text;\r\n    }\r\n\r\n    set text(value: string) {\r\n        this._text = value;\r\n    }\r\n\r\n    get code(): string {\r\n        return this._code;\r\n    }\r\n\r\n    set code(value: string) {\r\n        this._code = value;\r\n    }\r\n}\r\n","import {Directive, ElementRef, HostListener, Input, OnInit} from \"@angular/core\";\r\n\r\n// Initially by https://github.com/cedvdb/ng2draggable\r\n// MIT License: https://github.com/cedvdb/ng2draggable/blob/master/LICENSE\r\n\r\n@Directive({\r\n    selector: \"[path-draggable]\"\r\n})\r\nexport class DraggableDirective implements OnInit {\r\n    topStart = 0;\r\n    leftStart = 0;\r\n    _allowDrag = true;\r\n    md: boolean;\r\n\r\n    constructor(public element: ElementRef) {\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n        // draggable only for desktop version (styles for desktop are added when innerWidth>1100)\r\n        if (window.innerWidth < 768) {\r\n            this._allowDrag = false;\r\n        }\r\n        // css changes\r\n        if (this._allowDrag) {\r\n            this.element.nativeElement.style.position = \"relative\";\r\n            this.element.nativeElement.className += \" cursor-draggable\";\r\n        }\r\n\r\n    }\r\n\r\n    @Input(\"path-draggable\")\r\n    set allowDrag(value: boolean) {\r\n        this._allowDrag = value;\r\n        if (this._allowDrag) {\r\n            this.element.nativeElement.className += \" cursor-draggable\";\r\n        } else {\r\n            this.element.nativeElement.className = this.element.nativeElement.className.replace(\" cursor-draggable\", \"\");\r\n        }\r\n    }\r\n\r\n    @HostListener(\"mousedown\", [\"$event\"])\r\n    onMouseDown(event: MouseEvent) {\r\n        const eventTargetTag: string = event.target[\"tagName\"].toLowerCase();\r\n        if (eventTargetTag === \"input\" || eventTargetTag === \"button\" || eventTargetTag === \"textarea\") {\r\n            return;\r\n        }\r\n        if (event.button === 2) {\r\n            return; // prevents right click drag, remove his if you don't want it\r\n        }\r\n        this.md = true;\r\n        this.topStart = event.clientY - this.element.nativeElement.style.top.replace(\"px\", \"\");\r\n        this.leftStart = event.clientX - this.element.nativeElement.style.left.replace(\"px\", \"\");\r\n    }\r\n\r\n    @HostListener(\"document:mouseup\")\r\n    onMouseUp(event: MouseEvent) {\r\n        this.md = false;\r\n    }\r\n\r\n    @HostListener(\"document:mousemove\", [\"$event\"])\r\n    onMouseMove(event: MouseEvent) {\r\n        if (this.md && this._allowDrag) {\r\n            this.element.nativeElement.style.top = (event.clientY - this.topStart) + \"px\";\r\n            this.element.nativeElement.style.left = (event.clientX - this.leftStart) + \"px\";\r\n        }\r\n    }\r\n\r\n    @HostListener(\"touchstart\", [\"$event\"])\r\n    onTouchStart(event: any) { // TouchEvent\r\n        this.md = true;\r\n        this.topStart = event.changedTouches[0].clientY - this.element.nativeElement.style.top.replace(\"px\", \"\");\r\n        this.leftStart = event.changedTouches[0].clientX - this.element.nativeElement.style.left.replace(\"px\", \"\");\r\n        event.stopPropagation();\r\n    }\r\n\r\n    @HostListener(\"document:touchend\")\r\n    onTouchEnd() {\r\n        this.md = false;\r\n    }\r\n\r\n    @HostListener(\"document:touchmove\", [\"$event\"])\r\n    onTouchMove(event: any) { // TouchEvent\r\n        if (this.md && this._allowDrag) {\r\n            this.element.nativeElement.style.top = (event.changedTouches[0].clientY - this.topStart) + \"px\";\r\n            this.element.nativeElement.style.left = (event.changedTouches[0].clientX - this.leftStart) + \"px\";\r\n        }\r\n        event.stopPropagation();\r\n    }\r\n}\r\n","export class StringUtility {\r\n\r\n    public static isEmpty(str: string): boolean {\r\n        return (!str || 0 === str.length);\r\n    }\r\n\r\n}\r\n","export class ButtonDetail {\r\n    private _text: string;\r\n\r\n    get text(): string {\r\n        return this._text;\r\n    }\r\n\r\n    set text(value: string) {\r\n        this._text = value;\r\n    }\r\n}\r\n","import {StringUtility} from \"./string-utility\";\r\n\r\nexport class ColorUtility {\r\n\r\n    private static colors = [\r\n        \"blue\",\r\n        \"green\",\r\n        \"search\",\r\n        \"red\",\r\n        \"yellow\",\r\n        \"orange\",\r\n        \"pink\",\r\n        \"purple\",\r\n        \"lime\",\r\n        \"magenta\",\r\n        \"teal\",\r\n        \"turquoise\",\r\n        \"green-sea\",\r\n        \"emerald\",\r\n        \"nephritis\",\r\n        \"peter-river\",\r\n        \"belize-hole\",\r\n        \"amethyst\",\r\n        \"wisteria\",\r\n        \"wet-asphalt\",\r\n        \"midnight-blue\",\r\n        \"sun-flower\",\r\n        \"carrot\",\r\n        \"pumpkin\",\r\n        \"alizarin\",\r\n        \"pomegranate\",\r\n        \"clouds\",\r\n        \"silver\",\r\n        \"concrete\",\r\n        \"asbestos\",\r\n        \"info\",\r\n        \"danger\",\r\n        \"warning\",\r\n        \"success\"\r\n    ];\r\n\r\n    public static isPathDefaultColor(color: string): boolean {\r\n        return this.colors.indexOf(color) > 0;\r\n    }\r\n\r\n}\r\n","import {Key, PageElement} from \"../page-element\";\r\nimport {PathService} from \"../../../service/path.service\";\r\nimport {IButton, IButtonHandler, IPathApp} from \"../../../pathinterface\";\r\nimport {Input, Output, Component} from \"@angular/core\";\r\nimport {TranslationService} from \"../../../service/translation.service\";\r\nimport {KeyUtility} from \"../../../utility/key-utility\";\r\nimport {ButtonDetail} from \"./button-detail\";\r\nimport {StringUtility} from \"../../../utility/string-utility\";\r\nimport {ColorUtility} from \"../../../utility/color-utility\";\r\n\r\n@Component({\r\n    selector: \"path-button\",\r\n    templateUrl: \"button.component.html\"\r\n})\r\nexport class ButtonComponent {\r\n    @Input(\"button\")\r\n    @Output(\"button\")\r\n    button: Button;\r\n}\r\n\r\nexport class Button extends PageElement implements IButton {\r\n    private _icon: string;\r\n    private _cssStyle: Object;\r\n    private _cssClass: string;\r\n    private _cssButtonTarget: boolean;\r\n    private _cssGroupBorder: string;\r\n    private _handler: IButtonHandler;\r\n    private _details: ButtonDetail[] = [];\r\n    private _tooltip: string;\r\n\r\n    // TODO refactor prototype stuff\r\n    private _url: string;\r\n    private _page: string;\r\n    private _form: string;\r\n    private _formHandler: string;\r\n\r\n    constructor(app: IPathApp, protected pathService: PathService, protected translationService: TranslationService) {\r\n        super(app);\r\n    }\r\n\r\n    public onClick() {\r\n        if (this._handler != null) {\r\n            this._handler.doClick(this);\r\n            return;\r\n        }\r\n\r\n        if (!StringUtility.isEmpty(this._url)) {\r\n            this.pathService.serverGet(this.app.getBackendUrl(), this._url, () => {\r\n                this.app.refreshCurrentPage();\r\n            }, null);\r\n        }\r\n\r\n        if (!StringUtility.isEmpty(this._page)) {\r\n            this.app.setCurrentPage(this._page, this);\r\n            return;\r\n        }\r\n\r\n        if (!StringUtility.isEmpty(this._form)) {\r\n            this.app.setCurrentForm(this._form, this.key, this._formHandler, this);\r\n            return;\r\n        }\r\n    }\r\n\r\n    public setIcon(icon: string) {\r\n        this.icon = icon;\r\n    }\r\n\r\n    public setForm(form: string) {\r\n        this.form = form;\r\n    }\r\n\r\n    public setFormHandler(formHandler: string) {\r\n        this.formHandler = formHandler;\r\n    }\r\n\r\n    public setPage(page: string) {\r\n        this.page = page;\r\n    }\r\n\r\n    public setKey(key: Key) {\r\n        this.key = key;\r\n    }\r\n\r\n    public getApp() {\r\n        return this.app;\r\n    }\r\n\r\n    public getName() {\r\n        return this.name;\r\n    }\r\n\r\n    get icon(): string {\r\n        return this._icon;\r\n    }\r\n\r\n    set icon(value: string) {\r\n        this._icon = value;\r\n    }\r\n\r\n    get cssStyle(): Object {\r\n        return this._cssStyle;\r\n    }\r\n\r\n    get cssClass(): string {\r\n        return this._cssClass;\r\n    }\r\n\r\n    get cssButtonTarget(): boolean {\r\n        return this._cssButtonTarget;\r\n    }\r\n\r\n    get cssGroupBorder(): string {\r\n        return this._cssGroupBorder;\r\n    }\r\n\r\n    set cssGroupBorder(value: string) {\r\n        this._cssGroupBorder = value;\r\n    }\r\n\r\n    get handler(): IButtonHandler {\r\n        return this._handler;\r\n    }\r\n\r\n    set handler(value: IButtonHandler) {\r\n        this._handler = value;\r\n    }\r\n\r\n    get details(): ButtonDetail[] {\r\n        return this._details;\r\n    }\r\n\r\n    set details(value: ButtonDetail[]) {\r\n        this._details = value;\r\n    }\r\n\r\n    get page(): string {\r\n        return this._page;\r\n    }\r\n\r\n    set page(value: string) {\r\n        this._page = value;\r\n    }\r\n\r\n    get form(): string {\r\n        return this._form;\r\n    }\r\n\r\n    set form(value: string) {\r\n        this._form = value;\r\n    }\r\n\r\n    get formHandler(): string {\r\n        return this._formHandler;\r\n    }\r\n\r\n    set formHandler(value: string) {\r\n        this._formHandler = value;\r\n    }\r\n\r\n    get url(): string {\r\n        return this._url;\r\n    }\r\n\r\n    set url(value: string) {\r\n        this._url = value;\r\n    }\r\n\r\n    get tooltip(): string {\r\n        return this._tooltip;\r\n    }\r\n\r\n    set tooltip(value: string) {\r\n        this._tooltip = value;\r\n    }\r\n\r\n    public fromJson(modelElement) {\r\n        super.fromJson(modelElement);\r\n\r\n        // general attributes\r\n        this.type = \"button\";\r\n        this.setIcon(modelElement[\"icon\"]);\r\n        if (modelElement[\"color\"] != null) {\r\n            const color = modelElement[\"color\"];\r\n            if (typeof color === \"object\") {\r\n                this._cssStyle = color;\r\n            } else if (typeof color === \"string\") {\r\n                if (ColorUtility.isPathDefaultColor(color)) {\r\n                    this._cssClass = \"tile-\" + color;\r\n                } else {\r\n                    this._cssClass = color;\r\n                }\r\n            }\r\n        }\r\n        if (modelElement[\"form\"] != null) {\r\n            this.setForm(modelElement[\"form\"][\"form\"]);\r\n            this.setFormHandler(modelElement[\"form\"][\"handler\"]);\r\n        }\r\n        this.setPage(modelElement[\"page\"]);\r\n        if (this.key == null && this.parentPageElement != null && modelElement.type === \"button\") {\r\n            this.key = this.parentPageElement.key;\r\n        }\r\n        this.name = this.translationService.getText(modelElement[\"name\"]);\r\n        this.url = KeyUtility.translateUrl(modelElement[\"url\"], null, false, this);\r\n        if (modelElement[\"tooltip\"] != null) {\r\n            this.tooltip = this.translationService.getText(modelElement[\"tooltip\"]);\r\n        }\r\n        // button details\r\n        if (modelElement[\"details\"] != null) {\r\n            this.details = [];\r\n            for (const detail of modelElement[\"details\"]) {\r\n                const bd: ButtonDetail = new ButtonDetail();\r\n                bd.text = detail;\r\n                this.details.push(bd);\r\n            }\r\n        }\r\n        // button target\r\n        this._cssButtonTarget = true;\r\n        if (this.type === \"button\") {\r\n            if (StringUtility.isEmpty(this.form) && StringUtility.isEmpty(this.page) && StringUtility.isEmpty(this.url)) {\r\n                this._cssButtonTarget = false;\r\n            }\r\n        }\r\n    }\r\n}\r\n","import {Component, Input, Output} from \"@angular/core\";\r\nimport {IPathApp} from \"../../../pathinterface\";\r\nimport {PathService} from \"../../../service/path.service\";\r\nimport {TranslationService} from \"../../../service/translation.service\";\r\nimport {StringUtility} from \"../../../utility/string-utility\";\r\nimport {Button} from \"./button.component\";\r\n\r\n@Component({\r\n    selector: \"path-back-button\",\r\n    templateUrl: \"back-button.component.html\"\r\n})\r\nexport class BackButtonComponent {\r\n    @Input(\"button\")\r\n    @Output(\"button\")\r\n    button: BackButton;\r\n}\r\n\r\nexport class BackButton extends Button {\r\n\r\n    constructor(app: IPathApp, pathService: PathService, translationService: TranslationService) {\r\n        super(app, pathService, translationService);\r\n    }\r\n\r\n    public onClick() {\r\n        this.app.navigateBack();\r\n    }\r\n\r\n    public fromJson(modelElement) {\r\n        if (StringUtility.isEmpty(modelElement[\"color\"])) {\r\n            modelElement[\"color\"] = \"silver\";\r\n        }\r\n        super.fromJson(modelElement);\r\n        this.type = \"backbutton\";\r\n        this.name = this.translationService.getText(\"Back\");\r\n    }\r\n\r\n}\r\n","import {Button} from \"./button.component\";\r\nimport {PathService} from \"../../../service/path.service\";\r\nimport {IPathApp} from \"../../../pathinterface\";\r\nimport {Component, Input, Output} from \"@angular/core\";\r\nimport {TranslationService} from \"../../../service/translation.service\";\r\nimport {KeyUtility} from \"../../../utility/key-utility\";\r\n\r\n@Component({\r\n    selector: \"path-link-button\",\r\n    templateUrl: \"link-button.component.html\"\r\n})\r\nexport class LinkButtonComponent {\r\n    @Input(\"button\")\r\n    @Output(\"button\")\r\n    button: LinkButton;\r\n}\r\n\r\nexport class LinkButton extends Button {\r\n\r\n    constructor(app: IPathApp, pathService: PathService, translationService: TranslationService) {\r\n        super(app, pathService, translationService);\r\n    }\r\n\r\n    public onClick() {\r\n        let url: string = null;\r\n        if (this.url.startsWith(\"/\")) {\r\n            // local relative url\r\n            url = this.getApp().getBackendUrl() + this.url + \"?token=\" + sessionStorage.getItem(\"pathAppId\");\r\n        } else {\r\n            // remote absolute url\r\n            url = this.url;\r\n        }\r\n        window.location.assign(url);\r\n    }\r\n\r\n    public fromJson(modelElement) {\r\n        super.fromJson(modelElement);\r\n        this.type = \"linkButton\";\r\n        this.url = KeyUtility.translateUrl(modelElement[\"url\"], null, false, this.parentPageElement);\r\n    }\r\n}\r\n","import {Button} from \"./button.component\";\r\nimport {PathService} from \"../../../service/path.service\";\r\nimport {IPathApp} from \"../../../pathinterface\";\r\nimport {TranslationService} from \"../../../service/translation.service\";\r\nimport {Output, Input, Component} from \"@angular/core\";\r\nimport {KeyUtility} from \"../../../utility/key-utility\";\r\n\r\n@Component({\r\n    selector: \"path-page-delete-button\",\r\n    templateUrl: \"page-delete-button.component.html\"\r\n})\r\nexport class PageDeleteButtonComponent {\r\n    @Input(\"button\")\r\n    @Output(\"button\")\r\n    button: PageDeleteButton;\r\n}\r\n\r\nexport class PageDeleteButton extends Button {\r\n\r\n    constructor(app: IPathApp, pathService: PathService, translationService: TranslationService) {\r\n        super(app, pathService, translationService);\r\n        this.name = translationService.getText(\"Delete\");\r\n    }\r\n\r\n    public onClick() {\r\n        this.getApp().yesNo(this.translationService.getText(\"DeleteWarningQuestion\"), () => {\r\n            this.pathService.serverDelete(this.getApp().getBackendUrl(), this.url, () => {\r\n                this.getApp().navigateBack();\r\n                this.getApp().refreshCurrentPage();\r\n            });\r\n        }, () => {\r\n        });\r\n    }\r\n\r\n    public fromJson(modelElement) {\r\n        super.fromJson(modelElement);\r\n        this.type = \"deleteButton\";\r\n        this.url = KeyUtility.translateUrl(modelElement[\"url\"], null, false, this.parentPageElement);\r\n    }\r\n}\r\n","import {IPathApp} from \"../../../pathinterface\";\r\nimport {TranslationService} from \"../../../service/translation.service\";\r\nimport {PathService} from \"../../../service/path.service\";\r\nimport {Component, Input, Output} from \"@angular/core\";\r\nimport {PageElement} from \"../page-element\";\r\n\r\n@Component({\r\n    selector: \"path-page-label\",\r\n    templateUrl: \"page-label.component.html\"\r\n})\r\nexport class PageLabelComponent {\r\n    @Input(\"pageLabel\")\r\n    @Output(\"pageLabel\")\r\n    pageLabel: PageLabel;\r\n}\r\n\r\nexport class PageLabel extends PageElement {\r\n\r\n    private _value: string;\r\n\r\n    constructor(app: IPathApp, pathService: PathService, translationService: TranslationService) {\r\n        super(app);\r\n    }\r\n\r\n    get value(): string {\r\n        return this._value;\r\n    }\r\n\r\n    public onClick() {\r\n        this.app.navigateBack();\r\n    }\r\n\r\n    public fromJson(modelElement) {\r\n        super.fromJson(modelElement);\r\n        this.type = \"pageLabel\";\r\n        if (modelElement[\"value\"] != null) {\r\n            this._value = modelElement[\"value\"];\r\n        }\r\n    }\r\n}\r\n","import {IButton, IButtonHandler, IList, IListHandler, IPathApp} from \"../../../pathinterface\";\r\nimport {PathService} from \"../../../service/path.service\";\r\nimport {AfterViewInit, Component, Input, Output} from \"@angular/core\";\r\nimport {ButtonGroup} from \"../button-group/button-group.component\";\r\nimport {PageElement} from \"../page-element\";\r\nimport {TranslationService} from \"../../../service/translation.service\";\r\nimport {KeyUtility} from \"../../../utility/key-utility\";\r\nimport {Button} from \"../button/button.component\";\r\nimport {FocusUtility} from \"../../../form/focus-utility\";\r\nimport {Subject} from \"rxjs\";\r\nimport {debounceTime} from \"rxjs/operators\";\r\n\r\n@Component({\r\n    selector: \"path-list\",\r\n    templateUrl: \"list.component.html\"\r\n})\r\nexport class ListComponent implements AfterViewInit {\r\n    @Input(\"list\")\r\n    @Output(\"list\")\r\n    list: List;\r\n\r\n    ngAfterViewInit() {\r\n        FocusUtility.focusFirstField(null);\r\n    }\r\n}\r\n\r\nexport class List extends PageElement implements IList {\r\n    private _buttonGroups: ButtonGroup[] = [];\r\n    private _search: boolean;\r\n    private _limit: number;\r\n    private _searchRequired: boolean;\r\n    private _searchRequest: boolean;\r\n    private _searchLabel: string;\r\n    private _searchInputLabel: string;\r\n    private _searchText: string;\r\n    private _searchTextChanged: Subject<string> = new Subject<string>();\r\n    private _searchButton: Button;\r\n    private _handler: IListHandler;\r\n    private _buttonHandler: IButtonHandler;\r\n    private _icon: string;\r\n    private _color: string;\r\n    private _form: string;\r\n    private _formHandler: string;\r\n    private _page: string;\r\n    private _mockData: any;\r\n    private _url: string;\r\n\r\n    constructor(app: IPathApp, private pathService: PathService, private translationService: TranslationService) {\r\n        super(app);\r\n        this._searchLabel = translationService.getText(\"Search\");\r\n        this._searchInputLabel = translationService.getText(\"SearchInputLabel\");\r\n        this._searchButton = new Button(app, pathService, translationService);\r\n    }\r\n\r\n    public getContent(): IButton[] {\r\n        const buttons: Button[] = [];\r\n        for (const buttonGroup of this.buttonGroups) {\r\n            buttons.push(...buttonGroup.buttons);\r\n        }\r\n        return buttons;\r\n    }\r\n\r\n    public refresh(searchText: string, afterRefreshHandler: () => void) {\r\n        // callback function for data\r\n        console.log(\"refresh list (searchText: \" + searchText + \")\");\r\n        const dataHandler = (data: any) => {\r\n            this.buttonGroups = [];\r\n            for (const item of data) {\r\n                // create button group and buttons\r\n                // set default types if server does not set type (button or buttonGroup)\r\n                const itemIsButtonGroup: boolean = item.hasOwnProperty(\"buttons\");\r\n                if (itemIsButtonGroup) {\r\n                    item[\"type\"] = \"buttonGroup\";\r\n                    for (const button of item.buttons) {\r\n                        if (button[\"type\"] == null) {\r\n                            button[\"type\"] = \"button\";\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (item[\"type\"] == null) {\r\n                        item[\"type\"] = \"button\";\r\n                    }\r\n                }\r\n                const pageElements = this.app.createPageElement(item, this.parentPageElement, null);\r\n                if (pageElements.length !== 1) {\r\n                    console.log(\"error creating button group from: \");\r\n                    console.log(item);\r\n                } else {\r\n                    const buttonGroup = <ButtonGroup>pageElements[0];\r\n                    let buttonCounter = 0;\r\n                    for (const button of buttonGroup.buttons) {\r\n                        button.listElement = true;\r\n\r\n                        // model is either simple button or button of a group\r\n                        let buttonModel = item;\r\n                        if (itemIsButtonGroup) {\r\n                            buttonModel = item.buttons[buttonCounter];\r\n                        }\r\n\r\n                        // build button from json\r\n                        // use list defaults if button does not specify model\r\n                        if (buttonModel[\"icon\"] == null) {\r\n                            buttonModel[\"icon\"] = this.icon;\r\n                        }\r\n                        if (buttonModel[\"color\"] == null) {\r\n                            buttonModel[\"color\"] = this.color;\r\n                        }\r\n                        if (buttonModel[\"page\"] == null && (buttonModel[\"form\"] == null || buttonModel[\"form\"][\"form\"] == null)) {\r\n                            // service does not return page or form, use static model\r\n                            if (this.page != null) {\r\n                                buttonModel[\"page\"] = this.page;\r\n                            }\r\n                            if (this.form != null) {\r\n                                buttonModel[\"form\"] = {};\r\n                                buttonModel.form[\"form\"] = this.form;\r\n                                buttonModel.form[\"handler\"] = this.formHandler;\r\n                            }\r\n                        }\r\n                        // special default width (2 instead of 1) for buttons in list\r\n                        if (buttonModel[\"width\"] == null) {\r\n                            buttonModel[\"width\"] = this.width;\r\n                        }\r\n                        button.fromJson(buttonModel);\r\n\r\n                        // special values for list buttons\r\n                        button.handler = this._buttonHandler;\r\n                        button.name = buttonModel.name; // no translation\r\n                        button.tooltip = buttonModel.tooltip; // no translation\r\n                        buttonCounter++;\r\n                    }\r\n                    this.buttonGroups.push(buttonGroup);\r\n                }\r\n            }\r\n            if (this.handler != null) {\r\n                this.handler.doLoad(this); // TODO useful?\r\n            }\r\n            // refresh search\r\n            this.filterVisibleButtonGroups();\r\n            if (this.limit) {\r\n                this.setSearchResultsCountMessage();\r\n            }\r\n            if (afterRefreshHandler != null) {\r\n                window.setTimeout(() => {\r\n                    afterRefreshHandler();\r\n                }, 1);\r\n            }\r\n        };\r\n        const listHandlerDoLoad = (list: IList) => (data: any) => dataHandler(data);\r\n        // backend data\r\n        if (this._url != null) {\r\n            let urlParameters = \"\";\r\n            if (this.searchRequest || this.limit) {\r\n                urlParameters = \"?search=\" + (searchText == null ? \"\" : encodeURI(searchText)) + \"&limit=\" + this.limit;\r\n            }\r\n            this.pathService.serverGet(this.app.getBackendUrl(), this.url + urlParameters, listHandlerDoLoad(this), null);\r\n        }\r\n        // mock data\r\n        if (this._mockData != null) {\r\n            let count = 0;\r\n            // fake a key for mock data\r\n            for (const mock of this.mockData) {\r\n                count++;\r\n                if (mock[\"key\"] == null) {\r\n                    mock[\"key\"] = count;\r\n                }\r\n            }\r\n            dataHandler(this.mockData);\r\n        }\r\n    }\r\n\r\n    public filterChanged(text: string) {\r\n        this._searchTextChanged.next(text);\r\n    }\r\n\r\n    public filter() {\r\n        this._searchLabel = this.translationService.getText(\"Search\");\r\n        if (this._searchText && this._searchText === \"*\") {\r\n            this.refresh(null, null);\r\n        } else if (this.searchRequest) {\r\n            // call server to filter data\r\n            if (!this._searchText && this.searchRequired) {\r\n                this._buttonGroups = [];\r\n            } else if (this._searchText === \"*\" || (!this._searchText && !this.searchRequired)) {\r\n                this.refresh(null, null);\r\n            } else if (this._searchText && this._searchText.length >= 2) {\r\n                this.refresh(this._searchText, null);\r\n            } else {\r\n                this._searchLabel = this.translationService.getText(\"SearchTextTooShort\");\r\n                this._buttonGroups = [];\r\n            }\r\n        } else {\r\n            // filter loaded data only\r\n            this.filterVisibleButtonGroups();\r\n        }\r\n    }\r\n\r\n    private filterVisibleButtonGroups() {\r\n        const searchText: string = this._searchText ? this._searchText.toLowerCase() : \"\";\r\n        for (const buttonGroup of this._buttonGroups) {\r\n            if (searchText.length <= 0) {\r\n                buttonGroup.visible = true;\r\n            } else {\r\n                buttonGroup.visible = false;\r\n                for (const button of buttonGroup.buttons) {\r\n                    if (!buttonGroup.visible) {\r\n                        buttonGroup.visible = button.name.toLowerCase().indexOf(searchText) !== -1;\r\n                        if (!buttonGroup.visible) {\r\n                            for (const detail of button.details) {\r\n                                if (detail.text.toLowerCase().indexOf(searchText) !== -1) {\r\n                                    buttonGroup.visible = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.visibleItemSize() !== this.buttonGroups.length) {\r\n            this.setSearchResultsCountMessage();\r\n        }\r\n    }\r\n\r\n    private setSearchResultsCountMessage() {\r\n        this._searchLabel = this.visibleItemSize() + \" \" +\r\n            (this.visibleItemSize() === 1 ? this.translationService.getText(\"Result\") : this.translationService.getText(\"Results\"));\r\n    }\r\n\r\n    private visibleItemSize(): number {\r\n        let result = 0;\r\n        for (const buttonGroup of this.buttonGroups) {\r\n            if (buttonGroup.visible) {\r\n                for (const button of buttonGroup.buttons) {\r\n                    if (button.visible) {\r\n                        result++;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    get buttonGroups(): ButtonGroup[] {\r\n        return this._buttonGroups;\r\n    }\r\n\r\n    set buttonGroups(value: ButtonGroup[]) {\r\n        this._buttonGroups = value;\r\n    }\r\n\r\n    get search(): boolean {\r\n        return this._search;\r\n    }\r\n\r\n    set search(value: boolean) {\r\n        this._search = value;\r\n    }\r\n\r\n    get handler(): IListHandler {\r\n        return this._handler;\r\n    }\r\n\r\n    set handler(value: IListHandler) {\r\n        this._handler = value;\r\n    }\r\n\r\n    get buttonHandler(): IButtonHandler {\r\n        return this._buttonHandler;\r\n    }\r\n\r\n    set buttonHandler(value: IButtonHandler) {\r\n        this._buttonHandler = value;\r\n    }\r\n\r\n    get icon(): string {\r\n        return this._icon;\r\n    }\r\n\r\n    set icon(value: string) {\r\n        this._icon = value;\r\n    }\r\n\r\n    get color(): string {\r\n        return this._color;\r\n    }\r\n\r\n    set color(value: string) {\r\n        this._color = value;\r\n    }\r\n\r\n    get form(): string {\r\n        return this._form;\r\n    }\r\n\r\n    set form(value: string) {\r\n        this._form = value;\r\n    }\r\n\r\n    get formHandler(): string {\r\n        return this._formHandler;\r\n    }\r\n\r\n    set formHandler(value: string) {\r\n        this._formHandler = value;\r\n    }\r\n\r\n    get page(): string {\r\n        return this._page;\r\n    }\r\n\r\n    set page(value: string) {\r\n        this._page = value;\r\n    }\r\n\r\n    get mockData(): any {\r\n        return this._mockData;\r\n    }\r\n\r\n    set mockData(value: any) {\r\n        this._mockData = value;\r\n    }\r\n\r\n    get url(): string {\r\n        return this._url;\r\n    }\r\n\r\n    set url(value: string) {\r\n        this._url = value;\r\n    }\r\n\r\n    get limit(): number {\r\n        return this._limit;\r\n    }\r\n\r\n    set limit(value: number) {\r\n        this._limit = value;\r\n    }\r\n\r\n    get searchRequired(): boolean {\r\n        return this._searchRequired;\r\n    }\r\n\r\n    get searchRequest(): boolean {\r\n        return this._searchRequest;\r\n    }\r\n\r\n    get searchText(): string {\r\n        return this._searchText;\r\n    }\r\n\r\n    get searchLabel(): string {\r\n        return this._searchLabel;\r\n    }\r\n\r\n    get searchInputLabel(): string {\r\n        return this._searchInputLabel;\r\n    }\r\n\r\n    set searchLabel(value: string) {\r\n        this._searchLabel = value;\r\n    }\r\n\r\n    set searchInputLabel(value: string) {\r\n        this._searchInputLabel = value;\r\n    }\r\n\r\n    set searchText(value: string) {\r\n        this._searchText = value;\r\n    }\r\n\r\n    get searchButton(): Button {\r\n        return this._searchButton;\r\n    }\r\n\r\n    public fromJson(modelElement) {\r\n        super.fromJson(modelElement);\r\n        if (modelElement[\"search\"] != null) {\r\n            this.search = modelElement[\"search\"];\r\n        }\r\n        if (modelElement[\"searchRequired\"] != null) {\r\n            this._searchRequired = modelElement[\"searchRequired\"];\r\n        }\r\n        if (modelElement[\"searchRequest\"] != null) {\r\n            this._searchRequest = modelElement[\"searchRequest\"];\r\n        }\r\n        if (modelElement[\"limit\"] != null) {\r\n            this.limit = modelElement[\"limit\"];\r\n        }\r\n        // verify valid search combinations\r\n        if (!this.search && this.searchRequired) {\r\n            console.log(\"Configuration Error: search=false requires searchRequired=false\");\r\n            this._searchRequired = false;\r\n        }\r\n        if (this.searchRequired && !this.searchRequest) {\r\n            console.log(\"Configuration Error: searchRequired=true requires searchRequest=true\");\r\n            this._searchRequest = true;\r\n        }\r\n        // other model attributes\r\n        if (modelElement[\"color\"] != null) {\r\n            this.color = modelElement[\"color\"];\r\n        }\r\n        if (modelElement[\"form\"] != null) {\r\n            this.form = modelElement[\"form\"][\"form\"];\r\n            this.formHandler = modelElement[\"form\"][\"handler\"];\r\n        }\r\n        if (modelElement[\"page\"] != null) {\r\n            this.page = modelElement[\"page\"];\r\n        }\r\n        if (modelElement[\"icon\"] != null) {\r\n            this.icon = modelElement[\"icon\"];\r\n        }\r\n        if (modelElement[\"data\"] != null) {\r\n            this.mockData = modelElement[\"data\"];\r\n        }\r\n        if (modelElement[\"name\"] != null) {\r\n            this.name = this.translationService.getText(modelElement[\"name\"]);\r\n        }\r\n        if (modelElement[\"url\"] != null) {\r\n            const urlString: string = modelElement[\"url\"];\r\n            this.url = KeyUtility.translateUrl(urlString, null, false, this);\r\n        }\r\n        // override from PageElement\r\n        if (modelElement[\"width\"] != null) {\r\n            this.width = modelElement[\"width\"];\r\n        } else {\r\n            this.width = 2; // special default for list\r\n        }\r\n        // search button\r\n        const searchButtonModel = {};\r\n        searchButtonModel[\"color\"] = modelElement[\"searchColor\"] != null ? modelElement[\"searchColor\"] : \"tile-search\";\r\n        searchButtonModel[\"width\"] = modelElement[\"searchWidth\"] != null ? modelElement[\"searchWidth\"] : this.width;\r\n        this._searchButton.fromJson(searchButtonModel);\r\n        // delay for search field\r\n        const debounceTimeValue: number = this.searchRequest ? 300 : 30;\r\n        this._searchTextChanged.pipe(\r\n            debounceTime(debounceTimeValue)) // wait after the last event before emitting last event\r\n            .subscribe(_searchText => {\r\n                this._searchText = _searchText;\r\n                this.filter();\r\n            });\r\n    }\r\n}\r\n","import { Directive, ViewContainerRef } from \"@angular/core\";\r\n\r\n@Directive({\r\n    selector: \"[path-custom-directive]\",\r\n})\r\nexport class CustomDirective {\r\n    constructor(public viewContainerRef: ViewContainerRef) { }\r\n}\r\n","import {Component, ComponentFactoryResolver, Input, OnDestroy, OnInit, ViewChild} from \"@angular/core\";\r\nimport {CustomDirective} from \"./custom.directive\";\r\nimport {CustomContainerPageElement} from \"./custom-container-page-element\";\r\nimport {PageElement} from \"../page-element\";\r\n\r\n@Component({\r\n    selector: \"path-custom-container-component\",\r\n    template: `\r\n        <ng-template path-custom-directive></ng-template>`\r\n})\r\n\r\nexport class CustomContainerComponent implements OnInit, OnDestroy {\r\n    @Input() pageElement: CustomContainerPageElement;\r\n    @ViewChild(CustomDirective, {static: true}) customDirective: CustomDirective;\r\n\r\n    constructor(private componentFactoryResolver: ComponentFactoryResolver) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.loadComponent();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n    }\r\n\r\n    loadComponent() {\r\n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.pageElement.typeClass);\r\n\r\n        const viewContainerRef = this.customDirective.viewContainerRef;\r\n        viewContainerRef.clear();\r\n\r\n        const componentRef = viewContainerRef.createComponent(componentFactory);\r\n        componentRef.instance.pageElement = this.pageElement;\r\n    }\r\n}\r\n\r\nexport class CustomPageElement {\r\n    private _pageElement: PageElement;\r\n\r\n    get pageElement(): PageElement {\r\n        return this._pageElement;\r\n    }\r\n\r\n    set pageElement(value: PageElement) {\r\n        this._pageElement = value;\r\n    }\r\n}\r\n","import {IPathApp} from \"../../../pathinterface\";\r\nimport {TranslationService} from \"../../../service/translation.service\";\r\nimport {PathService} from \"../../../service/path.service\";\r\nimport {Component, Input, Output} from \"@angular/core\";\r\nimport {PageElement} from \"../page-element\";\r\n\r\n@Component({\r\n    selector: \"path-element-list\",\r\n    templateUrl: \"element-list.component.html\"\r\n})\r\nexport class ElementListComponent {\r\n    @Input(\"elementList\")\r\n    @Output(\"elementList\")\r\n    elementList: ElementList;\r\n}\r\n\r\nexport class ElementList extends PageElement {\r\n\r\n    constructor(app: IPathApp, pathService: PathService, translationService: TranslationService) {\r\n        super(app);\r\n    }\r\n\r\n    public fromJson(modelElement) {\r\n        super.fromJson(modelElement);\r\n        this.type = \"elementList\";\r\n    }\r\n}\r\n","import {Component, Input} from \"@angular/core\";\r\nimport {PageElement} from \"../page-element\";\r\nimport {PathAppComponent} from \"../../../path-app.component\";\r\n\r\n@Component({\r\n    selector: \"path-breadcrumb\",\r\n    templateUrl: \"breadcrumb.component.html\"\r\n})\r\nexport class BreadcrumbComponent {\r\n    @Input(\"app\")\r\n    app;\r\n}\r\n\r\n// breadcrumb is a special element since it uses app directly\r\nexport class Breadcrumb extends PageElement {\r\n\r\n    public _pageStack;\r\n\r\n    constructor(app: PathAppComponent) {\r\n        super(app);\r\n    }\r\n\r\n}\r\n","import {NgModule, ModuleWithProviders, Injector} from \"@angular/core\";\r\nimport {BrowserModule} from \"@angular/platform-browser\";\r\nimport {HttpClientModule} from \"@angular/common/http\";\r\nimport {FormsModule} from \"@angular/forms\";\r\nimport {CommonModule} from \"@angular/common\";\r\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\r\nimport {FileUploadComponent} from \"./path-framework/form/field/file-upload/file-upload.component\";\r\nimport {FormComponent} from \"./path-framework/form/form.component\";\r\nimport {ButtonGroupComponent} from \"./path-framework/page/element/button-group/button-group.component\";\r\nimport {ChartComponent} from \"./path-framework/page/element/chart/chart.component\";\r\nimport {AutoCompleteComponent} from \"./path-framework/form/field/auto-complete/auto-complete-field.component\";\r\nimport {TextFieldComponent} from \"./path-framework/form/field/text/text-field.component\";\r\nimport {DateFieldComponent} from \"./path-framework/form/field/date/date-field.component\";\r\nimport {RadioGroupComponent} from \"./path-framework/form/field/radio/radio-group.component\";\r\nimport {CheckboxGroupComponent} from \"./path-framework/form/field/checkbox/checkbox-group.component\";\r\nimport {FormFieldLabelComponent} from \"./path-framework/form/field/form-field-label.component\";\r\nimport {ProgressBarComponent} from \"./path-framework/form/field/progress-bar/progress-bar.component\";\r\nimport {LabelFieldComponent} from \"./path-framework/form/field/label/label-field.component\";\r\nimport {FieldListFieldComponent} from \"./path-framework/form/field/fieldList/field-list-field.component\";\r\nimport {NumberFieldComponent} from \"./path-framework/form/field/number/number-field.component\";\r\nimport {TranslationFieldComponent} from \"./path-framework/form/field/translation/translation-field.component\";\r\nimport {BsDatepickerModule} from \"ngx-bootstrap/datepicker\";\r\nimport {TooltipModule} from \"ngx-bootstrap/tooltip\";\r\nimport {DraggableDirective} from \"./path-framework/form/draggable.directive\";\r\nimport {BackButtonComponent} from \"./path-framework/page/element/button/back-button.component\";\r\nimport {LinkButtonComponent} from \"./path-framework/page/element/button/link-button.component\";\r\nimport {PageDeleteButtonComponent} from \"./path-framework/page/element/button/page-delete-button.component\";\r\nimport {ButtonComponent} from \"./path-framework/page/element/button/button.component\";\r\nimport {PageLabelComponent} from \"./path-framework/page/element/label/page-label.component\";\r\nimport {ListComponent} from \"./path-framework/page/element/list/list.component\";\r\nimport {CustomDirective} from \"./path-framework/page/element/custom/custom.directive\";\r\nimport {CustomContainerComponent} from \"./path-framework/page/element/custom/custom-container.component\";\r\nimport {ElementListComponent} from \"./path-framework/page/element/element-list/element-list.component\";\r\nimport {BreadcrumbComponent} from \"./path-framework/page/element/breadcrumb/breadcrumb.component\";\r\n\r\n@NgModule({\r\n    imports:      [\r\n        BrowserModule,\r\n        HttpClientModule,\r\n        FormsModule,\r\n        CommonModule,\r\n        BrowserAnimationsModule,\r\n        BsDatepickerModule.forRoot(),\r\n        TooltipModule.forRoot()\r\n    ],\r\n    declarations: [\r\n        DraggableDirective,\r\n        LabelFieldComponent,\r\n        FieldListFieldComponent,\r\n        FormComponent,\r\n        ChartComponent,\r\n        AutoCompleteComponent,\r\n        ProgressBarComponent,\r\n        TextFieldComponent,\r\n        TranslationFieldComponent,\r\n        NumberFieldComponent,\r\n        DateFieldComponent,\r\n        RadioGroupComponent,\r\n        CheckboxGroupComponent,\r\n        FormFieldLabelComponent,\r\n        BackButtonComponent,\r\n        LinkButtonComponent,\r\n        PageDeleteButtonComponent,\r\n        ButtonComponent,\r\n        PageLabelComponent,\r\n        ListComponent,\r\n        CustomDirective,\r\n        CustomContainerComponent,\r\n        ElementListComponent,\r\n        ButtonGroupComponent,\r\n        BreadcrumbComponent,\r\n        FileUploadComponent\r\n    ],\r\n    exports:      [\r\n        DraggableDirective,\r\n        BrowserModule,\r\n        HttpClientModule,\r\n        FormsModule,\r\n        CommonModule,\r\n        BsDatepickerModule,\r\n        TooltipModule,\r\n        LabelFieldComponent,\r\n        FieldListFieldComponent,\r\n        FormComponent,\r\n        ChartComponent,\r\n        AutoCompleteComponent,\r\n        ProgressBarComponent,\r\n        TextFieldComponent,\r\n        TranslationFieldComponent,\r\n        NumberFieldComponent,\r\n        DateFieldComponent,\r\n        RadioGroupComponent,\r\n        CheckboxGroupComponent,\r\n        FormFieldLabelComponent,\r\n        BackButtonComponent,\r\n        LinkButtonComponent,\r\n        PageDeleteButtonComponent,\r\n        ButtonComponent,\r\n        PageLabelComponent,\r\n        ListComponent,\r\n        CustomDirective,\r\n        CustomContainerComponent,\r\n        ElementListComponent,\r\n        ButtonGroupComponent,\r\n        BreadcrumbComponent,\r\n        FileUploadComponent\r\n    ],\r\n})\r\nexport class AppModule {\r\n    static forRoot(): ModuleWithProviders {\r\n        return {ngModule: AppModule, providers: []};\r\n    }\r\n}\r\n"]}