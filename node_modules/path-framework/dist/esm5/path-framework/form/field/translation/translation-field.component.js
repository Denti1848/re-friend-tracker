import * as tslib_1 from "tslib";
import { Component, Input, Output } from "@angular/core";
import { ValueField } from "../value-field";
import { FormFunction } from "../../form-function";
import { Form } from "../../form.component";
import { OkButton } from "../button/ok-button";
import { CancelButton } from "../button/cancel-button";
import { TextField } from "../text/text-field.component";
import { FocusUtility } from "../../focus-utility";
var TranslationFieldComponent = /** @class */ (function () {
    function TranslationFieldComponent() {
    }
    tslib_1.__decorate([
        Input("field"),
        Output("field")
    ], TranslationFieldComponent.prototype, "field", void 0);
    TranslationFieldComponent = tslib_1.__decorate([
        Component({
            selector: "path-translationfield",
            template: "<path-form-field-label [label]=\"field.name\" [required]=\"field.required\"></path-form-field-label>\r\n<div [class.col-md-4]=\"field.width == 1\" [class.col-md-10]=\"field.width == 2\">\r\n    <div class=\"input-group\">\r\n        <input *ngIf=\"field.height == null || field.height <= 1\" #model=\"ngModel\" readonly-with-required (keydown)=\"field.editTranslations()\" (click)=\"field.editTranslations()\" [class.required-field]=\"!model.valid && !model.pristine && field.required\" [required]=\"field.required\" [(ngModel)]=\"field.defaultTranslation\" type=\"text\" class=\"form-control\" placeholder=\"\">\r\n        <textarea *ngIf=\"field.height != null && field.height > 1\" #model=\"ngModel\" readonly-with-required (keydown)=\"field.editTranslations()\" (click)=\"field.editTranslations()\" [class.required-field]=\"(!model.valid &&!model.pristine && field.required)\" [required]=\"field.required\" [(ngModel)]=field.defaultTranslation rows=\"{{field.height}}\" type=\"text\" class=\"form-control\" placeholder=\"\"></textarea>\r\n        <span class=\"input-group-btn\">\r\n                <button [disabled]=\"field.isReadonly()\" (click)=\"field.editTranslations()\" class=\"btn btn-default\" type=\"button\">{{field.translationLabel}}...</button>\r\n        </span>\r\n    </div>\r\n</div>\r\n"
        })
    ], TranslationFieldComponent);
    return TranslationFieldComponent;
}());
export { TranslationFieldComponent };
var TranslationField = /** @class */ (function (_super) {
    tslib_1.__extends(TranslationField, _super);
    function TranslationField(form, pathService, translationService) {
        var e_1, _a;
        var _this = _super.call(this, form, translationService) || this;
        _this.pathService = pathService;
        _this.translationService = translationService;
        _this._defaultTranslation = null;
        _this.userLanguage = translationService.getUserLanguage();
        _this.languages = translationService.getSupportedLanguageCodes();
        var initialList = [];
        try {
            for (var _b = tslib_1.__values(_this.languages), _c = _b.next(); !_c.done; _c = _b.next()) {
                var language = _c.value;
                initialList.push([{ "key": language }, ""]);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        _this.setValue(initialList);
        _this._translationLabel = translationService.getText("Translation");
        return _this;
    }
    Object.defineProperty(TranslationField.prototype, "defaultTranslation", {
        get: function () {
            return this._defaultTranslation;
        },
        set: function (value) {
            this._defaultTranslation = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TranslationField.prototype, "translationLabel", {
        get: function () {
            return this._translationLabel;
        },
        enumerable: true,
        configurable: true
    });
    TranslationField.prototype.setValue = function (value) {
        _super.prototype.setValue.call(this, value);
        this._defaultTranslation = this.getDefaultTranslation();
    };
    TranslationField.prototype.getDefaultTranslation = function () {
        var e_2, _a;
        if (this.value != null) {
            try {
                for (var _b = tslib_1.__values(this.value), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    if (item[0] != null && item[0]["key"] === this.userLanguage) {
                        return item[1];
                    }
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }
        return null;
    };
    TranslationField.prototype.editTranslations = function () {
        var e_3, _a;
        var _this = this;
        var form = new Form(this.pathService, this.form.getApp());
        var translationFields = [];
        form.title = this.name + " " + this.translationService.getText("Translations");
        form.formFunction = new FormFunction();
        form.formFunction.save = function (data) {
            var e_4, _a;
            var resultList = [];
            try {
                for (var translationFields_1 = tslib_1.__values(translationFields), translationFields_1_1 = translationFields_1.next(); !translationFields_1_1.done; translationFields_1_1 = translationFields_1.next()) {
                    var field = translationFields_1_1.value;
                    resultList.push([{ "key": field.id }, field.value]);
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (translationFields_1_1 && !translationFields_1_1.done && (_a = translationFields_1.return)) _a.call(translationFields_1);
                }
                finally { if (e_4) throw e_4.error; }
            }
            _this.setValue(resultList);
            _this.getForm().getApp().closeCurrentForm();
        };
        form.formFunction.cancel = function () {
            _this.getForm().getApp().closeCurrentForm();
        };
        var translations = this.value;
        try {
            for (var translations_1 = tslib_1.__values(translations), translations_1_1 = translations_1.next(); !translations_1_1.done; translations_1_1 = translations_1.next()) {
                var key = translations_1_1.value;
                var textField = new TextField(form, this.translationService);
                textField.type = "text";
                textField.id = key[0]["key"];
                textField.name = this.translationService.getText(key[0]["key"]);
                textField.visible = true;
                textField.newRow = true;
                textField.width = 2;
                textField.height = this.height;
                textField.labelVisible = true;
                textField.required = true;
                textField.setValue(key[1]);
                form.fields.push(textField);
                translationFields.push(textField);
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (translations_1_1 && !translations_1_1.done && (_a = translations_1.return)) _a.call(translations_1);
            }
            finally { if (e_3) throw e_3.error; }
        }
        var cancelButton = new CancelButton(form, this.translationService);
        cancelButton.type = "cancelButton";
        cancelButton.name = this.translationService.getText("Cancel");
        cancelButton.visible = true;
        form.fields.push(cancelButton);
        var okButton = new OkButton(form, this.translationService);
        okButton.type = "okButton";
        okButton.name = this.translationService.getText("Ok");
        okButton.visible = true;
        form.fields.push(okButton);
        form.updateRows();
        this.form.getApp()["_formStack"].push(form); // TODO
        FocusUtility.focusFirstField(form);
    };
    return TranslationField;
}(ValueField));
export { TranslationField };
var TranslationEntry = /** @class */ (function () {
    function TranslationEntry() {
    }
    Object.defineProperty(TranslationEntry.prototype, "text", {
        get: function () {
            return this._text;
        },
        set: function (value) {
            this._text = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TranslationEntry.prototype, "code", {
        get: function () {
            return this._code;
        },
        set: function (value) {
            this._code = value;
        },
        enumerable: true,
        configurable: true
    });
    return TranslationEntry;
}());
export { TranslationEntry };
//# sourceMappingURL=data:application/json;base64,