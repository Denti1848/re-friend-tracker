import * as tslib_1 from "tslib";
import { Component, Input, Output } from "@angular/core";
import { ValueField } from "../value-field";
var CheckboxGroupComponent = /** @class */ (function () {
    function CheckboxGroupComponent() {
    }
    tslib_1.__decorate([
        Input("field"),
        Output("field")
    ], CheckboxGroupComponent.prototype, "field", void 0);
    CheckboxGroupComponent = tslib_1.__decorate([
        Component({
            selector: "path-checkbox-group",
            template: "<path-form-field-label [label]=\"field.name\" [required]=\"field.required\"></path-form-field-label>\r\n<div class=\"checkbox\" [class.col-md-4]=\"field.width == 1\" [class.col-md-10]=\"field.width == 2\">\r\n    <span *ngFor=\"let entry of field.entries\">\r\n        <label class=\"checkbox-inline\">\r\n            <input type=\"checkbox\" [(ngModel)]=\"entry.selected\" (ngModelChange)=\"field.doClick()\">\r\n            <span class=\"checkbox-label\"> {{entry.name}}&nbsp;&nbsp;</span>\r\n        </label>\r\n    </span>\r\n</div>\r\n"
        })
    ], CheckboxGroupComponent);
    return CheckboxGroupComponent;
}());
export { CheckboxGroupComponent };
var CheckboxGroupField = /** @class */ (function (_super) {
    tslib_1.__extends(CheckboxGroupField, _super);
    function CheckboxGroupField() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._entries = [];
        return _this;
    }
    Object.defineProperty(CheckboxGroupField.prototype, "entries", {
        get: function () {
            return this._entries;
        },
        set: function (value) {
            this._entries = value;
        },
        enumerable: true,
        configurable: true
    });
    CheckboxGroupField.prototype.doClick = function () {
        var e_1, _a;
        var values = [];
        try {
            for (var _b = tslib_1.__values(this.entries), _c = _b.next(); !_c.done; _c = _b.next()) {
                var entry = _c.value;
                if (entry.selected) {
                    values.push(entry.key);
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        this.setValue(values);
    };
    CheckboxGroupField.prototype.setValue = function (values) {
        var e_2, _a, e_3, _b, e_4, _c;
        _super.prototype.setValue.call(this, values);
        try {
            for (var _d = tslib_1.__values(this.entries), _e = _d.next(); !_e.done; _e = _d.next()) {
                var entry = _e.value;
                entry.selected = false;
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
            }
            finally { if (e_2) throw e_2.error; }
        }
        try {
            for (var values_1 = tslib_1.__values(values), values_1_1 = values_1.next(); !values_1_1.done; values_1_1 = values_1.next()) {
                var value = values_1_1.value;
                try {
                    for (var _f = (e_4 = void 0, tslib_1.__values(this.entries)), _g = _f.next(); !_g.done; _g = _f.next()) {
                        var entry = _g.value;
                        if (entry.key === value) {
                            entry.selected = true;
                        }
                    }
                }
                catch (e_4_1) { e_4 = { error: e_4_1 }; }
                finally {
                    try {
                        if (_g && !_g.done && (_c = _f.return)) _c.call(_f);
                    }
                    finally { if (e_4) throw e_4.error; }
                }
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (values_1_1 && !values_1_1.done && (_b = values_1.return)) _b.call(values_1);
            }
            finally { if (e_3) throw e_3.error; }
        }
    };
    CheckboxGroupField.prototype.fromJson = function (modelFormField) {
        var e_5, _a;
        _super.prototype.fromJson.call(this, modelFormField);
        try {
            for (var _b = tslib_1.__values(modelFormField["data"]), _c = _b.next(); !_c.done; _c = _b.next()) {
                var entryModel = _c.value;
                var entry = new CheckboxGroupEntry();
                entry.name = entryModel.name;
                entry.key = entryModel.key;
                entry.selected = false;
                this.entries.push(entry);
            }
        }
        catch (e_5_1) { e_5 = { error: e_5_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_5) throw e_5.error; }
        }
    };
    return CheckboxGroupField;
}(ValueField));
export { CheckboxGroupField };
var CheckboxGroupEntry = /** @class */ (function () {
    function CheckboxGroupEntry() {
    }
    Object.defineProperty(CheckboxGroupEntry.prototype, "key", {
        get: function () {
            return this._key;
        },
        set: function (value) {
            this._key = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CheckboxGroupEntry.prototype, "name", {
        get: function () {
            return this._name;
        },
        set: function (value) {
            this._name = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CheckboxGroupEntry.prototype, "selected", {
        get: function () {
            return this._selected;
        },
        set: function (value) {
            this._selected = value;
        },
        enumerable: true,
        configurable: true
    });
    return CheckboxGroupEntry;
}());
export { CheckboxGroupEntry };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tib3gtZ3JvdXAuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vcGF0aC1mcmFtZXdvcmsvIiwic291cmNlcyI6WyJwYXRoLWZyYW1ld29yay9mb3JtL2ZpZWxkL2NoZWNrYm94L2NoZWNrYm94LWdyb3VwLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3ZELE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQU0xQztJQUFBO0lBSUEsQ0FBQztJQURHO1FBRkMsS0FBSyxDQUFDLE9BQU8sQ0FBQztRQUNkLE1BQU0sQ0FBQyxPQUFPLENBQUM7eURBQ1U7SUFIakIsc0JBQXNCO1FBSmxDLFNBQVMsQ0FBQztZQUNQLFFBQVEsRUFBRSxxQkFBcUI7WUFDL0Isd2lCQUE0QztTQUMvQyxDQUFDO09BQ1csc0JBQXNCLENBSWxDO0lBQUQsNkJBQUM7Q0FBQSxBQUpELElBSUM7U0FKWSxzQkFBc0I7QUFNbkM7SUFBd0MsOENBQWlCO0lBQXpEO1FBQUEscUVBNkNDO1FBNUNXLGNBQVEsR0FBeUIsRUFBRSxDQUFDOztJQTRDaEQsQ0FBQztJQTFDRyxzQkFBSSx1Q0FBTzthQUFYO1lBQ0ksT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO1FBQ3pCLENBQUM7YUFFRCxVQUFZLEtBQTJCO1lBQ25DLElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO1FBQzFCLENBQUM7OztPQUpBO0lBTU0sb0NBQU8sR0FBZDs7UUFDSSxJQUFNLE1BQU0sR0FBVSxFQUFFLENBQUM7O1lBQ3pCLEtBQW9CLElBQUEsS0FBQSxpQkFBQSxJQUFJLENBQUMsT0FBTyxDQUFBLGdCQUFBLDRCQUFFO2dCQUE3QixJQUFNLEtBQUssV0FBQTtnQkFDWixJQUFJLEtBQUssQ0FBQyxRQUFRLEVBQUU7b0JBQ2hCLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO2lCQUMxQjthQUNKOzs7Ozs7Ozs7UUFDRCxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzFCLENBQUM7SUFFTSxxQ0FBUSxHQUFmLFVBQWdCLE1BQWE7O1FBQ3pCLGlCQUFNLFFBQVEsWUFBQyxNQUFNLENBQUMsQ0FBQzs7WUFDdkIsS0FBb0IsSUFBQSxLQUFBLGlCQUFBLElBQUksQ0FBQyxPQUFPLENBQUEsZ0JBQUEsNEJBQUU7Z0JBQTdCLElBQU0sS0FBSyxXQUFBO2dCQUNaLEtBQUssQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO2FBQzFCOzs7Ozs7Ozs7O1lBQ0QsS0FBb0IsSUFBQSxXQUFBLGlCQUFBLE1BQU0sQ0FBQSw4QkFBQSxrREFBRTtnQkFBdkIsSUFBTSxLQUFLLG1CQUFBOztvQkFDWixLQUFvQixJQUFBLG9CQUFBLGlCQUFBLElBQUksQ0FBQyxPQUFPLENBQUEsQ0FBQSxnQkFBQSw0QkFBRTt3QkFBN0IsSUFBTSxLQUFLLFdBQUE7d0JBQ1osSUFBSSxLQUFLLENBQUMsR0FBRyxLQUFLLEtBQUssRUFBRTs0QkFDckIsS0FBSyxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7eUJBQ3pCO3FCQUNKOzs7Ozs7Ozs7YUFDSjs7Ozs7Ozs7O0lBQ0wsQ0FBQztJQUVNLHFDQUFRLEdBQWYsVUFBZ0IsY0FBYzs7UUFDMUIsaUJBQU0sUUFBUSxZQUFDLGNBQWMsQ0FBQyxDQUFDOztZQUMvQixLQUF5QixJQUFBLEtBQUEsaUJBQUEsY0FBYyxDQUFDLE1BQU0sQ0FBQyxDQUFBLGdCQUFBLDRCQUFFO2dCQUE1QyxJQUFNLFVBQVUsV0FBQTtnQkFDakIsSUFBTSxLQUFLLEdBQUcsSUFBSSxrQkFBa0IsRUFBRSxDQUFDO2dCQUN2QyxLQUFLLENBQUMsSUFBSSxHQUFHLFVBQVUsQ0FBQyxJQUFJLENBQUM7Z0JBQzdCLEtBQUssQ0FBQyxHQUFHLEdBQUcsVUFBVSxDQUFDLEdBQUcsQ0FBQztnQkFDM0IsS0FBSyxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7Z0JBQ3ZCLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO2FBQzVCOzs7Ozs7Ozs7SUFDTCxDQUFDO0lBQ0wseUJBQUM7QUFBRCxDQUFDLEFBN0NELENBQXdDLFVBQVUsR0E2Q2pEOztBQUVEO0lBQUE7SUE0QkEsQ0FBQztJQXZCRyxzQkFBSSxtQ0FBRzthQUFQO1lBQ0ksT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDO1FBQ3JCLENBQUM7YUFFRCxVQUFRLEtBQVU7WUFDZCxJQUFJLENBQUMsSUFBSSxHQUFHLEtBQUssQ0FBQztRQUN0QixDQUFDOzs7T0FKQTtJQU1ELHNCQUFJLG9DQUFJO2FBQVI7WUFDSSxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7UUFDdEIsQ0FBQzthQUVELFVBQVMsS0FBYTtZQUNsQixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUN2QixDQUFDOzs7T0FKQTtJQU1ELHNCQUFJLHdDQUFRO2FBQVo7WUFDSSxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7UUFDMUIsQ0FBQzthQUVELFVBQWEsS0FBYztZQUN2QixJQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQztRQUMzQixDQUFDOzs7T0FKQTtJQUtMLHlCQUFDO0FBQUQsQ0FBQyxBQTVCRCxJQTRCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBJbnB1dCwgT3V0cHV0fSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5pbXBvcnQge1ZhbHVlRmllbGR9IGZyb20gXCIuLi92YWx1ZS1maWVsZFwiO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogXCJwYXRoLWNoZWNrYm94LWdyb3VwXCIsXHJcbiAgICB0ZW1wbGF0ZVVybDogXCJjaGVja2JveC1ncm91cC5jb21wb25lbnQuaHRtbFwiXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBDaGVja2JveEdyb3VwQ29tcG9uZW50IHtcclxuICAgIEBJbnB1dChcImZpZWxkXCIpXHJcbiAgICBAT3V0cHV0KFwiZmllbGRcIilcclxuICAgIGZpZWxkOiBDaGVja2JveEdyb3VwRmllbGQ7XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBDaGVja2JveEdyb3VwRmllbGQgZXh0ZW5kcyBWYWx1ZUZpZWxkPGFueVtdPiB7XHJcbiAgICBwcml2YXRlIF9lbnRyaWVzOiBDaGVja2JveEdyb3VwRW50cnlbXSA9IFtdO1xyXG5cclxuICAgIGdldCBlbnRyaWVzKCk6IENoZWNrYm94R3JvdXBFbnRyeVtdIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZW50cmllcztcclxuICAgIH1cclxuXHJcbiAgICBzZXQgZW50cmllcyh2YWx1ZTogQ2hlY2tib3hHcm91cEVudHJ5W10pIHtcclxuICAgICAgICB0aGlzLl9lbnRyaWVzID0gdmFsdWU7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGRvQ2xpY2soKSB7XHJcbiAgICAgICAgY29uc3QgdmFsdWVzOiBhbnlbXSA9IFtdO1xyXG4gICAgICAgIGZvciAoY29uc3QgZW50cnkgb2YgdGhpcy5lbnRyaWVzKSB7XHJcbiAgICAgICAgICAgIGlmIChlbnRyeS5zZWxlY3RlZCkge1xyXG4gICAgICAgICAgICAgICAgdmFsdWVzLnB1c2goZW50cnkua2V5KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnNldFZhbHVlKHZhbHVlcyk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHNldFZhbHVlKHZhbHVlczogYW55W10pIHtcclxuICAgICAgICBzdXBlci5zZXRWYWx1ZSh2YWx1ZXMpO1xyXG4gICAgICAgIGZvciAoY29uc3QgZW50cnkgb2YgdGhpcy5lbnRyaWVzKSB7XHJcbiAgICAgICAgICAgIGVudHJ5LnNlbGVjdGVkID0gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGZvciAoY29uc3QgdmFsdWUgb2YgdmFsdWVzKSB7XHJcbiAgICAgICAgICAgIGZvciAoY29uc3QgZW50cnkgb2YgdGhpcy5lbnRyaWVzKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoZW50cnkua2V5ID09PSB2YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGVudHJ5LnNlbGVjdGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZnJvbUpzb24obW9kZWxGb3JtRmllbGQpIHtcclxuICAgICAgICBzdXBlci5mcm9tSnNvbihtb2RlbEZvcm1GaWVsZCk7XHJcbiAgICAgICAgZm9yIChjb25zdCBlbnRyeU1vZGVsIG9mIG1vZGVsRm9ybUZpZWxkW1wiZGF0YVwiXSkge1xyXG4gICAgICAgICAgICBjb25zdCBlbnRyeSA9IG5ldyBDaGVja2JveEdyb3VwRW50cnkoKTtcclxuICAgICAgICAgICAgZW50cnkubmFtZSA9IGVudHJ5TW9kZWwubmFtZTtcclxuICAgICAgICAgICAgZW50cnkua2V5ID0gZW50cnlNb2RlbC5rZXk7XHJcbiAgICAgICAgICAgIGVudHJ5LnNlbGVjdGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgIHRoaXMuZW50cmllcy5wdXNoKGVudHJ5KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBDaGVja2JveEdyb3VwRW50cnkge1xyXG4gICAgcHJpdmF0ZSBfa2V5OiBhbnk7XHJcbiAgICBwcml2YXRlIF9uYW1lOiBzdHJpbmc7XHJcbiAgICBwcml2YXRlIF9zZWxlY3RlZDogYm9vbGVhbjtcclxuXHJcbiAgICBnZXQga2V5KCk6IGFueSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2tleTtcclxuICAgIH1cclxuXHJcbiAgICBzZXQga2V5KHZhbHVlOiBhbnkpIHtcclxuICAgICAgICB0aGlzLl9rZXkgPSB2YWx1ZTtcclxuICAgIH1cclxuXHJcbiAgICBnZXQgbmFtZSgpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9uYW1lO1xyXG4gICAgfVxyXG5cclxuICAgIHNldCBuYW1lKHZhbHVlOiBzdHJpbmcpIHtcclxuICAgICAgICB0aGlzLl9uYW1lID0gdmFsdWU7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IHNlbGVjdGVkKCk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9zZWxlY3RlZDtcclxuICAgIH1cclxuXHJcbiAgICBzZXQgc2VsZWN0ZWQodmFsdWU6IGJvb2xlYW4pIHtcclxuICAgICAgICB0aGlzLl9zZWxlY3RlZCA9IHZhbHVlO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==