import * as tslib_1 from "tslib";
var FocusUtility = /** @class */ (function () {
    function FocusUtility() {
    }
    FocusUtility.focusFirstField = function (currentForm) {
        window.setTimeout(function () {
            var e_1, _a, e_2, _b;
            var focusDone = false;
            var forms = document.forms;
            if (currentForm != null) {
                forms = [forms[forms.length - 1]]; // only last form on form stack
            }
            try {
                for (var forms_1 = tslib_1.__values(forms), forms_1_1 = forms_1.next(); !forms_1_1.done; forms_1_1 = forms_1.next()) {
                    var form = forms_1_1.value;
                    try {
                        for (var _c = (e_2 = void 0, tslib_1.__values(form.elements)), _d = _c.next(); !_d.done; _d = _c.next()) {
                            var element = _d.value;
                            if (element instanceof HTMLInputElement &&
                                element.type === "text" || element.type === "textarea") {
                                var input = element;
                                if (input.outerHTML.indexOf("readonly-with-required") < 0) { // no focus on readonly fields
                                    input.focus();
                                    focusDone = true;
                                }
                                break;
                            }
                        }
                    }
                    catch (e_2_1) { e_2 = { error: e_2_1 }; }
                    finally {
                        try {
                            if (_d && !_d.done && (_b = _c.return)) _b.call(_c);
                        }
                        finally { if (e_2) throw e_2.error; }
                    }
                    if (focusDone) {
                        break;
                    }
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (forms_1_1 && !forms_1_1.done && (_a = forms_1.return)) _a.call(forms_1);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }, 1);
    };
    return FocusUtility;
}());
export { FocusUtility };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9jdXMtdXRpbGl0eS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3BhdGgtZnJhbWV3b3JrLyIsInNvdXJjZXMiOlsicGF0aC1mcmFtZXdvcmsvZm9ybS9mb2N1cy11dGlsaXR5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFFQTtJQUFBO0lBNkJBLENBQUM7SUEzQmlCLDRCQUFlLEdBQTdCLFVBQThCLFdBQWtCO1FBQzVDLE1BQU0sQ0FBQyxVQUFVLENBQUM7O1lBQ2QsSUFBSSxTQUFTLEdBQUcsS0FBSyxDQUFDO1lBRXRCLElBQUksS0FBSyxHQUFRLFFBQVEsQ0FBQyxLQUFLLENBQUM7WUFDaEMsSUFBSSxXQUFXLElBQUksSUFBSSxFQUFFO2dCQUNyQixLQUFLLEdBQUcsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsK0JBQStCO2FBQ3JFOztnQkFDRCxLQUFtQixJQUFBLFVBQUEsaUJBQUEsS0FBSyxDQUFBLDRCQUFBLCtDQUFFO29CQUFyQixJQUFNLElBQUksa0JBQUE7O3dCQUNYLEtBQXNCLElBQUEsb0JBQUEsaUJBQUssSUFBSSxDQUFDLFFBQVEsQ0FBQSxDQUFBLGdCQUFBLDRCQUFFOzRCQUFyQyxJQUFNLE9BQU8sV0FBQTs0QkFDZCxJQUFJLE9BQU8sWUFBWSxnQkFBZ0I7Z0NBQ2hCLE9BQVEsQ0FBQyxJQUFJLEtBQUssTUFBTSxJQUF1QixPQUFRLENBQUMsSUFBSSxLQUFLLFVBQVUsRUFBRTtnQ0FDaEcsSUFBTSxLQUFLLEdBQXFCLE9BQU8sQ0FBQztnQ0FDeEMsSUFBSSxLQUFLLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyx3QkFBd0IsQ0FBQyxHQUFHLENBQUMsRUFBRSxFQUFFLDhCQUE4QjtvQ0FDdkYsS0FBSyxDQUFDLEtBQUssRUFBRSxDQUFDO29DQUNkLFNBQVMsR0FBRyxJQUFJLENBQUM7aUNBQ3BCO2dDQUNELE1BQU07NkJBQ1Q7eUJBQ0o7Ozs7Ozs7OztvQkFDRCxJQUFJLFNBQVMsRUFBRTt3QkFDWCxNQUFNO3FCQUNUO2lCQUNKOzs7Ozs7Ozs7UUFDTCxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDVixDQUFDO0lBRUwsbUJBQUM7QUFBRCxDQUFDLEFBN0JELElBNkJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJRm9ybX0gZnJvbSBcIi4uL3BhdGhpbnRlcmZhY2VcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBGb2N1c1V0aWxpdHkge1xyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgZm9jdXNGaXJzdEZpZWxkKGN1cnJlbnRGb3JtOiBJRm9ybSkge1xyXG4gICAgICAgIHdpbmRvdy5zZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgbGV0IGZvY3VzRG9uZSA9IGZhbHNlO1xyXG5cclxuICAgICAgICAgICAgbGV0IGZvcm1zID0gPGFueT5kb2N1bWVudC5mb3JtcztcclxuICAgICAgICAgICAgaWYgKGN1cnJlbnRGb3JtICE9IG51bGwpIHtcclxuICAgICAgICAgICAgICAgIGZvcm1zID0gW2Zvcm1zW2Zvcm1zLmxlbmd0aCAtIDFdXTsgLy8gb25seSBsYXN0IGZvcm0gb24gZm9ybSBzdGFja1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGZvciAoY29uc3QgZm9ybSBvZiBmb3Jtcykge1xyXG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBlbGVtZW50IG9mIDxhbnk+Zm9ybS5lbGVtZW50cykge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChlbGVtZW50IGluc3RhbmNlb2YgSFRNTElucHV0RWxlbWVudCAmJlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAoPEhUTUxJbnB1dEVsZW1lbnQ+ZWxlbWVudCkudHlwZSA9PT0gXCJ0ZXh0XCIgfHwgKDxIVE1MSW5wdXRFbGVtZW50PmVsZW1lbnQpLnR5cGUgPT09IFwidGV4dGFyZWFcIikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBpbnB1dCA9IDxIVE1MSW5wdXRFbGVtZW50PmVsZW1lbnQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpbnB1dC5vdXRlckhUTUwuaW5kZXhPZihcInJlYWRvbmx5LXdpdGgtcmVxdWlyZWRcIikgPCAwKSB7IC8vIG5vIGZvY3VzIG9uIHJlYWRvbmx5IGZpZWxkc1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5wdXQuZm9jdXMoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvY3VzRG9uZSA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYgKGZvY3VzRG9uZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSwgMSk7XHJcbiAgICB9XHJcblxyXG59XHJcbiJdfQ==