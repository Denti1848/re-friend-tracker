{"version":3,"file":"path-framework.js","sources":["ng://path-framework/path-framework/form/field/form-field.ts","ng://path-framework/path-framework/form/field/value-field.ts","ng://path-framework/path-framework/form/field/file-upload/file-upload.component.ts","ng://path-framework/path-framework/form/field/fieldList/field-list-field.component.ts","ng://path-framework/path-framework/form/focus-utility.ts","ng://path-framework/path-framework/form/form.component.ts","ng://path-framework/path-framework/utility/key-utility.ts","ng://path-framework/path-framework/page/element/page-element.ts","ng://path-framework/path-framework/page/element/button-group/button-group.component.ts","ng://path-framework/path-framework/page/element/chart/chart.component.ts","ng://path-framework/path-framework/form/field/auto-complete/auto-complete-field-entry.ts","ng://path-framework/path-framework/form/form-function.ts","ng://path-framework/path-framework/form/field/auto-complete/auto-complete-field.component.ts","ng://path-framework/path-framework/form/field/text/text-field.component.ts","ng://path-framework/path-framework/form/field/date/date-field.component.ts","ng://path-framework/path-framework/form/field/radio/radio.ts","ng://path-framework/path-framework/form/field/radio/radio-group.component.ts","ng://path-framework/path-framework/form/field/checkbox/checkbox-group.component.ts","ng://path-framework/path-framework/form/field/form-field-label.component.ts","ng://path-framework/path-framework/form/field/progress-bar/progress-bar.component.ts","ng://path-framework/path-framework/form/field/label/label-field.component.ts","ng://path-framework/path-framework/form/field/number/number-field.component.ts","ng://path-framework/path-framework/form/field/button/ok-button.ts","ng://path-framework/path-framework/form/field/button/cancel-button.ts","ng://path-framework/path-framework/form/field/translation/translation-field.component.ts","ng://path-framework/path-framework/form/draggable.directive.ts","ng://path-framework/path-framework/utility/string-utility.ts","ng://path-framework/path-framework/page/element/button/button-detail.ts","ng://path-framework/path-framework/utility/color-utility.ts","ng://path-framework/path-framework/page/element/button/button.component.ts","ng://path-framework/path-framework/page/element/button/back-button.component.ts","ng://path-framework/path-framework/page/element/button/link-button.component.ts","ng://path-framework/path-framework/page/element/button/page-delete-button.component.ts","ng://path-framework/path-framework/page/element/label/page-label.component.ts","ng://path-framework/path-framework/page/element/list/list.component.ts","ng://path-framework/path-framework/page/element/custom/custom.directive.ts","ng://path-framework/path-framework/page/element/custom/custom-container.component.ts","ng://path-framework/path-framework/page/element/element-list/element-list.component.ts","ng://path-framework/path-framework/page/element/breadcrumb/breadcrumb.component.ts","ng://path-framework/app.module.ts","ng://path-framework/path-framework.ts"],"sourcesContent":["import {IFormField, IForm} from \"../../pathinterface\";\r\nimport {TranslationService} from \"../../service/translation.service\";\r\n\r\nexport class FormField implements IFormField {\r\n    private _id: string;\r\n    private _name: string;\r\n    private _type: string;\r\n    private _height: number;\r\n    private _width: number;\r\n    private _newRow: boolean;\r\n    private _visible: boolean;\r\n    private _labelVisible: boolean;\r\n    private _required: boolean;\r\n    private _readonly: boolean;\r\n\r\n    constructor(protected form: IForm, protected translationService: TranslationService) {\r\n    }\r\n\r\n    getForm(): IForm {\r\n        return this.form;\r\n    }\r\n\r\n    get height(): number {\r\n        return this._height;\r\n    }\r\n\r\n    set height(value: number) {\r\n        this._height = value;\r\n    }\r\n\r\n    get visible(): boolean {\r\n        return this._visible;\r\n    }\r\n\r\n    set visible(value: boolean) {\r\n        this._visible = value;\r\n    }\r\n\r\n    get width(): number {\r\n        return this._width;\r\n    }\r\n\r\n    set width(value: number) {\r\n        this._width = value;\r\n    }\r\n\r\n    get newRow(): boolean {\r\n        return this._newRow;\r\n    }\r\n\r\n    set newRow(value: boolean) {\r\n        this._newRow = value;\r\n    }\r\n\r\n    get required(): boolean {\r\n        return this._required;\r\n    }\r\n\r\n    set required(value: boolean) {\r\n        this._required = value;\r\n    }\r\n\r\n    get readonly(): boolean {\r\n        return this._readonly;\r\n    }\r\n\r\n    set readonly(value: boolean) {\r\n        this._readonly = value;\r\n    }\r\n\r\n    get id(): string {\r\n        return this._id;\r\n    }\r\n\r\n    set id(value: string) {\r\n        this._id = value;\r\n    }\r\n\r\n    get name(): string {\r\n        return this._name;\r\n    }\r\n\r\n    set name(value: string) {\r\n        this._name = value;\r\n    }\r\n\r\n    get type(): string {\r\n        return this._type;\r\n    }\r\n\r\n    set type(value: string) {\r\n        this._type = value;\r\n    }\r\n\r\n    get labelVisible(): boolean {\r\n        return this._labelVisible;\r\n    }\r\n\r\n    set labelVisible(value: boolean) {\r\n        this._labelVisible = value;\r\n    }\r\n\r\n    public isReadonly(): boolean {\r\n        return this.readonly;\r\n    }\r\n\r\n    public fromJson(modelFormField) {\r\n        this.visible = true;\r\n        if (modelFormField[\"visible\"] != null) {\r\n            this.visible = modelFormField[\"visible\"];\r\n        }\r\n        this.labelVisible = true;\r\n        if (modelFormField[\"labelVisible\"] != null) {\r\n            this.labelVisible = modelFormField[\"labelVisible\"];\r\n        }\r\n        this.width = 1;\r\n        if (modelFormField[\"width\"] != null) {\r\n            this.width = modelFormField[\"width\"];\r\n        }\r\n        this.newRow = false;\r\n        if (modelFormField[\"newRow\"] != null) {\r\n            this.newRow = modelFormField[\"newRow\"];\r\n        }\r\n        this.required = false;\r\n        if (modelFormField[\"required\"] != null) {\r\n            this.required = modelFormField[\"required\"];\r\n        }\r\n        this.readonly = false;\r\n        if (modelFormField[\"readonly\"] != null) {\r\n            this.readonly = modelFormField[\"readonly\"];\r\n        }\r\n        this.id = modelFormField[\"id\"];\r\n        this.name = this.translationService.getText(modelFormField.name);\r\n        this.type = modelFormField.type;\r\n        this.height = modelFormField[\"height\"];\r\n    }\r\n}\r\n","import {FormField} from \"./form-field\";\r\n\r\nexport class ValueField<T> extends FormField {\r\n    private _value: T;\r\n    private _isInitialValueSet = false;\r\n    private _created = false;\r\n\r\n    get value(): T {\r\n        return this._value;\r\n    }\r\n\r\n    set value(value: T) {\r\n        this._value = value;\r\n    }\r\n\r\n    public setValue(value: T) {\r\n        this._value = value;\r\n    }\r\n\r\n    get created(): boolean {\r\n        return this._created;\r\n    }\r\n\r\n    set created(value: boolean) {\r\n        this._created = value;\r\n    }\r\n\r\n    public isReadonly(): boolean {\r\n        return this.readonly;\r\n    }\r\n\r\n    get isInitialValueSet(): boolean {\r\n        return this._isInitialValueSet;\r\n    }\r\n\r\n    set isInitialValueSet(value: boolean) {\r\n        this._isInitialValueSet = value;\r\n    }\r\n\r\n    public fromJson(modelFormField) {\r\n        super.fromJson(modelFormField);\r\n        if (modelFormField[\"value\"] != null) {\r\n            this.setValue(modelFormField[\"value\"]);\r\n        }\r\n    }\r\n}\r\n","import {Component, ElementRef, Input, Output, ViewChild} from \"@angular/core\";\r\nimport {ValueField} from \"../value-field\";\r\nimport {HttpClient, HttpEvent, HttpEventType, HttpParams, HttpRequest, HttpResponse} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {IForm} from \"../../../pathinterface\";\r\nimport {TranslationService} from \"../../../service/translation.service\";\r\n\r\n@Component({\r\n    selector: \"path-file-upload\",\r\n    templateUrl: \"file-upload.component.html\"\r\n})\r\nexport class FileUploadComponent {\r\n    @Input(\"field\")\r\n    @Output(\"field\")\r\n    field: FileUploadField;\r\n\r\n    @ViewChild(\"fileInput\", {static: true})\r\n    fileInputReference: ElementRef;\r\n    dragActive = false;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    onDropFile(event: DragEvent) {\r\n        this.dragActive = false;\r\n        event.preventDefault();\r\n        this.uploadFile(event.dataTransfer.files);\r\n    }\r\n\r\n    onDragOverFile(event) {\r\n        this.dragActive = true;\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n    }\r\n\r\n    onDragLeave() {\r\n        this.dragActive = false;\r\n    }\r\n\r\n    selectFile(event) {\r\n        this.uploadFile(event.target.files);\r\n    }\r\n\r\n    uploadFile(files: FileList) {\r\n        if (files.length === 0) {\r\n            console.log(\"No file selected!\");\r\n            return;\r\n\r\n        }\r\n        // check if file limit is exceeded\r\n        if (!this.field.checkFileLimit(files.length)) {\r\n            this.resetFileUploadElement();\r\n            return;\r\n        }\r\n        // check file sizes\r\n        if (!this.field.checkFileSize(files)) {\r\n            this.resetFileUploadElement();\r\n            return;\r\n        }\r\n        // upload submitted files\r\n        Array.from(files).forEach((file) => {\r\n            this.doUpload(this.field.getForm().getApp().getBackendUrl() + this.field.url, file)\r\n                .subscribe(\r\n                    event => {\r\n                        if (event.type === HttpEventType.UploadProgress) {\r\n                            const percentDone: number = Math.round(100 * event.loaded / event.total);\r\n                            let uploadFile = this.field.findCurrentUpload(file.name);\r\n                            if (uploadFile == null) {\r\n                                uploadFile = this.addNewPathFile(file);\r\n                            }\r\n                            uploadFile.uploadProgress = percentDone;\r\n\r\n                        } else if (event instanceof HttpResponse) {\r\n                            let uploadFile = this.field.findCurrentUpload(file.name);\r\n                            if (uploadFile == null) {\r\n                                uploadFile = this.addNewPathFile(file);\r\n                            }\r\n                            const key: PathFileKey = new PathFileKey(event.body[\"key\"][\"key\"], event.body[\"key\"][\"name\"]);\r\n                            uploadFile.key = key;\r\n                            uploadFile.uploadFinished = true;\r\n                            uploadFile.uploadSuccessful = true;\r\n                            this.field.updateRequiredStatus();\r\n                        }\r\n                    },\r\n                    (err) => {\r\n                        console.log(\"Upload Error:\", err);\r\n                        const uploadFile = this.field.findCurrentUpload(file.name);\r\n                        if (uploadFile) {\r\n                            uploadFile.sizeString = \"Error\";\r\n                            uploadFile.uploadFinished = true;\r\n                        } else {\r\n                            console.log(\"error: file should exist (\" + file.name + \")\");\r\n                        }\r\n                        this.resetFileUploadElement();\r\n                    }, () => {\r\n                        this.resetFileUploadElement();\r\n                    }\r\n                );\r\n        });\r\n    }\r\n\r\n    private addNewPathFile(file): PathFile {\r\n        const uploadFile = new PathFile();\r\n        uploadFile.name = file.name;\r\n        uploadFile.size = file.size;\r\n        uploadFile.sizeString = this.field.getReadableFileSizeString(file.size);\r\n        uploadFile.active = true;\r\n        this.field.value.push(uploadFile);\r\n        this.field.sortValues();\r\n        return uploadFile;\r\n    }\r\n\r\n    private resetFileUploadElement(): void {\r\n        const count = this.field.value.reduce((acc, cur) => !cur.uploadFinished ? ++acc : acc, 0);\r\n        if (count === 0) {\r\n            this.fileInputReference.nativeElement.value = \"\";\r\n        }\r\n    }\r\n\r\n    private doUpload(url: string, file: File): Observable<HttpEvent<any>> {\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"upload\", file);\r\n\r\n        const params = new HttpParams();\r\n\r\n        const options = {\r\n            params: params,\r\n            reportProgress: true,\r\n        };\r\n\r\n        const req = new HttpRequest(\"POST\", url, formData, options);\r\n        return <any>this.http.request(req); // <any> fixes TS2719\r\n    }\r\n\r\n}\r\n\r\nexport class FileUploadField extends ValueField<PathFile[]> {\r\n\r\n    private _url: string;\r\n    private _multiple = true;\r\n    private _acceptedFileTypes: string[] = [];\r\n    private _fileUploadRequired: boolean;\r\n    private _fileLimit = 0;\r\n    private _singleFileSizeLimit = 0;\r\n    private _allFilesSizeLimit = 0;\r\n\r\n    constructor(form: IForm, translationService: TranslationService) {\r\n        super(form, translationService);\r\n        this.value = [];\r\n        this._acceptedFileTypes.push(\"*.*\");\r\n        this.updateRequiredStatus();\r\n    }\r\n\r\n    setValue(value: PathFile[]): void {\r\n        const files: PathFile[] = [];\r\n        for (const item of value) {\r\n            const file = Object.assign(new PathFile(), item);\r\n            file.key = Object.assign(new PathFileKey(null, null), item.key);\r\n            files.push(file);\r\n        }\r\n        this.sortValues();\r\n        super.setValue(files);\r\n        this.updateRequiredStatus();\r\n    }\r\n\r\n    public sortValues() {\r\n        this.value.sort((a, b) => a.name.localeCompare(b.name));\r\n    }\r\n\r\n    get url(): string {\r\n        return this._url;\r\n    }\r\n\r\n    set url(value: string) {\r\n        this._url = value;\r\n    }\r\n\r\n    get multiple(): boolean {\r\n        return this._multiple;\r\n    }\r\n\r\n    set multiple(value: boolean) {\r\n        this._multiple = value;\r\n    }\r\n\r\n    get acceptedFileTypes(): string[] {\r\n        return this._acceptedFileTypes;\r\n    }\r\n\r\n    set acceptedFileTypes(value: string[]) {\r\n        this._acceptedFileTypes = value;\r\n    }\r\n\r\n    get fileUploadRequired(): boolean {\r\n        return this._fileUploadRequired;\r\n    }\r\n\r\n    get fileLimit(): number {\r\n        return this._fileLimit;\r\n    }\r\n\r\n    get singleFileSizeLimit(): number {\r\n        return this._singleFileSizeLimit;\r\n    }\r\n\r\n    get allFilesSizeLimit(): number {\r\n        return this._allFilesSizeLimit;\r\n    }\r\n\r\n    public remove(index: number, key: PathFileKey): void {\r\n        if (key) {\r\n            const file: PathFile = this.find(key);\r\n            if (file) {\r\n                file.active = false;\r\n            }\r\n            this.updateRequiredStatus();\r\n        } else {\r\n            this.value.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    public find(key: PathFileKey): PathFile {\r\n        for (const file of this.value) {\r\n            if (file.key.equals(key)) {\r\n                return file;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public findCurrentUpload(name: string): PathFile {\r\n        for (const file of this.value) {\r\n            if (file.name === name && !file.uploadFinished) {\r\n                return file;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public updateRequiredStatus() {\r\n        let uploadInProgressCount = 0;\r\n        let uploadSuccessfulCount = 0;\r\n        this.value.forEach((file) => {\r\n            if (file.active && !file.uploadFinished) {\r\n                uploadInProgressCount++;\r\n            }\r\n            if (file.active && file.uploadSuccessful) {\r\n                uploadSuccessfulCount++;\r\n            }\r\n        });\r\n        let newStatus = false;\r\n        if (uploadInProgressCount > 0) {\r\n            // always required if upload in progress\r\n            newStatus = true;\r\n        } else if (this.required && uploadSuccessfulCount <= 0) {\r\n            newStatus = true;\r\n        }\r\n        this._fileUploadRequired = newStatus;\r\n    }\r\n\r\n    public checkFileLimit(newFilesLength: number): boolean {\r\n        let activeFileCount = 0;\r\n        this.value.forEach((file) => {\r\n            if (file.active) {\r\n                activeFileCount++;\r\n            }\r\n        });\r\n        if (this.fileLimit > 0 && ((activeFileCount + newFilesLength) > this.fileLimit)) {\r\n            const message = this.translationService.getText(\"FileLimitMessage\", String(this.fileLimit));\r\n            this.getForm().getApp().yesNo(message, () => {}, () => {});\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public checkFileSize(files: FileList): boolean {\r\n        if (this._singleFileSizeLimit || this._allFilesSizeLimit) {\r\n            // check single file limit\r\n            let sizeSum = 0;\r\n            const fileArray = Array.from(files);\r\n            for (const file of fileArray) {\r\n                sizeSum += file.size;\r\n                if (this._singleFileSizeLimit > 0 && file.size > this._singleFileSizeLimit) {\r\n                    const message = this.translationService.getText(\"FileSingleSizeMessage\",\r\n                        this.getReadableFileSizeString(this._singleFileSizeLimit));\r\n                    this.getForm().getApp().yesNo(message, () => {}, () => {});\r\n                    return false;\r\n                }\r\n            }\r\n            // check sum limit\r\n            if (this._allFilesSizeLimit > 0) {\r\n                this.value.forEach((file) => {\r\n                    if (file.active) {\r\n                        sizeSum += file.size;\r\n                    }\r\n                });\r\n                if (this._allFilesSizeLimit > 0 && sizeSum > this._allFilesSizeLimit) {\r\n                    const message = this.translationService.getText(\"FileAllSizeMessage\",\r\n                        this.getReadableFileSizeString(this._allFilesSizeLimit));\r\n                    this.getForm().getApp().yesNo(message, () => {}, () => {});\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public getReadableFileSizeString(byteSize: number): string {\r\n        let i = -1;\r\n        const byteUnits = [\" kB\", \" MB\", \" GB\", \" TB\", \" PB\", \" EB\", \" ZB\", \" YB\"];\r\n        do {\r\n            byteSize = byteSize / 1024;\r\n            i++;\r\n        } while (byteSize > 1024);\r\n\r\n        return Math.max(byteSize, 0.1).toFixed(1) + byteUnits[i];\r\n    }\r\n\r\n    public download(key: PathFileKey) {\r\n        window.location.assign(this.getForm().getApp().getBackendUrl() + this.url + \"/\" + key.key);\r\n    }\r\n\r\n    public fromJson(modelFormField) {\r\n        super.fromJson(modelFormField);\r\n        this.type = \"fileUpload\";\r\n        if (modelFormField[\"url\"]) {\r\n            this.url = modelFormField[\"url\"];\r\n        }\r\n        if (modelFormField[\"multiple\"] != null) {\r\n            this.multiple = modelFormField[\"multiple\"];\r\n        }\r\n        if (modelFormField[\"acceptedFileTypes\"]) {\r\n            this.acceptedFileTypes = modelFormField[\"acceptedFileTypes\"];\r\n        }\r\n        if (modelFormField[\"fileLimit\"]) {\r\n            this._fileLimit = modelFormField[\"fileLimit\"];\r\n        }\r\n        if (modelFormField[\"singleFileSizeLimit\"]) {\r\n            this._singleFileSizeLimit = modelFormField[\"singleFileSizeLimit\"];\r\n        }\r\n        if (modelFormField[\"allFilesSizeLimit\"]) {\r\n            this._allFilesSizeLimit = modelFormField[\"allFilesSizeLimit\"];\r\n        }\r\n        this.updateRequiredStatus();\r\n    }\r\n\r\n}\r\n\r\nexport class PathFile {\r\n    active: boolean; // file deleted: active === false\r\n    uploadFinished = false;\r\n    uploadSuccessful = false;\r\n    uploadProgress = 0;\r\n    name: string;\r\n    sizeString: string;\r\n    size = 0;\r\n    key: PathFileKey;\r\n}\r\n\r\n// TODO unify with list key\r\n// tslint:disable:max-classes-per-file\r\nexport class PathFileKey {\r\n    key: string;\r\n    name: any;\r\n\r\n    constructor(key: string, name: any) {\r\n        this.key = key;\r\n        this.name = name;\r\n    }\r\n\r\n    public equals(otherKey: PathFileKey): boolean {\r\n        if (otherKey != null &&\r\n            otherKey.name &&\r\n            otherKey.key &&\r\n            this.name &&\r\n            this.key &&\r\n            otherKey.name === this.name &&\r\n            otherKey.key === this.key) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n","import {Component, Input, Output, ElementRef} from \"@angular/core\";\r\nimport {ValueField} from \"../value-field\";\r\n\r\n@Component({\r\n    selector: \"path-field-list\",\r\n    templateUrl: \"field-list-field.component.html\"\r\n})\r\nexport class FieldListFieldComponent {\r\n    @Input(\"field\")\r\n    @Output(\"field\")\r\n    field: FieldListField;\r\n}\r\n\r\nexport class FieldListField extends ValueField<string[]> {\r\n    private _subfields: ValueField<any>[] = [];\r\n\r\n    get subfields(): ValueField<any>[] {\r\n        return this._subfields;\r\n    }\r\n\r\n    set subfields(value: ValueField<any>[]) {\r\n        this._subfields = value;\r\n    }\r\n}\r\n","import {IForm} from \"../pathinterface\";\r\n\r\nexport class FocusUtility {\r\n\r\n    public static focusFirstField(currentForm: IForm) {\r\n        window.setTimeout(() => {\r\n            let focusDone = false;\r\n\r\n            let forms = <any>document.forms;\r\n            if (currentForm != null) {\r\n                forms = [forms[forms.length - 1]]; // only last form on form stack\r\n            }\r\n            for (const form of forms) {\r\n                for (const element of <any>form.elements) {\r\n                    if (element instanceof HTMLInputElement &&\r\n                        (<HTMLInputElement>element).type === \"text\" || (<HTMLInputElement>element).type === \"textarea\") {\r\n                        const input = <HTMLInputElement>element;\r\n                        if (input.outerHTML.indexOf(\"readonly-with-required\") < 0) { // no focus on readonly fields\r\n                            input.focus();\r\n                            focusDone = true;\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n                if (focusDone) {\r\n                    break;\r\n                }\r\n            }\r\n        }, 1);\r\n    }\r\n\r\n}\r\n","import {AfterViewInit, Component, Input, Output} from \"@angular/core\";\r\nimport {PathService} from \"../service/path.service\";\r\nimport {IForm, IPathApp, IFormHandler, IFormBean} from \"../pathinterface\";\r\nimport {ValueField} from \"./field/value-field\";\r\nimport {FormField} from \"./field/form-field\";\r\nimport {FieldListField} from \"./field/fieldList/field-list-field.component\";\r\nimport {Key} from \"../page/element/page-element\";\r\nimport {FormFunction} from \"./form-function\";\r\nimport {TranslationService} from \"../service/translation.service\";\r\nimport {FocusUtility} from \"./focus-utility\";\r\n\r\n@Component({\r\n    selector: \"path-form\",\r\n    templateUrl: \"form.component.html\",\r\n})\r\nexport class FormComponent implements AfterViewInit {\r\n    @Input(\"form\")\r\n    @Output(\"form\")\r\n    form: Form;\r\n\r\n    public onSubmit() {\r\n        this.form.close(true, false);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        FocusUtility.focusFirstField(this.form);\r\n    }\r\n}\r\n\r\nexport class Form implements IForm {\r\n    private _key: Key;\r\n    private _title: string;\r\n    private _fields: FormField[] = [];\r\n    private _rows: FormRow[] = [];\r\n    private _handler: IFormHandler;\r\n    private _url: string;\r\n    private _urlDefaults: boolean;\r\n    private _bean: IFormBean;\r\n    private _formFunction: FormFunction;\r\n    private _headerVisible = true;\r\n    private _footerVisible = true;\r\n    private _borderStyle: BorderStyle = BorderStyle.Shadow;\r\n\r\n    constructor(private pathService: PathService, private app: IPathApp) {\r\n    }\r\n\r\n    getApp(): IPathApp {\r\n        return this.app;\r\n    }\r\n\r\n    getKey(): Key {\r\n        return this.key;\r\n    }\r\n\r\n    get key(): Key {\r\n        return this._key;\r\n    }\r\n\r\n    set key(value: Key) {\r\n        this._key = value;\r\n    }\r\n\r\n    get rows(): FormRow[] {\r\n        return this._rows;\r\n    }\r\n\r\n    get title(): string {\r\n        return this._title;\r\n    }\r\n\r\n    set title(value: string) {\r\n        this._title = value;\r\n    }\r\n\r\n    public getFields(): FormField[] {\r\n        return this.fields;\r\n    }\r\n\r\n    get fields(): FormField[] {\r\n        return this._fields;\r\n    }\r\n\r\n    set fields(value: FormField[]) {\r\n        this._fields = value;\r\n    }\r\n\r\n    get handler(): IFormHandler {\r\n        return this._handler;\r\n    }\r\n\r\n    set handler(value: IFormHandler) {\r\n        this._handler = value;\r\n    }\r\n\r\n    get url(): string {\r\n        return this._url;\r\n    }\r\n\r\n    set url(value: string) {\r\n        this._url = value;\r\n    }\r\n\r\n    get bean(): IFormBean {\r\n        return this._bean;\r\n    }\r\n\r\n    set bean(value: IFormBean) {\r\n        this._bean = value;\r\n    }\r\n\r\n    get formFunction(): FormFunction {\r\n        return this._formFunction;\r\n    }\r\n\r\n    set formFunction(value: FormFunction) {\r\n        this._formFunction = value;\r\n    }\r\n\r\n    get headerVisible(): boolean {\r\n        return this._headerVisible;\r\n    }\r\n\r\n    set headerVisible(value: boolean) {\r\n        this._headerVisible = value;\r\n    }\r\n\r\n    get footerVisible(): boolean {\r\n        return this._footerVisible;\r\n    }\r\n\r\n    set footerVisible(value: boolean) {\r\n        this._footerVisible = value;\r\n    }\r\n\r\n    get borderStyle(): BorderStyle {\r\n        return this._borderStyle;\r\n    }\r\n\r\n    set borderStyle(value: BorderStyle) {\r\n        this._borderStyle = value;\r\n    }\r\n\r\n    get urlDefaults(): boolean {\r\n        return this._urlDefaults;\r\n    }\r\n\r\n    public fromJson(modelForm) {\r\n        this.url = modelForm[\"url\"];\r\n        if (modelForm[\"urlDefaults\"] != null) {\r\n            this._urlDefaults = modelForm[\"urlDefaults\"];\r\n        }\r\n        this.headerVisible = true;\r\n        if (modelForm[\"headerVisible\"] != null) {\r\n            this.headerVisible = modelForm[\"headerVisible\"];\r\n        }\r\n        this.footerVisible = true;\r\n        if (modelForm[\"footerVisible\"] != null) {\r\n            this.footerVisible = modelForm[\"footerVisible\"];\r\n        }\r\n        this.borderStyle = BorderStyle.Shadow;\r\n        if (modelForm[\"borderStyle\"] != null) {\r\n            const borderStyleString: string = modelForm[\"borderStyle\"];\r\n            this.borderStyle = BorderStyle[borderStyleString];\r\n        }\r\n    }\r\n\r\n    public updateRows() {\r\n        const rows: FormRow[] = [];\r\n\r\n        let currentFormRow: FormRow;\r\n        for (const field of this.fields) {\r\n            if (field instanceof FieldListField) {\r\n                for (const subField of (<FieldListField>field).subfields) {\r\n                    currentFormRow = this.calculateFieldRow(subField, currentFormRow, rows);\r\n                    currentFormRow.fields.push(subField);\r\n                }\r\n            } else {\r\n                currentFormRow = this.calculateFieldRow(field, currentFormRow, rows);\r\n                currentFormRow.fields.push(field);\r\n            }\r\n        }\r\n        this._rows = rows;\r\n    }\r\n\r\n    private calculateFieldRow(field: FormField, currentFormRow: FormRow, rows: FormRow[]): FormRow {\r\n        // auto-start new row with form width 2\r\n        if (currentFormRow == null ||\r\n            field.newRow ||\r\n            currentFormRow.fields.length >= 2 ||\r\n            field.width >= 2 ||\r\n            currentFormRow.getWidth() >= 2\r\n        ) {\r\n            field.newRow = true;\r\n            currentFormRow = new FormRow();\r\n            rows.push(currentFormRow);\r\n        }\r\n        return currentFormRow;\r\n    }\r\n\r\n    public close(save: boolean, remove: boolean) {\r\n        if (save || remove) {\r\n            // call close handler\r\n            if (this.handler != null) {\r\n                this.handler.doSave(this._bean);\r\n            }\r\n            const data = {};\r\n            for (const field of this._fields) {\r\n                if (field instanceof ValueField && field.id != null) {\r\n                    data[field.id] = (<ValueField<any>>field).value;\r\n                }\r\n                if (field instanceof FieldListField) {\r\n                    for (const subfield of (<FieldListField>field).subfields) {\r\n                        data[subfield.id] = (<ValueField<any>>subfield).value;\r\n                    }\r\n                }\r\n            }\r\n            if (remove) {\r\n                this.pathService.serverDelete(this.app.getBackendUrl(), this.url, this.formFunction.delete);\r\n            } else if (this.key == null) {\r\n                // create\r\n                this.pathService.serverPost(this.app.getBackendUrl(), this.url, data, this.formFunction.save, null);\r\n            } else {\r\n                // update (with key)\r\n                this.pathService.serverPut(this.app.getBackendUrl(), this.url, data, this.formFunction.save);\r\n            }\r\n        } else {\r\n            this.formFunction.cancel();\r\n        }\r\n    }\r\n\r\n    public onKey(event) {\r\n        if (event.keyCode === 27) { // esc\r\n            this.close(false, false);\r\n        }\r\n    }\r\n}\r\n\r\nexport class FormRow {\r\n    private _fields: FormField[] = [];\r\n\r\n    get fields(): FormField[] {\r\n        return this._fields;\r\n    }\r\n\r\n    set fields(value: FormField[]) {\r\n        this._fields = value;\r\n    }\r\n\r\n    public getWidth(): number {\r\n        let sum = 0;\r\n        for (const field of this.fields) {\r\n            sum += field.width;\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    public isVisible(): boolean {\r\n        for (const field of this.fields) {\r\n            if (field.visible) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\nexport enum BorderStyle {\r\n    // TODO use string enum after TS upgrade, then use enum in template (with member)\r\n    None = 1,\r\n    Shadow = 2\r\n}\r\n","import {IPageElement, IKey} from \"../pathinterface\";\r\nimport {Key} from \"../page/element/page-element\";\r\n\r\nexport class KeyUtility {\r\n\r\n    public static translateUrl(url: string, formKey: IKey, crudFormUrl: boolean, parentPageElement: IPageElement): string {\r\n        let translatedUrl: any = url;\r\n\r\n        if (translatedUrl != null) {\r\n            if (formKey != null && !(translatedUrl.indexOf(formKey.getName()) > 0) && crudFormUrl) {\r\n                translatedUrl = translatedUrl + \"/\" + formKey.getKey();\r\n            }\r\n            if (formKey != null) {\r\n                translatedUrl = translatedUrl.replace(\":\" + formKey.getName(), formKey.getKey());\r\n            }\r\n            let pageElement = parentPageElement;\r\n            while (pageElement != null) {\r\n                if (pageElement.getKey() != null) {\r\n                    translatedUrl = translatedUrl.replace(\":\" + pageElement.getKey().getName(), pageElement.getKey().getKey());\r\n                }\r\n                pageElement = pageElement.getParent();\r\n            }\r\n        }\r\n\r\n        return translatedUrl;\r\n    }\r\n\r\n    public static findKey(pageElement: IPageElement, name: string): Key {\r\n        let searchKeyName = name;\r\n        if (searchKeyName) {\r\n            searchKeyName = searchKeyName.replace(\":\", \"\");\r\n            while (pageElement != null) {\r\n                if (pageElement.getKey() != null && pageElement.getKey().getName() === searchKeyName) {\r\n                    return <Key>pageElement.getKey();\r\n                }\r\n                pageElement = pageElement.getParent();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static replaceVariable(url: string, variable: string, value: string): string {\r\n        // replace variables at line end\r\n        let regExp = new RegExp(\":\" + variable + \"$\", \"g\");\r\n        url = url.replace(regExp, value);\r\n        // replace variables in middle of line\r\n        regExp = new RegExp(\":\" + variable + \"\\/\", \"g\");\r\n        url = url.replace(regExp, value + \"/\");\r\n        return url;\r\n    }\r\n\r\n    public static variableExists(url: string, variable: string): boolean {\r\n        const regExp = new RegExp(\":\" + variable + \"$\", \"g\");\r\n        const regExp2 = new RegExp(\":\" + variable + \"\\/\", \"g\");\r\n        return url.search(regExp) !== -1 || url.search(regExp2) !== -1;\r\n    }\r\n\r\n}\r\n","import {IPageElement, IKey, IPathApp} from \"../../pathinterface\";\r\nimport {KeyUtility} from \"../../utility/key-utility\";\r\n\r\nexport class PageElement implements IPageElement {\r\n    private readonly _app: IPathApp;\r\n    private _id: string;\r\n    private _key: Key;\r\n    private _name: string;\r\n    private _type: string;\r\n    private _width: number;\r\n    private _visible = true;\r\n    private _newRow = false;\r\n    private _listElement = false;\r\n    private _parentPageElement: PageElement;\r\n\r\n    public static buildShortName(str: string) {\r\n        if (str == null || str.length === 0) {\r\n            return \"\";\r\n        }\r\n        if (str.length > 63) {\r\n            return str.substr(0, 60) + \"...\";\r\n        }\r\n        return str;\r\n    }\r\n\r\n    constructor(app: IPathApp) {\r\n        this._app = app;\r\n    }\r\n\r\n    public getShortName(): string {\r\n        return PageElement.buildShortName(this.name);\r\n    }\r\n\r\n    get app(): IPathApp {\r\n        return this._app;\r\n    }\r\n\r\n    get name(): string {\r\n        return this._name;\r\n    }\r\n\r\n    set name(value: string) {\r\n        this._name = value;\r\n    }\r\n\r\n    get type(): string {\r\n        return this._type;\r\n    }\r\n\r\n    set type(value: string) {\r\n        this._type = value;\r\n    }\r\n\r\n    get id(): string {\r\n        return this._id;\r\n    }\r\n\r\n    set id(value: string) {\r\n        this._id = value;\r\n    }\r\n\r\n    get width(): number {\r\n        return this._width;\r\n    }\r\n\r\n    set width(value: number) {\r\n        this._width = value;\r\n    }\r\n\r\n    public getKey(): IKey {\r\n        return this._key;\r\n    }\r\n\r\n    get key(): Key {\r\n        return this._key;\r\n    }\r\n\r\n    set key(value: Key) {\r\n        this._key = value;\r\n    }\r\n\r\n    public getParent(): IPageElement {\r\n        return this.parentPageElement;\r\n    }\r\n\r\n    get visible(): boolean {\r\n        return this._visible;\r\n    }\r\n\r\n    set visible(value: boolean) {\r\n        this._visible = value;\r\n    }\r\n\r\n    get newRow(): boolean {\r\n        return this._newRow;\r\n    }\r\n\r\n    set newRow(value: boolean) {\r\n        this._newRow = value;\r\n    }\r\n\r\n    get parentPageElement(): PageElement {\r\n        return this._parentPageElement;\r\n    }\r\n\r\n    set parentPageElement(value: PageElement) {\r\n        this._parentPageElement = value;\r\n    }\r\n\r\n    get listElement(): boolean {\r\n        return this._listElement;\r\n    }\r\n\r\n    set listElement(value: boolean) {\r\n        this._listElement = value;\r\n    }\r\n\r\n    public fromJson(modelElement) {\r\n        this.visible = true;\r\n        if (modelElement[\"id\"] != null) {\r\n            this.id = modelElement[\"id\"];\r\n        }\r\n        if (modelElement[\"key\"] != null) {\r\n            const name: string = modelElement[\"key\"][\"name\"];\r\n            if (name && !modelElement[\"key\"][\"key\"]) {\r\n                this.key = KeyUtility.findKey(this.parentPageElement, name);\r\n            } else {\r\n                this.key = new Key(modelElement[\"key\"][\"key\"], name);\r\n            }\r\n        }\r\n        if (modelElement[\"visible\"] != null) {\r\n            this.visible = modelElement[\"visible\"];\r\n        }\r\n        if (modelElement[\"newRow\"] != null) {\r\n            this.newRow = modelElement[\"newRow\"];\r\n        }\r\n        if (modelElement[\"width\"] != null) {\r\n            this.width = modelElement[\"width\"];\r\n        } else {\r\n            this.width = 1;\r\n        }\r\n    }\r\n}\r\n\r\nexport class Key implements IKey {\r\n    private _key: any;\r\n    private _name: string;\r\n\r\n    constructor(key: any, name: string) {\r\n        this._key = key;\r\n        this._name = name;\r\n    }\r\n\r\n    public getName(): string {\r\n        return this._name;\r\n    }\r\n\r\n    set key(value: any) {\r\n        this._key = value;\r\n    }\r\n\r\n    public getKey(): any {\r\n        return this._key;\r\n    }\r\n\r\n    set name(value: string) {\r\n        this._name = value;\r\n    }\r\n\r\n    public equals(otherKey: Key): boolean {\r\n        if (otherKey != null &&\r\n            otherKey.getName() &&\r\n            otherKey.getKey() &&\r\n            this.getName() &&\r\n            this.getKey() &&\r\n            otherKey.getName() === this.getName() &&\r\n            otherKey.getKey() === this.getKey()) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","import {Component, Input, Output} from \"@angular/core\";\r\nimport {IPathApp} from \"../../../pathinterface\";\r\nimport {Button} from \"../button/button.component\";\r\nimport {PageElement} from \"../page-element\";\r\n\r\n@Component({\r\n    selector: \"path-button-group\",\r\n    templateUrl: \"button-group.component.html\"\r\n})\r\nexport class ButtonGroupComponent {\r\n    @Input(\"buttonGroup\")\r\n    @Output(\"buttonGroup\")\r\n    buttonGroup: ButtonGroup;\r\n}\r\n\r\nexport class ButtonGroup extends PageElement {\r\n\r\n    private _buttons: Button[] = [];\r\n    private _mobilePageBreak = false;\r\n\r\n    constructor(app: IPathApp) {\r\n        super(app);\r\n    }\r\n\r\n    get buttons(): Button[] {\r\n        return this._buttons;\r\n    }\r\n\r\n    get mobilePageBreak(): boolean {\r\n        return this._mobilePageBreak;\r\n    }\r\n\r\n    public addButton(button: Button): void {\r\n        this._buttons.push(button);\r\n        let length = 0;\r\n        for (const currentButton of this.buttons) {\r\n            length += (currentButton.width >= 2 ? 2 : 1);\r\n        }\r\n        this._mobilePageBreak = length > 1 && this.buttons.length >= 2;\r\n    }\r\n\r\n    public updateButtonBorders(): void {\r\n        if (this._buttons.length === 1) {\r\n            // single button has no special border\r\n            this._buttons[0].cssGroupBorder = \"\";\r\n        } else {\r\n            for (const button of this._buttons) {\r\n                button.cssGroupBorder = \"tile-grouped-middle\";\r\n            }\r\n            if (this._buttons.length >= 1) {\r\n                // set first and last button border\r\n                this._buttons[0].cssGroupBorder = \"tile-grouped-left\";\r\n                this._buttons[this._buttons.length - 1].cssGroupBorder = \"tile-grouped-right\";\r\n            }\r\n        }\r\n    }\r\n\r\n    public fromJson(modelElement) {\r\n        super.fromJson(modelElement);\r\n        this.type = \"buttonGroup\";\r\n    }\r\n\r\n}\r\n","import {Component, AfterViewInit, Input, Output} from \"@angular/core\";\r\nimport {PageElement} from \"../page-element\";\r\nimport {PathService} from \"../../../service/path.service\";\r\nimport {IPathApp} from \"../../../pathinterface\";\r\nimport {TranslationService} from \"../../../service/translation.service\";\r\n\r\ndeclare var Chart: any;\r\n\r\n// Note: Chart would be an example for a custom path element contributed by a path user\r\n\r\n@Component({\r\n    selector: \"path-radar-chart\",\r\n    templateUrl: \"chart.component.html\"\r\n})\r\nexport class ChartComponent implements AfterViewInit {\r\n    @Input(\"chart\")\r\n    @Output(\"chart\")\r\n    chart: ChartElement;\r\n\r\n    ngAfterViewInit() {\r\n        this.chart.load((data: any) => {\r\n            this.chart.data = data;\r\n        });\r\n    }\r\n}\r\n\r\nexport class ChartElement extends PageElement {\r\n    private _url: string;\r\n    private _data: any;\r\n\r\n    constructor(app: IPathApp, private pathService: PathService, public translationService: TranslationService) {\r\n        super(app);\r\n    }\r\n\r\n    public load(loader: (data: any) => any) {\r\n        this.pathService.serverGet(this.app.getBackendUrl(), this.url, loader, (err: any) => {\r\n            console.log(\"error\" + err);\r\n        });\r\n    }\r\n\r\n    get url(): string {\r\n        return this._url;\r\n    }\r\n\r\n    set url(value: string) {\r\n        this._url = value;\r\n    }\r\n\r\n    get data(): any {\r\n        return this._data;\r\n    }\r\n\r\n    set data(value: any) {\r\n        this._data = value;\r\n    }\r\n}\r\n","export class AutoCompleteFieldEntry {\r\n\r\n    private _key: any;\r\n    private _text: string;\r\n    private _active: boolean;\r\n\r\n    get key(): any {\r\n        return this._key;\r\n    }\r\n\r\n    set key(value: any) {\r\n        this._key = value;\r\n    }\r\n\r\n    get text(): string {\r\n        return this._text;\r\n    }\r\n\r\n    set text(value: string) {\r\n        this._text = value;\r\n    }\r\n\r\n    get active(): boolean {\r\n        return this._active;\r\n    }\r\n\r\n    set active(value: boolean) {\r\n        this._active = value;\r\n    }\r\n}\r\n","import {IFormFunction} from \"../pathinterface\";\r\n\r\nexport class FormFunction implements IFormFunction {\r\n\r\n    private _cancel: () => void;\r\n    private _save: (data: any) => void;\r\n    private _delete: (data: any) => void;\r\n\r\n    get cancel(): () => void {\r\n        return this._cancel;\r\n    }\r\n\r\n    set cancel(value: () => void) {\r\n        this._cancel = value;\r\n    }\r\n\r\n    get save(): (data: any) => void {\r\n        return this._save;\r\n    }\r\n\r\n    set save(value: (data: any) => void) {\r\n        this._save = value;\r\n    }\r\n\r\n    get delete(): (data: any) => void {\r\n        return this._delete;\r\n    }\r\n\r\n    set delete(value: (data: any) => void) {\r\n        this._delete = value;\r\n    }\r\n}\r\n","import {Component, Input, Output, ElementRef} from \"@angular/core\";\r\nimport {ValueField} from \"../value-field\";\r\nimport {AutoCompleteFieldEntry} from \"./auto-complete-field-entry\";\r\nimport {Key} from \"../../../page/element/page-element\";\r\nimport {IForm, IFormField} from \"../../../pathinterface\";\r\nimport {TranslationService} from \"../../../service/translation.service\";\r\nimport {PathService} from \"../../../service/path.service\";\r\nimport {Form} from \"../../form.component\";\r\nimport {FormFunction} from \"../../form-function\";\r\nimport {KeyUtility} from \"../../../utility/key-utility\";\r\n\r\n@Component({\r\n    selector: \"path-autocomplete\",\r\n    // tslint:disable-next-line\r\n    host: {\r\n        \"(document:click)\": \"handleClick($event)\",\r\n    },\r\n    templateUrl: \"auto-complete-field.component.html\"\r\n})\r\nexport class AutoCompleteComponent {\r\n    @Input(\"field\")\r\n    @Output(\"field\")\r\n    field: AutoCompleteField;\r\n    private _elementRef;\r\n\r\n    constructor(myElement: ElementRef) {\r\n        this._elementRef = myElement;\r\n    }\r\n\r\n    handleClick(event) {\r\n        if (this.field.isReadonly()) {\r\n            return;\r\n        }\r\n        let clickedComponent = event.target;\r\n        let inside = false;\r\n        do {\r\n            if (clickedComponent === this._elementRef.nativeElement) {\r\n                inside = true;\r\n            }\r\n            clickedComponent = clickedComponent.parentNode;\r\n        } while (clickedComponent);\r\n        if (!inside) {\r\n            this.field.clearFilteredList();\r\n        }\r\n        if (!this.field.valueSet) {\r\n            this.field.query = null;\r\n            this.field.setValue(null);\r\n        }\r\n    }\r\n}\r\n\r\nexport class AutoCompleteField extends ValueField<string> {\r\n    private _query: AutoCompleteFieldEntry;\r\n    private _filteredList: AutoCompleteFieldEntry[] = [];\r\n    private _data: AutoCompleteFieldEntry[] = [];\r\n    private _dataLoaded = false;\r\n    private _wordSearchEnabled: boolean;\r\n    private _valueSet = false;\r\n    private _detailForm: string;\r\n    private _keyType: string;\r\n    private _url: string;\r\n\r\n    constructor(protected form: IForm, protected translationService: TranslationService, protected pathService: PathService) {\r\n        super(form, translationService);\r\n    }\r\n\r\n    public isReadonly() {\r\n        return super.isReadonly() && this.isInitialValueSet;\r\n    }\r\n\r\n    filter(query: string, event) {\r\n        // do not filter readonly fields\r\n        if (this.isReadonly()) {\r\n            return;\r\n        }\r\n        // do not filter on simple tab focus change\r\n        if (event.keyCode === 9) {\r\n            return;\r\n        }\r\n\r\n        this._valueSet = false;\r\n        if (query !== null && query.length > 0 && query.replace(/\\s/g, \"\").length === 0) {\r\n            /* space: all */\r\n            this._filteredList = this._data.filter(function (entry) {\r\n                return entry.active;\r\n            }.bind(this));\r\n        } else if (query !== null && query !== \"\") {\r\n            /* search term: filter */\r\n            query = query.trim();\r\n            this._filteredList = this._data.filter(function (entry) {\r\n                if (!entry.active) {\r\n                    return false;\r\n                }\r\n                const entryName: string = entry.text;\r\n                if (entryName.toLowerCase().indexOf(query.toLowerCase()) > -1) {\r\n                    return true;\r\n                } else if (this._wordSearchEnabled) {\r\n                    const tokens: string[] = entryName.toLowerCase().split(\" \");\r\n                    for (const token of tokens) {\r\n                        if (token.startsWith(query.toLowerCase())) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n                return false;\r\n            }.bind(this));\r\n        } else {\r\n            /* empty: nothing */\r\n            this.clearFilteredList();\r\n        }\r\n        this._filteredList.sort();\r\n    }\r\n\r\n    select(item: AutoCompleteFieldEntry) {\r\n        this.setValue(item.key);\r\n    }\r\n\r\n    focusLost() {\r\n        window.setTimeout(() => {\r\n            if (!this.valueSet) {\r\n                // force angular to update query.text value\r\n                if (this.value == null) {\r\n                    this.resetDisplay(null);\r\n                } else {\r\n                    this.resetDisplay(this.value[\"key\"]);\r\n                }\r\n            }\r\n        }, 1);\r\n    }\r\n\r\n    public setValue(value: string) {\r\n        const oldValue: string = this.value;\r\n\r\n        // accept key values and complex objects\r\n        if (value != null && value[\"key\"] != null) {\r\n            value = value[\"key\"];\r\n            this._keyType = value[\"name\"];\r\n        }\r\n        this._valueSet = value != null;\r\n        this.clearFilteredList();\r\n        super.setValue(value);\r\n        this.query = null;\r\n        this.resetDisplay(value);\r\n        // reload dependent autocomplete fields\r\n        if (oldValue !== this.value) {\r\n            for (const field of this.getForm().getFields()) {\r\n                if (field instanceof AutoCompleteField) {\r\n                    if ((<AutoCompleteField>field).id !== this.id) {\r\n                        const autoCompleteField = <AutoCompleteField>field;\r\n                        if (KeyUtility.variableExists(autoCompleteField.url, this.id)) {\r\n                            autoCompleteField.load();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public load() {\r\n        this.dataLoaded = false;\r\n        let url: string = this.url;\r\n        for (const field of this.getForm().getFields()) {\r\n            if (field instanceof ValueField) {\r\n                const valueField = <ValueField<any>>field;\r\n                url = KeyUtility.replaceVariable(url, valueField.id, valueField.value);\r\n                console.log(url);\r\n            }\r\n        }\r\n        this.pathService.serverGet(this.getForm().getApp().getBackendUrl(), url, (data: any) => {\r\n            const dynamicData = [];\r\n            for (const item of data) {\r\n                const entry = new AutoCompleteFieldEntry();\r\n                entry.key = item[\"key\"][\"key\"];\r\n                entry.text = item[\"name\"];\r\n                if (item[\"active\"] != null) {\r\n                    entry.active = item[\"active\"];\r\n                } else {\r\n                    entry.active = true;\r\n                }\r\n                dynamicData.push(entry);\r\n            }\r\n            this.data = dynamicData;\r\n            this.dataLoaded = true;\r\n            this.setValue(this.value); // force display refresh\r\n        }, null);\r\n    }\r\n\r\n    public getDetailButtonName() {\r\n        if (this.value == null) {\r\n            return this.translationService.getText(\"New\") + \"...\";\r\n        } else {\r\n            return this.translationService.getText(\"Detail\") + \"...\";\r\n        }\r\n    }\r\n\r\n    public showDetailForm() {\r\n        let form: Form = null;\r\n\r\n        const formFunction = new FormFunction();\r\n        formFunction.save = (data: any) => {\r\n            this.getForm().getApp().closeCurrentForm();\r\n            if (data[\"key\"] != null) {\r\n                this.setValue(data[\"key\"]);\r\n            }\r\n            this.load();\r\n        };\r\n        formFunction.cancel = () => {\r\n            this.getForm().getApp().closeCurrentForm();\r\n        };\r\n        formFunction.delete = (data: any) => {\r\n            this.getForm().getApp().closeCurrentForm();\r\n            this.setValue(null);\r\n            this.load();\r\n        };\r\n\r\n        if (this.value == null) {\r\n            form = this.getForm().getApp().createForm(this.detailForm, null, null, formFunction, null);\r\n        } else {\r\n            form = this.getForm().getApp().createForm(this.detailForm, new Key(this.value, this._keyType), null, formFunction, null);\r\n        }\r\n        this.form.getApp()[\"_formStack\"].push(form); // TODO\r\n    }\r\n\r\n    public clearFilteredList() {\r\n        this._filteredList = [];\r\n    }\r\n\r\n    private resetDisplay(value: string) {\r\n        // must wait with display update until data is loaded\r\n        const displaySetter = () => {\r\n            const keyValue = value;\r\n            if (!this.dataLoaded) {\r\n                console.log(\"waiting...\");\r\n                window.setTimeout(function () {\r\n                    displaySetter();\r\n                }, 250);\r\n            } else {\r\n                if (keyValue == null) {\r\n                    window.setTimeout(() => {\r\n                        // check value again, may have changed since reset was triggered\r\n                        if (this.value == null) {\r\n                            this.query = new AutoCompleteFieldEntry();\r\n                        }\r\n                    }, 1);\r\n                } else {\r\n                    for (const item of this._data) {\r\n                        // tslint:disable:triple-equals\r\n                        if (item.key == keyValue) {\r\n                            window.setTimeout(() => {\r\n                                this.query = item;\r\n                            }, 1);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        displaySetter();\r\n    }\r\n\r\n    get query(): AutoCompleteFieldEntry {\r\n        return this._query;\r\n    }\r\n\r\n    set query(value: AutoCompleteFieldEntry) {\r\n        this._query = value;\r\n    }\r\n\r\n    set data(value: AutoCompleteFieldEntry[]) {\r\n        this._data = value;\r\n    }\r\n\r\n    get filteredList(): AutoCompleteFieldEntry[] {\r\n        return this._filteredList;\r\n    }\r\n\r\n    set wordSearchEnabled(value: boolean) {\r\n        this._wordSearchEnabled = value;\r\n    }\r\n\r\n    get valueSet(): boolean {\r\n        return this._valueSet;\r\n    }\r\n\r\n    get dataLoaded(): boolean {\r\n        return this._dataLoaded;\r\n    }\r\n\r\n    set dataLoaded(value: boolean) {\r\n        this._dataLoaded = value;\r\n    }\r\n\r\n    get detailForm(): string {\r\n        return this._detailForm;\r\n    }\r\n\r\n    set detailForm(value: string) {\r\n        this._detailForm = value;\r\n    }\r\n\r\n    get url(): string {\r\n        return this._url;\r\n    }\r\n\r\n    set url(value: string) {\r\n        this._url = value;\r\n    }\r\n}\r\n","import {Component, Input, Output} from \"@angular/core\";\r\nimport {ValueField} from \"../value-field\";\r\n\r\n@Component({\r\n    selector: \"path-textfield\",\r\n    templateUrl: \"text-field.component.html\"\r\n})\r\nexport class TextFieldComponent {\r\n    @Input(\"field\")\r\n    @Output(\"field\")\r\n    field: TextField;\r\n}\r\n\r\nexport class TextField extends ValueField<string> {\r\n\r\n    private _isPassword = false;\r\n    private _maxLength = 250;\r\n\r\n    get isPassword(): boolean {\r\n        return this._isPassword;\r\n    }\r\n\r\n    set isPassword(value: boolean) {\r\n        this._isPassword = value;\r\n    }\r\n\r\n    get maxLength(): number {\r\n        return this._maxLength;\r\n    }\r\n\r\n    set maxLength(value: number) {\r\n        this._maxLength = value;\r\n    }\r\n\r\n    public fromJson(modelFormField) {\r\n        super.fromJson(modelFormField);\r\n        if (modelFormField[\"isPassword\"] != null) {\r\n            this.isPassword = (modelFormField[\"isPassword\"]);\r\n        }\r\n        if (modelFormField[\"maxLength\"] != null) {\r\n            this.maxLength = (modelFormField[\"maxLength\"]);\r\n        }\r\n    }\r\n\r\n}\r\n","import {Component, Input, Output} from \"@angular/core\";\r\nimport {ValueField} from \"../value-field\";\r\nimport {IForm} from \"../../../pathinterface\";\r\nimport {TranslationService} from \"../../../service/translation.service\";\r\nimport * as momentImported from \"moment\";\r\n\r\nconst moment = momentImported;\r\n\r\n@Component({\r\n    selector: \"path-datefield\",\r\n    templateUrl: \"date-field.component.html\"\r\n})\r\nexport class DateFieldComponent {\r\n    @Input(\"field\")\r\n    @Output(\"field\")\r\n    field: DateField;\r\n}\r\n\r\nexport class DateField extends ValueField<Date> {\r\n\r\n    private _datePickerValue: Date;\r\n    private _initialValueSet = false;\r\n    private _datePickerInitialValue: Date;\r\n    private _dateInputFormat: string;\r\n\r\n    constructor(protected form: IForm, protected translationService: TranslationService) {\r\n        super(form, translationService);\r\n        this._dateInputFormat = translationService.getUserDateFormat();\r\n    }\r\n\r\n    get datePickerValue(): Date {\r\n        return this._datePickerValue;\r\n    }\r\n\r\n    set datePickerValue(value: Date) {\r\n        this._datePickerValue = value;\r\n    }\r\n\r\n    get initialValueSet(): boolean {\r\n        return this._initialValueSet;\r\n    }\r\n\r\n    get datePickerInitialValue(): Date {\r\n        return this._datePickerInitialValue;\r\n    }\r\n\r\n    get dateInputFormat(): string {\r\n        return this._dateInputFormat;\r\n    }\r\n\r\n    public setValue(value: Date) {\r\n        if (typeof value === \"string\") {\r\n            value = moment(value).toDate();\r\n        }\r\n        if (value != null && Object.prototype.toString.call(value) === \"[object Date]\") {\r\n            // it is a date\r\n            if (isNaN(value.getTime())) {\r\n                value = null;\r\n            } else {\r\n                // cut off local timezone\r\n                value = new Date(value.toDateString() + \" 00:00:00 GMT\");\r\n            }\r\n        } else {\r\n            value = null;\r\n        }\r\n        // update ui\r\n        this._datePickerValue = value;\r\n        super.setValue(value);\r\n        if (!this._initialValueSet) {\r\n            this._datePickerInitialValue = value;\r\n            this._initialValueSet = true;\r\n        }\r\n    }\r\n\r\n    public updateValueFromGui(value: Date) {\r\n        if (value != null && isNaN(value.getDate())) {\r\n            value = null;\r\n        }\r\n        if (value != null) {\r\n            this.setValue(value);\r\n            this._datePickerValue = this.value;\r\n        }\r\n    }\r\n}\r\n","import {FormField} from \"../form-field\";\r\n\r\nexport class Radio extends FormField {\r\n    private _key: string;\r\n\r\n    get key(): string {\r\n        return this._key;\r\n    }\r\n\r\n    set key(value: string) {\r\n        this._key = value;\r\n    }\r\n}\r\n","import {Component, Input, Output} from \"@angular/core\";\r\nimport {Radio} from \"./radio\";\r\nimport {ValueField} from \"../value-field\";\r\n\r\n@Component({\r\n    selector: \"path-radio-group\",\r\n    templateUrl: \"radio-group.component.html\"\r\n})\r\nexport class RadioGroupComponent {\r\n    @Input(\"field\")\r\n    @Output(\"field\")\r\n    field: RadioGroupField;\r\n}\r\n\r\nexport class RadioGroupField extends ValueField<string> {\r\n    private _radios: Radio[] = [];\r\n    private _horizontal: boolean;\r\n\r\n    get radios(): Radio[] {\r\n        return this._radios;\r\n    }\r\n\r\n    set radios(value: Radio[]) {\r\n        this._radios = value;\r\n    }\r\n\r\n    get horizontal(): boolean {\r\n        return this._horizontal;\r\n    }\r\n\r\n    set horizontal(value: boolean) {\r\n        this._horizontal = value;\r\n    }\r\n\r\n    public setValue(value: string) {\r\n        if (value != null) {\r\n            value = value.toString();\r\n        }\r\n        super.setValue(value);\r\n    }\r\n\r\n    public updateValueFromGui(value: string) {\r\n        this.setValue(value.toString());\r\n    }\r\n\r\n    public isReadonly() {\r\n        return super.isReadonly() && this.isInitialValueSet;\r\n    }\r\n\r\n    public fromJson(modelFormField) {\r\n        super.fromJson(modelFormField);\r\n        this._horizontal = true;\r\n        if (modelFormField[\"alignment\"] != null) {\r\n            if (modelFormField[\"alignment\"] === \"vertical\") {\r\n                this._horizontal = false;\r\n            }\r\n        }\r\n        if (modelFormField[\"radios\"] != null) {\r\n            for (const radioModel of modelFormField[\"radios\"]) {\r\n                const radio = new Radio(this.getForm(), this.translationService);\r\n                radio.name = radioModel.name;\r\n                radio.key = radioModel.key;\r\n                if (radio.key === modelFormField[\"defaultKey\"]) {\r\n                    this.setValue(radio.key);\r\n                }\r\n                this.radios.push(radio);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import {Component, Input, Output} from \"@angular/core\";\r\nimport {ValueField} from \"../value-field\";\r\n\r\n@Component({\r\n    selector: \"path-checkbox-group\",\r\n    templateUrl: \"checkbox-group.component.html\"\r\n})\r\nexport class CheckboxGroupComponent {\r\n    @Input(\"field\")\r\n    @Output(\"field\")\r\n    field: CheckboxGroupField;\r\n}\r\n\r\nexport class CheckboxGroupField extends ValueField<any[]> {\r\n    private _entries: CheckboxGroupEntry[] = [];\r\n\r\n    get entries(): CheckboxGroupEntry[] {\r\n        return this._entries;\r\n    }\r\n\r\n    set entries(value: CheckboxGroupEntry[]) {\r\n        this._entries = value;\r\n    }\r\n\r\n    public doClick() {\r\n        const values: any[] = [];\r\n        for (const entry of this.entries) {\r\n            if (entry.selected) {\r\n                values.push(entry.key);\r\n            }\r\n        }\r\n        this.setValue(values);\r\n    }\r\n\r\n    public setValue(values: any[]) {\r\n        super.setValue(values);\r\n        for (const entry of this.entries) {\r\n            entry.selected = false;\r\n        }\r\n        for (const value of values) {\r\n            for (const entry of this.entries) {\r\n                if (entry.key === value) {\r\n                    entry.selected = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public fromJson(modelFormField) {\r\n        super.fromJson(modelFormField);\r\n        for (const entryModel of modelFormField[\"data\"]) {\r\n            const entry = new CheckboxGroupEntry();\r\n            entry.name = entryModel.name;\r\n            entry.key = entryModel.key;\r\n            entry.selected = false;\r\n            this.entries.push(entry);\r\n        }\r\n    }\r\n}\r\n\r\nexport class CheckboxGroupEntry {\r\n    private _key: any;\r\n    private _name: string;\r\n    private _selected: boolean;\r\n\r\n    get key(): any {\r\n        return this._key;\r\n    }\r\n\r\n    set key(value: any) {\r\n        this._key = value;\r\n    }\r\n\r\n    get name(): string {\r\n        return this._name;\r\n    }\r\n\r\n    set name(value: string) {\r\n        this._name = value;\r\n    }\r\n\r\n    get selected(): boolean {\r\n        return this._selected;\r\n    }\r\n\r\n    set selected(value: boolean) {\r\n        this._selected = value;\r\n    }\r\n}\r\n","import {Component, Input} from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"path-form-field-label\",\r\n    templateUrl: \"form-field-label.component.html\"\r\n})\r\nexport class FormFieldLabelComponent {\r\n    @Input(\"label\")\r\n    label: string;\r\n\r\n    @Input(\"required\")\r\n    required: boolean;\r\n}\r\n\r\n","import {Component, Input, Output} from \"@angular/core\";\r\nimport {ValueField} from \"../value-field\";\r\n\r\n@Component({\r\n    selector: \"path-progress-bar\",\r\n    templateUrl: \"progress-bar.component.html\"\r\n})\r\nexport class ProgressBarComponent {\r\n    @Input(\"field\")\r\n    @Output(\"field\")\r\n    field: ProgressBarField;\r\n}\r\n\r\nexport class ProgressBarField extends ValueField<number> {\r\n\r\n    public fromJson(modelFormField) {\r\n        super.fromJson(modelFormField);\r\n        this.setValue(modelFormField[\"value\"]);\r\n    }\r\n\r\n}\r\n","import {Component, Input, Output} from \"@angular/core\";\r\nimport {ValueField} from \"../value-field\";\r\n\r\n@Component({\r\n    selector: \"path-label-field\",\r\n    templateUrl: \"label-field.component.html\"\r\n})\r\nexport class LabelFieldComponent {\r\n    @Input(\"field\")\r\n    @Output(\"field\")\r\n    field: LabelField;\r\n}\r\n\r\nexport class LabelField extends ValueField<string> {\r\n}\r\n","import {Component, Input, Output} from \"@angular/core\";\r\nimport {ValueField} from \"../value-field\";\r\n\r\n@Component({\r\n    selector: \"path-numberfield\",\r\n    templateUrl: \"number-field.component.html\"\r\n})\r\nexport class NumberFieldComponent {\r\n    @Input(\"field\")\r\n    @Output(\"field\")\r\n    field: NumberField;\r\n}\r\n\r\nexport class NumberField extends ValueField<number> {\r\n    private _min: number;\r\n    private _max: number;\r\n    private _digits: number;\r\n\r\n    get min(): number {\r\n        return this._min;\r\n    }\r\n\r\n    set min(value: number) {\r\n        this._min = value;\r\n    }\r\n\r\n    get max(): number {\r\n        return this._max;\r\n    }\r\n\r\n    set max(value: number) {\r\n        this._max = value;\r\n    }\r\n\r\n    get digits(): number {\r\n        return this._digits;\r\n    }\r\n\r\n    set digits(value: number) {\r\n        this._digits = value;\r\n    }\r\n\r\n    public getStep(): string {\r\n        if (this._digits == null) {\r\n            return \"\";\r\n        } else if (this._digits === 0) {\r\n            return \"0\";\r\n        }\r\n        // e.g. 3 => 0.001\r\n        let step = \"0.\";\r\n        for (let k = 0; k < this._digits - 1; k++) {\r\n            step = step + \"0\";\r\n        }\r\n        return step + \"1\";\r\n    }\r\n\r\n    public fromJson(modelFormField) {\r\n        super.fromJson(modelFormField);\r\n        if (modelFormField[\"min\"] != null) {\r\n            this.min = modelFormField[\"min\"];\r\n        }\r\n        if (modelFormField[\"max\"] != null) {\r\n            this.max = modelFormField[\"max\"];\r\n        }\r\n        if (modelFormField[\"digits\"] != null) {\r\n            this.digits = modelFormField[\"digits\"];\r\n        }\r\n    }\r\n}\r\n","import {FormField} from \"../form-field\";\r\nimport {IButtonHandler} from \"../../../pathinterface\";\r\n\r\nexport class OkButton extends FormField {\r\n    private _handler: IButtonHandler;\r\n\r\n    get handler(): IButtonHandler {\r\n        return this._handler;\r\n    }\r\n\r\n    set handler(value: IButtonHandler) {\r\n        this._handler = value;\r\n    }\r\n\r\n    public onClick() {\r\n        if (this._handler != null) {\r\n            this._handler.doClick(null); // TODO\r\n        }\r\n        // closing/saving is done in submit function on form component\r\n    }\r\n}\r\n","import {FormField} from \"../form-field\";\r\nimport {IButtonHandler} from \"../../../pathinterface\";\r\n\r\nexport class CancelButton extends FormField {\r\n    private _handler: IButtonHandler;\r\n\r\n    get handler(): IButtonHandler {\r\n        return this._handler;\r\n    }\r\n\r\n    set handler(value: IButtonHandler) {\r\n        this._handler = value;\r\n    }\r\n\r\n    public onClick() {\r\n        if (this._handler != null) {\r\n            this._handler.doClick(null); // TODO\r\n        }\r\n        this.form.close(false, false);\r\n    }\r\n\r\n}\r\n","import {Component, Input, Output} from \"@angular/core\";\r\nimport {ValueField} from \"../value-field\";\r\nimport {FormFunction} from \"../../form-function\";\r\nimport {Form} from \"../../form.component\";\r\nimport {OkButton} from \"../button/ok-button\";\r\nimport {CancelButton} from \"../button/cancel-button\";\r\nimport {PathService} from \"../../../service/path.service\";\r\nimport {TextField} from \"../text/text-field.component\";\r\nimport {TranslationService} from \"../../../service/translation.service\";\r\nimport {FocusUtility} from \"../../focus-utility\";\r\n\r\n@Component({\r\n    selector: \"path-translationfield\",\r\n    templateUrl: \"translation-field.component.html\"\r\n})\r\nexport class TranslationFieldComponent {\r\n    @Input(\"field\")\r\n    @Output(\"field\")\r\n    field: TranslationField;\r\n}\r\n\r\nexport class TranslationField extends ValueField<any[][]> {\r\n\r\n    private languages: string[];\r\n    private userLanguage: string;\r\n    private _defaultTranslation: string = null;\r\n    private _translationLabel: string;\r\n\r\n    constructor(form: Form, private pathService: PathService, public translationService: TranslationService) {\r\n        super(form, translationService);\r\n        this.userLanguage = translationService.getUserLanguage();\r\n        this.languages = translationService.getSupportedLanguageCodes();\r\n        const initialList: any[][] = [];\r\n        for (const language of this.languages) {\r\n            initialList.push([{\"key\": language}, \"\"]);\r\n        }\r\n        this.setValue(initialList);\r\n        this._translationLabel = translationService.getText(\"Translation\");\r\n    }\r\n\r\n    get defaultTranslation(): string {\r\n        return this._defaultTranslation;\r\n    }\r\n\r\n    set defaultTranslation(value: string) {\r\n        this._defaultTranslation = value;\r\n    }\r\n\r\n    get translationLabel(): string {\r\n        return this._translationLabel;\r\n    }\r\n\r\n    public setValue(value: any[][]) {\r\n        super.setValue(value);\r\n        this._defaultTranslation = this.getDefaultTranslation();\r\n    }\r\n\r\n    private getDefaultTranslation(): string {\r\n        if (this.value != null) {\r\n            for (const item of this.value) {\r\n                if (item[0] != null && item[0][\"key\"] === this.userLanguage) {\r\n                    return item[1];\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public editTranslations() {\r\n        const form: Form = new Form(this.pathService, this.form.getApp());\r\n        const translationFields: TextField[] = [];\r\n        form.title = this.name + \" \" + this.translationService.getText(\"Translations\");\r\n        form.formFunction = new FormFunction();\r\n        form.formFunction.save = (data: any) => {\r\n            const resultList: any[][] = [];\r\n            for (const field of translationFields) {\r\n                resultList.push([{\"key\": field.id}, field.value]);\r\n            }\r\n            this.setValue(resultList);\r\n            this.getForm().getApp().closeCurrentForm();\r\n        };\r\n        form.formFunction.cancel = () => {\r\n            this.getForm().getApp().closeCurrentForm();\r\n        };\r\n        const translations = this.value;\r\n        for (const key of translations) {\r\n            const textField: TextField = new TextField(form, this.translationService);\r\n            textField.type = \"text\";\r\n            textField.id = key[0][\"key\"];\r\n            textField.name = this.translationService.getText(key[0][\"key\"]);\r\n            textField.visible = true;\r\n            textField.newRow = true;\r\n            textField.width = 2;\r\n            textField.height = this.height;\r\n            textField.labelVisible = true;\r\n            textField.required = true;\r\n            textField.setValue(key[1]);\r\n            form.fields.push(textField);\r\n            translationFields.push(textField);\r\n        }\r\n\r\n        const cancelButton: CancelButton = new CancelButton(form, this.translationService);\r\n        cancelButton.type = \"cancelButton\";\r\n        cancelButton.name = this.translationService.getText(\"Cancel\");\r\n        cancelButton.visible = true;\r\n        form.fields.push(cancelButton);\r\n\r\n        const okButton: OkButton = new OkButton(form, this.translationService);\r\n        okButton.type = \"okButton\";\r\n        okButton.name = this.translationService.getText(\"Ok\");\r\n        okButton.visible = true;\r\n        form.fields.push(okButton);\r\n\r\n        form.updateRows();\r\n\r\n        this.form.getApp()[\"_formStack\"].push(form); // TODO\r\n        FocusUtility.focusFirstField(form);\r\n    }\r\n\r\n}\r\n\r\nexport class TranslationEntry {\r\n    private _text: string;\r\n    private _code: string;\r\n\r\n    get text(): string {\r\n        return this._text;\r\n    }\r\n\r\n    set text(value: string) {\r\n        this._text = value;\r\n    }\r\n\r\n    get code(): string {\r\n        return this._code;\r\n    }\r\n\r\n    set code(value: string) {\r\n        this._code = value;\r\n    }\r\n}\r\n","import {Directive, ElementRef, HostListener, Input, OnInit} from \"@angular/core\";\r\n\r\n// Initially by https://github.com/cedvdb/ng2draggable\r\n// MIT License: https://github.com/cedvdb/ng2draggable/blob/master/LICENSE\r\n\r\n@Directive({\r\n    selector: \"[path-draggable]\"\r\n})\r\nexport class DraggableDirective implements OnInit {\r\n    topStart = 0;\r\n    leftStart = 0;\r\n    _allowDrag = true;\r\n    md: boolean;\r\n\r\n    constructor(public element: ElementRef) {\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n        // draggable only for desktop version (styles for desktop are added when innerWidth>1100)\r\n        if (window.innerWidth < 768) {\r\n            this._allowDrag = false;\r\n        }\r\n        // css changes\r\n        if (this._allowDrag) {\r\n            this.element.nativeElement.style.position = \"relative\";\r\n            this.element.nativeElement.className += \" cursor-draggable\";\r\n        }\r\n\r\n    }\r\n\r\n    @Input(\"path-draggable\")\r\n    set allowDrag(value: boolean) {\r\n        this._allowDrag = value;\r\n        if (this._allowDrag) {\r\n            this.element.nativeElement.className += \" cursor-draggable\";\r\n        } else {\r\n            this.element.nativeElement.className = this.element.nativeElement.className.replace(\" cursor-draggable\", \"\");\r\n        }\r\n    }\r\n\r\n    @HostListener(\"mousedown\", [\"$event\"])\r\n    onMouseDown(event: MouseEvent) {\r\n        const eventTargetTag: string = event.target[\"tagName\"].toLowerCase();\r\n        if (eventTargetTag === \"input\" || eventTargetTag === \"button\" || eventTargetTag === \"textarea\") {\r\n            return;\r\n        }\r\n        if (event.button === 2) {\r\n            return; // prevents right click drag, remove his if you don't want it\r\n        }\r\n        this.md = true;\r\n        this.topStart = event.clientY - this.element.nativeElement.style.top.replace(\"px\", \"\");\r\n        this.leftStart = event.clientX - this.element.nativeElement.style.left.replace(\"px\", \"\");\r\n    }\r\n\r\n    @HostListener(\"document:mouseup\")\r\n    onMouseUp(event: MouseEvent) {\r\n        this.md = false;\r\n    }\r\n\r\n    @HostListener(\"document:mousemove\", [\"$event\"])\r\n    onMouseMove(event: MouseEvent) {\r\n        if (this.md && this._allowDrag) {\r\n            this.element.nativeElement.style.top = (event.clientY - this.topStart) + \"px\";\r\n            this.element.nativeElement.style.left = (event.clientX - this.leftStart) + \"px\";\r\n        }\r\n    }\r\n\r\n    @HostListener(\"touchstart\", [\"$event\"])\r\n    onTouchStart(event: any) { // TouchEvent\r\n        this.md = true;\r\n        this.topStart = event.changedTouches[0].clientY - this.element.nativeElement.style.top.replace(\"px\", \"\");\r\n        this.leftStart = event.changedTouches[0].clientX - this.element.nativeElement.style.left.replace(\"px\", \"\");\r\n        event.stopPropagation();\r\n    }\r\n\r\n    @HostListener(\"document:touchend\")\r\n    onTouchEnd() {\r\n        this.md = false;\r\n    }\r\n\r\n    @HostListener(\"document:touchmove\", [\"$event\"])\r\n    onTouchMove(event: any) { // TouchEvent\r\n        if (this.md && this._allowDrag) {\r\n            this.element.nativeElement.style.top = (event.changedTouches[0].clientY - this.topStart) + \"px\";\r\n            this.element.nativeElement.style.left = (event.changedTouches[0].clientX - this.leftStart) + \"px\";\r\n        }\r\n        event.stopPropagation();\r\n    }\r\n}\r\n","export class StringUtility {\r\n\r\n    public static isEmpty(str: string): boolean {\r\n        return (!str || 0 === str.length);\r\n    }\r\n\r\n}\r\n","export class ButtonDetail {\r\n    private _text: string;\r\n\r\n    get text(): string {\r\n        return this._text;\r\n    }\r\n\r\n    set text(value: string) {\r\n        this._text = value;\r\n    }\r\n}\r\n","import {StringUtility} from \"./string-utility\";\r\n\r\nexport class ColorUtility {\r\n\r\n    private static colors = [\r\n        \"blue\",\r\n        \"green\",\r\n        \"search\",\r\n        \"red\",\r\n        \"yellow\",\r\n        \"orange\",\r\n        \"pink\",\r\n        \"purple\",\r\n        \"lime\",\r\n        \"magenta\",\r\n        \"teal\",\r\n        \"turquoise\",\r\n        \"green-sea\",\r\n        \"emerald\",\r\n        \"nephritis\",\r\n        \"peter-river\",\r\n        \"belize-hole\",\r\n        \"amethyst\",\r\n        \"wisteria\",\r\n        \"wet-asphalt\",\r\n        \"midnight-blue\",\r\n        \"sun-flower\",\r\n        \"carrot\",\r\n        \"pumpkin\",\r\n        \"alizarin\",\r\n        \"pomegranate\",\r\n        \"clouds\",\r\n        \"silver\",\r\n        \"concrete\",\r\n        \"asbestos\",\r\n        \"info\",\r\n        \"danger\",\r\n        \"warning\",\r\n        \"success\"\r\n    ];\r\n\r\n    public static isPathDefaultColor(color: string): boolean {\r\n        return this.colors.indexOf(color) > 0;\r\n    }\r\n\r\n}\r\n","import {Key, PageElement} from \"../page-element\";\r\nimport {PathService} from \"../../../service/path.service\";\r\nimport {IButton, IButtonHandler, IPathApp} from \"../../../pathinterface\";\r\nimport {Input, Output, Component} from \"@angular/core\";\r\nimport {TranslationService} from \"../../../service/translation.service\";\r\nimport {KeyUtility} from \"../../../utility/key-utility\";\r\nimport {ButtonDetail} from \"./button-detail\";\r\nimport {StringUtility} from \"../../../utility/string-utility\";\r\nimport {ColorUtility} from \"../../../utility/color-utility\";\r\n\r\n@Component({\r\n    selector: \"path-button\",\r\n    templateUrl: \"button.component.html\"\r\n})\r\nexport class ButtonComponent {\r\n    @Input(\"button\")\r\n    @Output(\"button\")\r\n    button: Button;\r\n}\r\n\r\nexport class Button extends PageElement implements IButton {\r\n    private _icon: string;\r\n    private _cssStyle: Object;\r\n    private _cssClass: string;\r\n    private _cssButtonTarget: boolean;\r\n    private _cssGroupBorder: string;\r\n    private _handler: IButtonHandler;\r\n    private _details: ButtonDetail[] = [];\r\n    private _tooltip: string;\r\n\r\n    // TODO refactor prototype stuff\r\n    private _url: string;\r\n    private _page: string;\r\n    private _form: string;\r\n    private _formHandler: string;\r\n\r\n    constructor(app: IPathApp, protected pathService: PathService, protected translationService: TranslationService) {\r\n        super(app);\r\n    }\r\n\r\n    public onClick() {\r\n        if (this._handler != null) {\r\n            this._handler.doClick(this);\r\n            return;\r\n        }\r\n\r\n        if (!StringUtility.isEmpty(this._url)) {\r\n            this.pathService.serverGet(this.app.getBackendUrl(), this._url, () => {\r\n                this.app.refreshCurrentPage();\r\n            }, null);\r\n        }\r\n\r\n        if (!StringUtility.isEmpty(this._page)) {\r\n            this.app.setCurrentPage(this._page, this);\r\n            return;\r\n        }\r\n\r\n        if (!StringUtility.isEmpty(this._form)) {\r\n            this.app.setCurrentForm(this._form, this.key, this._formHandler, this);\r\n            return;\r\n        }\r\n    }\r\n\r\n    public setIcon(icon: string) {\r\n        this.icon = icon;\r\n    }\r\n\r\n    public setForm(form: string) {\r\n        this.form = form;\r\n    }\r\n\r\n    public setFormHandler(formHandler: string) {\r\n        this.formHandler = formHandler;\r\n    }\r\n\r\n    public setPage(page: string) {\r\n        this.page = page;\r\n    }\r\n\r\n    public setKey(key: Key) {\r\n        this.key = key;\r\n    }\r\n\r\n    public getApp() {\r\n        return this.app;\r\n    }\r\n\r\n    public getName() {\r\n        return this.name;\r\n    }\r\n\r\n    get icon(): string {\r\n        return this._icon;\r\n    }\r\n\r\n    set icon(value: string) {\r\n        this._icon = value;\r\n    }\r\n\r\n    get cssStyle(): Object {\r\n        return this._cssStyle;\r\n    }\r\n\r\n    get cssClass(): string {\r\n        return this._cssClass;\r\n    }\r\n\r\n    get cssButtonTarget(): boolean {\r\n        return this._cssButtonTarget;\r\n    }\r\n\r\n    get cssGroupBorder(): string {\r\n        return this._cssGroupBorder;\r\n    }\r\n\r\n    set cssGroupBorder(value: string) {\r\n        this._cssGroupBorder = value;\r\n    }\r\n\r\n    get handler(): IButtonHandler {\r\n        return this._handler;\r\n    }\r\n\r\n    set handler(value: IButtonHandler) {\r\n        this._handler = value;\r\n    }\r\n\r\n    get details(): ButtonDetail[] {\r\n        return this._details;\r\n    }\r\n\r\n    set details(value: ButtonDetail[]) {\r\n        this._details = value;\r\n    }\r\n\r\n    get page(): string {\r\n        return this._page;\r\n    }\r\n\r\n    set page(value: string) {\r\n        this._page = value;\r\n    }\r\n\r\n    get form(): string {\r\n        return this._form;\r\n    }\r\n\r\n    set form(value: string) {\r\n        this._form = value;\r\n    }\r\n\r\n    get formHandler(): string {\r\n        return this._formHandler;\r\n    }\r\n\r\n    set formHandler(value: string) {\r\n        this._formHandler = value;\r\n    }\r\n\r\n    get url(): string {\r\n        return this._url;\r\n    }\r\n\r\n    set url(value: string) {\r\n        this._url = value;\r\n    }\r\n\r\n    get tooltip(): string {\r\n        return this._tooltip;\r\n    }\r\n\r\n    set tooltip(value: string) {\r\n        this._tooltip = value;\r\n    }\r\n\r\n    public fromJson(modelElement) {\r\n        super.fromJson(modelElement);\r\n\r\n        // general attributes\r\n        this.type = \"button\";\r\n        this.setIcon(modelElement[\"icon\"]);\r\n        if (modelElement[\"color\"] != null) {\r\n            const color = modelElement[\"color\"];\r\n            if (typeof color === \"object\") {\r\n                this._cssStyle = color;\r\n            } else if (typeof color === \"string\") {\r\n                if (ColorUtility.isPathDefaultColor(color)) {\r\n                    this._cssClass = \"tile-\" + color;\r\n                } else {\r\n                    this._cssClass = color;\r\n                }\r\n            }\r\n        }\r\n        if (modelElement[\"form\"] != null) {\r\n            this.setForm(modelElement[\"form\"][\"form\"]);\r\n            this.setFormHandler(modelElement[\"form\"][\"handler\"]);\r\n        }\r\n        this.setPage(modelElement[\"page\"]);\r\n        if (this.key == null && this.parentPageElement != null && modelElement.type === \"button\") {\r\n            this.key = this.parentPageElement.key;\r\n        }\r\n        this.name = this.translationService.getText(modelElement[\"name\"]);\r\n        this.url = KeyUtility.translateUrl(modelElement[\"url\"], null, false, this);\r\n        if (modelElement[\"tooltip\"] != null) {\r\n            this.tooltip = this.translationService.getText(modelElement[\"tooltip\"]);\r\n        }\r\n        // button details\r\n        if (modelElement[\"details\"] != null) {\r\n            this.details = [];\r\n            for (const detail of modelElement[\"details\"]) {\r\n                const bd: ButtonDetail = new ButtonDetail();\r\n                bd.text = detail;\r\n                this.details.push(bd);\r\n            }\r\n        }\r\n        // button target\r\n        this._cssButtonTarget = true;\r\n        if (this.type === \"button\") {\r\n            if (StringUtility.isEmpty(this.form) && StringUtility.isEmpty(this.page) && StringUtility.isEmpty(this.url)) {\r\n                this._cssButtonTarget = false;\r\n            }\r\n        }\r\n    }\r\n}\r\n","import {Component, Input, Output} from \"@angular/core\";\r\nimport {IPathApp} from \"../../../pathinterface\";\r\nimport {PathService} from \"../../../service/path.service\";\r\nimport {TranslationService} from \"../../../service/translation.service\";\r\nimport {StringUtility} from \"../../../utility/string-utility\";\r\nimport {Button} from \"./button.component\";\r\n\r\n@Component({\r\n    selector: \"path-back-button\",\r\n    templateUrl: \"back-button.component.html\"\r\n})\r\nexport class BackButtonComponent {\r\n    @Input(\"button\")\r\n    @Output(\"button\")\r\n    button: BackButton;\r\n}\r\n\r\nexport class BackButton extends Button {\r\n\r\n    constructor(app: IPathApp, pathService: PathService, translationService: TranslationService) {\r\n        super(app, pathService, translationService);\r\n    }\r\n\r\n    public onClick() {\r\n        this.app.navigateBack();\r\n    }\r\n\r\n    public fromJson(modelElement) {\r\n        if (StringUtility.isEmpty(modelElement[\"color\"])) {\r\n            modelElement[\"color\"] = \"silver\";\r\n        }\r\n        super.fromJson(modelElement);\r\n        this.type = \"backbutton\";\r\n        this.name = this.translationService.getText(\"Back\");\r\n    }\r\n\r\n}\r\n","import {Button} from \"./button.component\";\r\nimport {PathService} from \"../../../service/path.service\";\r\nimport {IPathApp} from \"../../../pathinterface\";\r\nimport {Component, Input, Output} from \"@angular/core\";\r\nimport {TranslationService} from \"../../../service/translation.service\";\r\nimport {KeyUtility} from \"../../../utility/key-utility\";\r\n\r\n@Component({\r\n    selector: \"path-link-button\",\r\n    templateUrl: \"link-button.component.html\"\r\n})\r\nexport class LinkButtonComponent {\r\n    @Input(\"button\")\r\n    @Output(\"button\")\r\n    button: LinkButton;\r\n}\r\n\r\nexport class LinkButton extends Button {\r\n\r\n    constructor(app: IPathApp, pathService: PathService, translationService: TranslationService) {\r\n        super(app, pathService, translationService);\r\n    }\r\n\r\n    public onClick() {\r\n        let url: string = null;\r\n        if (this.url.startsWith(\"/\")) {\r\n            // local relative url\r\n            url = this.getApp().getBackendUrl() + this.url + \"?token=\" + sessionStorage.getItem(\"pathAppId\");\r\n        } else {\r\n            // remote absolute url\r\n            url = this.url;\r\n        }\r\n        window.location.assign(url);\r\n    }\r\n\r\n    public fromJson(modelElement) {\r\n        super.fromJson(modelElement);\r\n        this.type = \"linkButton\";\r\n        this.url = KeyUtility.translateUrl(modelElement[\"url\"], null, false, this.parentPageElement);\r\n    }\r\n}\r\n","import {Button} from \"./button.component\";\r\nimport {PathService} from \"../../../service/path.service\";\r\nimport {IPathApp} from \"../../../pathinterface\";\r\nimport {TranslationService} from \"../../../service/translation.service\";\r\nimport {Output, Input, Component} from \"@angular/core\";\r\nimport {KeyUtility} from \"../../../utility/key-utility\";\r\n\r\n@Component({\r\n    selector: \"path-page-delete-button\",\r\n    templateUrl: \"page-delete-button.component.html\"\r\n})\r\nexport class PageDeleteButtonComponent {\r\n    @Input(\"button\")\r\n    @Output(\"button\")\r\n    button: PageDeleteButton;\r\n}\r\n\r\nexport class PageDeleteButton extends Button {\r\n\r\n    constructor(app: IPathApp, pathService: PathService, translationService: TranslationService) {\r\n        super(app, pathService, translationService);\r\n        this.name = translationService.getText(\"Delete\");\r\n    }\r\n\r\n    public onClick() {\r\n        this.getApp().yesNo(this.translationService.getText(\"DeleteWarningQuestion\"), () => {\r\n            this.pathService.serverDelete(this.getApp().getBackendUrl(), this.url, () => {\r\n                this.getApp().navigateBack();\r\n                this.getApp().refreshCurrentPage();\r\n            });\r\n        }, () => {\r\n        });\r\n    }\r\n\r\n    public fromJson(modelElement) {\r\n        super.fromJson(modelElement);\r\n        this.type = \"deleteButton\";\r\n        this.url = KeyUtility.translateUrl(modelElement[\"url\"], null, false, this.parentPageElement);\r\n    }\r\n}\r\n","import {IPathApp} from \"../../../pathinterface\";\r\nimport {TranslationService} from \"../../../service/translation.service\";\r\nimport {PathService} from \"../../../service/path.service\";\r\nimport {Component, Input, Output} from \"@angular/core\";\r\nimport {PageElement} from \"../page-element\";\r\n\r\n@Component({\r\n    selector: \"path-page-label\",\r\n    templateUrl: \"page-label.component.html\"\r\n})\r\nexport class PageLabelComponent {\r\n    @Input(\"pageLabel\")\r\n    @Output(\"pageLabel\")\r\n    pageLabel: PageLabel;\r\n}\r\n\r\nexport class PageLabel extends PageElement {\r\n\r\n    private _value: string;\r\n\r\n    constructor(app: IPathApp, pathService: PathService, translationService: TranslationService) {\r\n        super(app);\r\n    }\r\n\r\n    get value(): string {\r\n        return this._value;\r\n    }\r\n\r\n    public onClick() {\r\n        this.app.navigateBack();\r\n    }\r\n\r\n    public fromJson(modelElement) {\r\n        super.fromJson(modelElement);\r\n        this.type = \"pageLabel\";\r\n        if (modelElement[\"value\"] != null) {\r\n            this._value = modelElement[\"value\"];\r\n        }\r\n    }\r\n}\r\n","import {IButton, IButtonHandler, IList, IListHandler, IPathApp} from \"../../../pathinterface\";\r\nimport {PathService} from \"../../../service/path.service\";\r\nimport {AfterViewInit, Component, Input, Output} from \"@angular/core\";\r\nimport {ButtonGroup} from \"../button-group/button-group.component\";\r\nimport {PageElement} from \"../page-element\";\r\nimport {TranslationService} from \"../../../service/translation.service\";\r\nimport {KeyUtility} from \"../../../utility/key-utility\";\r\nimport {Button} from \"../button/button.component\";\r\nimport {FocusUtility} from \"../../../form/focus-utility\";\r\nimport {Subject} from \"rxjs\";\r\nimport {debounceTime} from \"rxjs/operators\";\r\n\r\n@Component({\r\n    selector: \"path-list\",\r\n    templateUrl: \"list.component.html\"\r\n})\r\nexport class ListComponent implements AfterViewInit {\r\n    @Input(\"list\")\r\n    @Output(\"list\")\r\n    list: List;\r\n\r\n    ngAfterViewInit() {\r\n        FocusUtility.focusFirstField(null);\r\n    }\r\n}\r\n\r\nexport class List extends PageElement implements IList {\r\n    private _buttonGroups: ButtonGroup[] = [];\r\n    private _search: boolean;\r\n    private _limit: number;\r\n    private _searchRequired: boolean;\r\n    private _searchRequest: boolean;\r\n    private _searchLabel: string;\r\n    private _searchInputLabel: string;\r\n    private _searchText: string;\r\n    private _searchTextChanged: Subject<string> = new Subject<string>();\r\n    private _searchButton: Button;\r\n    private _handler: IListHandler;\r\n    private _buttonHandler: IButtonHandler;\r\n    private _icon: string;\r\n    private _color: string;\r\n    private _form: string;\r\n    private _formHandler: string;\r\n    private _page: string;\r\n    private _mockData: any;\r\n    private _url: string;\r\n\r\n    constructor(app: IPathApp, private pathService: PathService, private translationService: TranslationService) {\r\n        super(app);\r\n        this._searchLabel = translationService.getText(\"Search\");\r\n        this._searchInputLabel = translationService.getText(\"SearchInputLabel\");\r\n        this._searchButton = new Button(app, pathService, translationService);\r\n    }\r\n\r\n    public getContent(): IButton[] {\r\n        const buttons: Button[] = [];\r\n        for (const buttonGroup of this.buttonGroups) {\r\n            buttons.push(...buttonGroup.buttons);\r\n        }\r\n        return buttons;\r\n    }\r\n\r\n    public refresh(searchText: string, afterRefreshHandler: () => void) {\r\n        // callback function for data\r\n        console.log(\"refresh list (searchText: \" + searchText + \")\");\r\n        const dataHandler = (data: any) => {\r\n            this.buttonGroups = [];\r\n            for (const item of data) {\r\n                // create button group and buttons\r\n                // set default types if server does not set type (button or buttonGroup)\r\n                const itemIsButtonGroup: boolean = item.hasOwnProperty(\"buttons\");\r\n                if (itemIsButtonGroup) {\r\n                    item[\"type\"] = \"buttonGroup\";\r\n                    for (const button of item.buttons) {\r\n                        if (button[\"type\"] == null) {\r\n                            button[\"type\"] = \"button\";\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (item[\"type\"] == null) {\r\n                        item[\"type\"] = \"button\";\r\n                    }\r\n                }\r\n                const pageElements = this.app.createPageElement(item, this.parentPageElement, null);\r\n                if (pageElements.length !== 1) {\r\n                    console.log(\"error creating button group from: \");\r\n                    console.log(item);\r\n                } else {\r\n                    const buttonGroup = <ButtonGroup>pageElements[0];\r\n                    let buttonCounter = 0;\r\n                    for (const button of buttonGroup.buttons) {\r\n                        button.listElement = true;\r\n\r\n                        // model is either simple button or button of a group\r\n                        let buttonModel = item;\r\n                        if (itemIsButtonGroup) {\r\n                            buttonModel = item.buttons[buttonCounter];\r\n                        }\r\n\r\n                        // build button from json\r\n                        // use list defaults if button does not specify model\r\n                        if (buttonModel[\"icon\"] == null) {\r\n                            buttonModel[\"icon\"] = this.icon;\r\n                        }\r\n                        if (buttonModel[\"color\"] == null) {\r\n                            buttonModel[\"color\"] = this.color;\r\n                        }\r\n                        if (buttonModel[\"page\"] == null && (buttonModel[\"form\"] == null || buttonModel[\"form\"][\"form\"] == null)) {\r\n                            // service does not return page or form, use static model\r\n                            if (this.page != null) {\r\n                                buttonModel[\"page\"] = this.page;\r\n                            }\r\n                            if (this.form != null) {\r\n                                buttonModel[\"form\"] = {};\r\n                                buttonModel.form[\"form\"] = this.form;\r\n                                buttonModel.form[\"handler\"] = this.formHandler;\r\n                            }\r\n                        }\r\n                        // special default width (2 instead of 1) for buttons in list\r\n                        if (buttonModel[\"width\"] == null) {\r\n                            buttonModel[\"width\"] = this.width;\r\n                        }\r\n                        button.fromJson(buttonModel);\r\n\r\n                        // special values for list buttons\r\n                        button.handler = this._buttonHandler;\r\n                        button.name = buttonModel.name; // no translation\r\n                        button.tooltip = buttonModel.tooltip; // no translation\r\n                        buttonCounter++;\r\n                    }\r\n                    this.buttonGroups.push(buttonGroup);\r\n                }\r\n            }\r\n            if (this.handler != null) {\r\n                this.handler.doLoad(this); // TODO useful?\r\n            }\r\n            // refresh search\r\n            this.filterVisibleButtonGroups();\r\n            if (this.limit) {\r\n                this.setSearchResultsCountMessage();\r\n            }\r\n            if (afterRefreshHandler != null) {\r\n                window.setTimeout(() => {\r\n                    afterRefreshHandler();\r\n                }, 1);\r\n            }\r\n        };\r\n        const listHandlerDoLoad = (list: IList) => (data: any) => dataHandler(data);\r\n        // backend data\r\n        if (this._url != null) {\r\n            let urlParameters = \"\";\r\n            if (this.searchRequest || this.limit) {\r\n                urlParameters = \"?search=\" + (searchText == null ? \"\" : encodeURI(searchText)) + \"&limit=\" + this.limit;\r\n            }\r\n            this.pathService.serverGet(this.app.getBackendUrl(), this.url + urlParameters, listHandlerDoLoad(this), null);\r\n        }\r\n        // mock data\r\n        if (this._mockData != null) {\r\n            let count = 0;\r\n            // fake a key for mock data\r\n            for (const mock of this.mockData) {\r\n                count++;\r\n                if (mock[\"key\"] == null) {\r\n                    mock[\"key\"] = count;\r\n                }\r\n            }\r\n            dataHandler(this.mockData);\r\n        }\r\n    }\r\n\r\n    public filterChanged(text: string) {\r\n        this._searchTextChanged.next(text);\r\n    }\r\n\r\n    public filter() {\r\n        this._searchLabel = this.translationService.getText(\"Search\");\r\n        if (this._searchText && this._searchText === \"*\") {\r\n            this.refresh(null, null);\r\n        } else if (this.searchRequest) {\r\n            // call server to filter data\r\n            if (!this._searchText && this.searchRequired) {\r\n                this._buttonGroups = [];\r\n            } else if (this._searchText === \"*\" || (!this._searchText && !this.searchRequired)) {\r\n                this.refresh(null, null);\r\n            } else if (this._searchText && this._searchText.length >= 2) {\r\n                this.refresh(this._searchText, null);\r\n            } else {\r\n                this._searchLabel = this.translationService.getText(\"SearchTextTooShort\");\r\n                this._buttonGroups = [];\r\n            }\r\n        } else {\r\n            // filter loaded data only\r\n            this.filterVisibleButtonGroups();\r\n        }\r\n    }\r\n\r\n    private filterVisibleButtonGroups() {\r\n        const searchText: string = this._searchText ? this._searchText.toLowerCase() : \"\";\r\n        for (const buttonGroup of this._buttonGroups) {\r\n            if (searchText.length <= 0) {\r\n                buttonGroup.visible = true;\r\n            } else {\r\n                buttonGroup.visible = false;\r\n                for (const button of buttonGroup.buttons) {\r\n                    if (!buttonGroup.visible) {\r\n                        buttonGroup.visible = button.name.toLowerCase().indexOf(searchText) !== -1;\r\n                        if (!buttonGroup.visible) {\r\n                            for (const detail of button.details) {\r\n                                if (detail.text.toLowerCase().indexOf(searchText) !== -1) {\r\n                                    buttonGroup.visible = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.visibleItemSize() !== this.buttonGroups.length) {\r\n            this.setSearchResultsCountMessage();\r\n        }\r\n    }\r\n\r\n    private setSearchResultsCountMessage() {\r\n        this._searchLabel = this.visibleItemSize() + \" \" +\r\n            (this.visibleItemSize() === 1 ? this.translationService.getText(\"Result\") : this.translationService.getText(\"Results\"));\r\n    }\r\n\r\n    private visibleItemSize(): number {\r\n        let result = 0;\r\n        for (const buttonGroup of this.buttonGroups) {\r\n            if (buttonGroup.visible) {\r\n                for (const button of buttonGroup.buttons) {\r\n                    if (button.visible) {\r\n                        result++;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    get buttonGroups(): ButtonGroup[] {\r\n        return this._buttonGroups;\r\n    }\r\n\r\n    set buttonGroups(value: ButtonGroup[]) {\r\n        this._buttonGroups = value;\r\n    }\r\n\r\n    get search(): boolean {\r\n        return this._search;\r\n    }\r\n\r\n    set search(value: boolean) {\r\n        this._search = value;\r\n    }\r\n\r\n    get handler(): IListHandler {\r\n        return this._handler;\r\n    }\r\n\r\n    set handler(value: IListHandler) {\r\n        this._handler = value;\r\n    }\r\n\r\n    get buttonHandler(): IButtonHandler {\r\n        return this._buttonHandler;\r\n    }\r\n\r\n    set buttonHandler(value: IButtonHandler) {\r\n        this._buttonHandler = value;\r\n    }\r\n\r\n    get icon(): string {\r\n        return this._icon;\r\n    }\r\n\r\n    set icon(value: string) {\r\n        this._icon = value;\r\n    }\r\n\r\n    get color(): string {\r\n        return this._color;\r\n    }\r\n\r\n    set color(value: string) {\r\n        this._color = value;\r\n    }\r\n\r\n    get form(): string {\r\n        return this._form;\r\n    }\r\n\r\n    set form(value: string) {\r\n        this._form = value;\r\n    }\r\n\r\n    get formHandler(): string {\r\n        return this._formHandler;\r\n    }\r\n\r\n    set formHandler(value: string) {\r\n        this._formHandler = value;\r\n    }\r\n\r\n    get page(): string {\r\n        return this._page;\r\n    }\r\n\r\n    set page(value: string) {\r\n        this._page = value;\r\n    }\r\n\r\n    get mockData(): any {\r\n        return this._mockData;\r\n    }\r\n\r\n    set mockData(value: any) {\r\n        this._mockData = value;\r\n    }\r\n\r\n    get url(): string {\r\n        return this._url;\r\n    }\r\n\r\n    set url(value: string) {\r\n        this._url = value;\r\n    }\r\n\r\n    get limit(): number {\r\n        return this._limit;\r\n    }\r\n\r\n    set limit(value: number) {\r\n        this._limit = value;\r\n    }\r\n\r\n    get searchRequired(): boolean {\r\n        return this._searchRequired;\r\n    }\r\n\r\n    get searchRequest(): boolean {\r\n        return this._searchRequest;\r\n    }\r\n\r\n    get searchText(): string {\r\n        return this._searchText;\r\n    }\r\n\r\n    get searchLabel(): string {\r\n        return this._searchLabel;\r\n    }\r\n\r\n    get searchInputLabel(): string {\r\n        return this._searchInputLabel;\r\n    }\r\n\r\n    set searchLabel(value: string) {\r\n        this._searchLabel = value;\r\n    }\r\n\r\n    set searchInputLabel(value: string) {\r\n        this._searchInputLabel = value;\r\n    }\r\n\r\n    set searchText(value: string) {\r\n        this._searchText = value;\r\n    }\r\n\r\n    get searchButton(): Button {\r\n        return this._searchButton;\r\n    }\r\n\r\n    public fromJson(modelElement) {\r\n        super.fromJson(modelElement);\r\n        if (modelElement[\"search\"] != null) {\r\n            this.search = modelElement[\"search\"];\r\n        }\r\n        if (modelElement[\"searchRequired\"] != null) {\r\n            this._searchRequired = modelElement[\"searchRequired\"];\r\n        }\r\n        if (modelElement[\"searchRequest\"] != null) {\r\n            this._searchRequest = modelElement[\"searchRequest\"];\r\n        }\r\n        if (modelElement[\"limit\"] != null) {\r\n            this.limit = modelElement[\"limit\"];\r\n        }\r\n        // verify valid search combinations\r\n        if (!this.search && this.searchRequired) {\r\n            console.log(\"Configuration Error: search=false requires searchRequired=false\");\r\n            this._searchRequired = false;\r\n        }\r\n        if (this.searchRequired && !this.searchRequest) {\r\n            console.log(\"Configuration Error: searchRequired=true requires searchRequest=true\");\r\n            this._searchRequest = true;\r\n        }\r\n        // other model attributes\r\n        if (modelElement[\"color\"] != null) {\r\n            this.color = modelElement[\"color\"];\r\n        }\r\n        if (modelElement[\"form\"] != null) {\r\n            this.form = modelElement[\"form\"][\"form\"];\r\n            this.formHandler = modelElement[\"form\"][\"handler\"];\r\n        }\r\n        if (modelElement[\"page\"] != null) {\r\n            this.page = modelElement[\"page\"];\r\n        }\r\n        if (modelElement[\"icon\"] != null) {\r\n            this.icon = modelElement[\"icon\"];\r\n        }\r\n        if (modelElement[\"data\"] != null) {\r\n            this.mockData = modelElement[\"data\"];\r\n        }\r\n        if (modelElement[\"name\"] != null) {\r\n            this.name = this.translationService.getText(modelElement[\"name\"]);\r\n        }\r\n        if (modelElement[\"url\"] != null) {\r\n            const urlString: string = modelElement[\"url\"];\r\n            this.url = KeyUtility.translateUrl(urlString, null, false, this);\r\n        }\r\n        // override from PageElement\r\n        if (modelElement[\"width\"] != null) {\r\n            this.width = modelElement[\"width\"];\r\n        } else {\r\n            this.width = 2; // special default for list\r\n        }\r\n        // search button\r\n        const searchButtonModel = {};\r\n        searchButtonModel[\"color\"] = modelElement[\"searchColor\"] != null ? modelElement[\"searchColor\"] : \"tile-search\";\r\n        searchButtonModel[\"width\"] = modelElement[\"searchWidth\"] != null ? modelElement[\"searchWidth\"] : this.width;\r\n        this._searchButton.fromJson(searchButtonModel);\r\n        // delay for search field\r\n        const debounceTimeValue: number = this.searchRequest ? 300 : 30;\r\n        this._searchTextChanged.pipe(\r\n            debounceTime(debounceTimeValue)) // wait after the last event before emitting last event\r\n            .subscribe(_searchText => {\r\n                this._searchText = _searchText;\r\n                this.filter();\r\n            });\r\n    }\r\n}\r\n","import { Directive, ViewContainerRef } from \"@angular/core\";\r\n\r\n@Directive({\r\n    selector: \"[path-custom-directive]\",\r\n})\r\nexport class CustomDirective {\r\n    constructor(public viewContainerRef: ViewContainerRef) { }\r\n}\r\n","import {Component, ComponentFactoryResolver, Input, OnDestroy, OnInit, ViewChild} from \"@angular/core\";\r\nimport {CustomDirective} from \"./custom.directive\";\r\nimport {CustomContainerPageElement} from \"./custom-container-page-element\";\r\nimport {PageElement} from \"../page-element\";\r\n\r\n@Component({\r\n    selector: \"path-custom-container-component\",\r\n    template: `\r\n        <ng-template path-custom-directive></ng-template>`\r\n})\r\n\r\nexport class CustomContainerComponent implements OnInit, OnDestroy {\r\n    @Input() pageElement: CustomContainerPageElement;\r\n    @ViewChild(CustomDirective, {static: true}) customDirective: CustomDirective;\r\n\r\n    constructor(private componentFactoryResolver: ComponentFactoryResolver) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.loadComponent();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n    }\r\n\r\n    loadComponent() {\r\n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.pageElement.typeClass);\r\n\r\n        const viewContainerRef = this.customDirective.viewContainerRef;\r\n        viewContainerRef.clear();\r\n\r\n        const componentRef = viewContainerRef.createComponent(componentFactory);\r\n        componentRef.instance.pageElement = this.pageElement;\r\n    }\r\n}\r\n\r\nexport class CustomPageElement {\r\n    private _pageElement: PageElement;\r\n\r\n    get pageElement(): PageElement {\r\n        return this._pageElement;\r\n    }\r\n\r\n    set pageElement(value: PageElement) {\r\n        this._pageElement = value;\r\n    }\r\n}\r\n","import {IPathApp} from \"../../../pathinterface\";\r\nimport {TranslationService} from \"../../../service/translation.service\";\r\nimport {PathService} from \"../../../service/path.service\";\r\nimport {Component, Input, Output} from \"@angular/core\";\r\nimport {PageElement} from \"../page-element\";\r\n\r\n@Component({\r\n    selector: \"path-element-list\",\r\n    templateUrl: \"element-list.component.html\"\r\n})\r\nexport class ElementListComponent {\r\n    @Input(\"elementList\")\r\n    @Output(\"elementList\")\r\n    elementList: ElementList;\r\n}\r\n\r\nexport class ElementList extends PageElement {\r\n\r\n    constructor(app: IPathApp, pathService: PathService, translationService: TranslationService) {\r\n        super(app);\r\n    }\r\n\r\n    public fromJson(modelElement) {\r\n        super.fromJson(modelElement);\r\n        this.type = \"elementList\";\r\n    }\r\n}\r\n","import {Component, Input} from \"@angular/core\";\r\nimport {PageElement} from \"../page-element\";\r\nimport {PathAppComponent} from \"../../../path-app.component\";\r\n\r\n@Component({\r\n    selector: \"path-breadcrumb\",\r\n    templateUrl: \"breadcrumb.component.html\"\r\n})\r\nexport class BreadcrumbComponent {\r\n    @Input(\"app\")\r\n    app;\r\n}\r\n\r\n// breadcrumb is a special element since it uses app directly\r\nexport class Breadcrumb extends PageElement {\r\n\r\n    public _pageStack;\r\n\r\n    constructor(app: PathAppComponent) {\r\n        super(app);\r\n    }\r\n\r\n}\r\n","import {NgModule, ModuleWithProviders, Injector} from \"@angular/core\";\r\nimport {BrowserModule} from \"@angular/platform-browser\";\r\nimport {HttpClientModule} from \"@angular/common/http\";\r\nimport {FormsModule} from \"@angular/forms\";\r\nimport {CommonModule} from \"@angular/common\";\r\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\r\nimport {FileUploadComponent} from \"./path-framework/form/field/file-upload/file-upload.component\";\r\nimport {FormComponent} from \"./path-framework/form/form.component\";\r\nimport {ButtonGroupComponent} from \"./path-framework/page/element/button-group/button-group.component\";\r\nimport {ChartComponent} from \"./path-framework/page/element/chart/chart.component\";\r\nimport {AutoCompleteComponent} from \"./path-framework/form/field/auto-complete/auto-complete-field.component\";\r\nimport {TextFieldComponent} from \"./path-framework/form/field/text/text-field.component\";\r\nimport {DateFieldComponent} from \"./path-framework/form/field/date/date-field.component\";\r\nimport {RadioGroupComponent} from \"./path-framework/form/field/radio/radio-group.component\";\r\nimport {CheckboxGroupComponent} from \"./path-framework/form/field/checkbox/checkbox-group.component\";\r\nimport {FormFieldLabelComponent} from \"./path-framework/form/field/form-field-label.component\";\r\nimport {ProgressBarComponent} from \"./path-framework/form/field/progress-bar/progress-bar.component\";\r\nimport {LabelFieldComponent} from \"./path-framework/form/field/label/label-field.component\";\r\nimport {FieldListFieldComponent} from \"./path-framework/form/field/fieldList/field-list-field.component\";\r\nimport {NumberFieldComponent} from \"./path-framework/form/field/number/number-field.component\";\r\nimport {TranslationFieldComponent} from \"./path-framework/form/field/translation/translation-field.component\";\r\nimport {BsDatepickerModule} from \"ngx-bootstrap/datepicker\";\r\nimport {TooltipModule} from \"ngx-bootstrap/tooltip\";\r\nimport {DraggableDirective} from \"./path-framework/form/draggable.directive\";\r\nimport {BackButtonComponent} from \"./path-framework/page/element/button/back-button.component\";\r\nimport {LinkButtonComponent} from \"./path-framework/page/element/button/link-button.component\";\r\nimport {PageDeleteButtonComponent} from \"./path-framework/page/element/button/page-delete-button.component\";\r\nimport {ButtonComponent} from \"./path-framework/page/element/button/button.component\";\r\nimport {PageLabelComponent} from \"./path-framework/page/element/label/page-label.component\";\r\nimport {ListComponent} from \"./path-framework/page/element/list/list.component\";\r\nimport {CustomDirective} from \"./path-framework/page/element/custom/custom.directive\";\r\nimport {CustomContainerComponent} from \"./path-framework/page/element/custom/custom-container.component\";\r\nimport {ElementListComponent} from \"./path-framework/page/element/element-list/element-list.component\";\r\nimport {BreadcrumbComponent} from \"./path-framework/page/element/breadcrumb/breadcrumb.component\";\r\n\r\n@NgModule({\r\n    imports:      [\r\n        BrowserModule,\r\n        HttpClientModule,\r\n        FormsModule,\r\n        CommonModule,\r\n        BrowserAnimationsModule,\r\n        BsDatepickerModule.forRoot(),\r\n        TooltipModule.forRoot()\r\n    ],\r\n    declarations: [\r\n        DraggableDirective,\r\n        LabelFieldComponent,\r\n        FieldListFieldComponent,\r\n        FormComponent,\r\n        ChartComponent,\r\n        AutoCompleteComponent,\r\n        ProgressBarComponent,\r\n        TextFieldComponent,\r\n        TranslationFieldComponent,\r\n        NumberFieldComponent,\r\n        DateFieldComponent,\r\n        RadioGroupComponent,\r\n        CheckboxGroupComponent,\r\n        FormFieldLabelComponent,\r\n        BackButtonComponent,\r\n        LinkButtonComponent,\r\n        PageDeleteButtonComponent,\r\n        ButtonComponent,\r\n        PageLabelComponent,\r\n        ListComponent,\r\n        CustomDirective,\r\n        CustomContainerComponent,\r\n        ElementListComponent,\r\n        ButtonGroupComponent,\r\n        BreadcrumbComponent,\r\n        FileUploadComponent\r\n    ],\r\n    exports:      [\r\n        DraggableDirective,\r\n        BrowserModule,\r\n        HttpClientModule,\r\n        FormsModule,\r\n        CommonModule,\r\n        BsDatepickerModule,\r\n        TooltipModule,\r\n        LabelFieldComponent,\r\n        FieldListFieldComponent,\r\n        FormComponent,\r\n        ChartComponent,\r\n        AutoCompleteComponent,\r\n        ProgressBarComponent,\r\n        TextFieldComponent,\r\n        TranslationFieldComponent,\r\n        NumberFieldComponent,\r\n        DateFieldComponent,\r\n        RadioGroupComponent,\r\n        CheckboxGroupComponent,\r\n        FormFieldLabelComponent,\r\n        BackButtonComponent,\r\n        LinkButtonComponent,\r\n        PageDeleteButtonComponent,\r\n        ButtonComponent,\r\n        PageLabelComponent,\r\n        ListComponent,\r\n        CustomDirective,\r\n        CustomContainerComponent,\r\n        ElementListComponent,\r\n        ButtonGroupComponent,\r\n        BreadcrumbComponent,\r\n        FileUploadComponent\r\n    ],\r\n})\r\nexport class AppModule {\r\n    static forRoot(): ModuleWithProviders {\r\n        return {ngModule: AppModule, providers: []};\r\n    }\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './app.module';\n\nexport {DraggableDirective as Éµa} from './path-framework/form/draggable.directive';\nexport {AutoCompleteComponent as Éµf} from './path-framework/form/field/auto-complete/auto-complete-field.component';\nexport {CheckboxGroupComponent as Éµm} from './path-framework/form/field/checkbox/checkbox-group.component';\nexport {DateFieldComponent as Éµk} from './path-framework/form/field/date/date-field.component';\nexport {FieldListFieldComponent as Éµc} from './path-framework/form/field/fieldList/field-list-field.component';\nexport {FileUploadComponent as Éµz} from './path-framework/form/field/file-upload/file-upload.component';\nexport {FormFieldLabelComponent as Éµn} from './path-framework/form/field/form-field-label.component';\nexport {LabelFieldComponent as Éµb} from './path-framework/form/field/label/label-field.component';\nexport {NumberFieldComponent as Éµj} from './path-framework/form/field/number/number-field.component';\nexport {ProgressBarComponent as Éµg} from './path-framework/form/field/progress-bar/progress-bar.component';\nexport {RadioGroupComponent as Éµl} from './path-framework/form/field/radio/radio-group.component';\nexport {TextFieldComponent as Éµh} from './path-framework/form/field/text/text-field.component';\nexport {TranslationFieldComponent as Éµi} from './path-framework/form/field/translation/translation-field.component';\nexport {FormComponent as Éµd} from './path-framework/form/form.component';\nexport {BreadcrumbComponent as Éµy} from './path-framework/page/element/breadcrumb/breadcrumb.component';\nexport {ButtonGroupComponent as Éµx} from './path-framework/page/element/button-group/button-group.component';\nexport {BackButtonComponent as Éµo} from './path-framework/page/element/button/back-button.component';\nexport {ButtonComponent as Éµr} from './path-framework/page/element/button/button.component';\nexport {LinkButtonComponent as Éµp} from './path-framework/page/element/button/link-button.component';\nexport {PageDeleteButtonComponent as Éµq} from './path-framework/page/element/button/page-delete-button.component';\nexport {ChartComponent as Éµe} from './path-framework/page/element/chart/chart.component';\nexport {CustomContainerComponent as Éµv} from './path-framework/page/element/custom/custom-container.component';\nexport {CustomDirective as Éµu} from './path-framework/page/element/custom/custom.directive';\nexport {ElementListComponent as Éµw} from './path-framework/page/element/element-list/element-list.component';\nexport {PageLabelComponent as Éµs} from './path-framework/page/element/label/page-label.component';\nexport {ListComponent as Éµt} from './path-framework/page/element/list/list.component';"],"names":["tslib_1.__decorate"],"mappings":"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"}